import { IdentityV3, IdentityV4 } from "./forwardedTypes";
import { SemaphoreIdentityPCD } from "./SemaphoreIdentityPCD";
/**
 * Given a semaphore v4 public key, returns the corresponding v4 identity commitment.
 */
export declare function v4PublicKeyToCommitment(publicKey: string): string;
/**
 * Given a semaphore v4 identity, returns it's EdDSA public key as a base64 encoded string.
 */
export declare function v4PublicKey(identity: IdentityV4): string;
/**
 * Given a semaphore v4 identity, returns it's EdDSA private key as a base64 encoded string.
 */
export declare function v4PrivateKey(identity: IdentityV4): string;
/**
 * Deterministic migration from a v3 to a v4 semaphore identity. Not reversible.
 */
export declare function v3tov4Identity(v3Identity: IdentityV3): IdentityV4;
export declare function v3IdentityToPCD(v3Identity: IdentityV3): SemaphoreIdentityPCD;
//# sourceMappingURL=v4IdentityUtils.d.ts.map