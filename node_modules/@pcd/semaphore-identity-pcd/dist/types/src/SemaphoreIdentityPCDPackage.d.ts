import { DisplayOptions, PCDPackage, SerializedPCD } from "@pcd/pcd-types";
import { SemaphoreIdentityPCD, SemaphoreIdentityPCDArgs, SemaphoreIdentityPCDClaim, SemaphoreIdentityPCDProof } from "./SemaphoreIdentityPCD";
export declare function prove(args: SemaphoreIdentityPCDArgs): Promise<SemaphoreIdentityPCD>;
export declare function verify(pcd: SemaphoreIdentityPCD): Promise<boolean>;
export declare function serialize(pcd: SemaphoreIdentityPCD): Promise<SerializedPCD<SemaphoreIdentityPCD>>;
export declare function deserialize(serialized: string): Promise<SemaphoreIdentityPCD>;
export declare function getDisplayOptions(pcd: SemaphoreIdentityPCD): DisplayOptions;
/**
 * PCD-conforming wrapper for the Semaphore zero-knowledge protocol. You can
 * find documentation of Semaphore here: https://semaphore.appliedzkp.org/docs/introduction
 */
export declare const SemaphoreIdentityPCDPackage: PCDPackage<SemaphoreIdentityPCDClaim, SemaphoreIdentityPCDProof, SemaphoreIdentityPCDArgs>;
//# sourceMappingURL=SemaphoreIdentityPCDPackage.d.ts.map