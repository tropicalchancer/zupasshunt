export interface Listener<T> {
    (t: T): unknown;
}
export declare class Emitter<T = void> {
    private listeners;
    listen(l: Listener<T>): () => void;
    emit(t: T): void;
}
export interface Wrapper<T> {
    value: T;
}
export declare function wrap<T>(t: T): Wrapper<T>;
//# sourceMappingURL=emitter.d.ts.map