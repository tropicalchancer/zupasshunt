import { SerializedPCD } from "@pcd/pcd-types";
export declare const PCDActionType: {
    readonly ReplaceInFolder: "ReplaceInFolder_action";
    readonly AppendToFolder: "AppendToFolder_action";
    readonly DeleteFolder: "DeleteFolder_action";
};
export type PCDAction = AppendToFolderAction | ReplaceInFolderAction | DeleteFolderAction;
export interface ReplaceInFolderAction {
    type: typeof PCDActionType.ReplaceInFolder;
    folder: string;
    pcds: SerializedPCD[];
}
export declare function getPcdsFromActions(actions: PCDAction[]): SerializedPCD[];
export declare function isReplaceInFolderAction(action: PCDAction): action is ReplaceInFolderAction;
export declare function expectIsReplaceInFolderAction(action: PCDAction): asserts action is ReplaceInFolderAction;
export interface AppendToFolderAction {
    type: typeof PCDActionType.AppendToFolder;
    folder: string;
    pcds: SerializedPCD[];
}
export declare function isAppendToFolderAction(action: PCDAction): action is AppendToFolderAction;
export interface DeleteFolderAction {
    type: typeof PCDActionType.DeleteFolder;
    folder: string;
    recursive: boolean;
}
export declare function isDeleteFolderAction(action: PCDAction): action is DeleteFolderAction;
//# sourceMappingURL=actions.d.ts.map