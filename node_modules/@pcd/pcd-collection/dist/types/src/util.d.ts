export declare const PATH_SEP = "/";
/**
 * Gets the list of folders that are direct descendants of a given
 * path, given a list of directories that are present. For example,
 * if the full list of paths is something like:
 *
 * a/b/c/d
 * a/b/q/r
 *
 * ... then this function would say that the list of child folders of
 * a/b is [a/b/c, a/b/q], even though a/b/c and a/b/q are not explicitly listed.
 */
export declare function getFoldersInFolder(folderPath: string, allPaths: string[]): string[];
/**
 * For a path like a/b/c/d, returns a/b/c, a/b, a, and the root
 * denoted by "".
 */
export declare function getAllAncestors(path: string): string[];
/**
 * Checks that a particular child path is a direct child of a
 * particular parent.
 */
export declare function isChild(parent: string, child: string): boolean;
/**
 * Checks if {@link possibleAncestor} has {@link possibleDescendant} as a
 * descendant.
 * eg. a/b/c/d is a descendant of a/b, but not of a/q.
 */
export declare function isFolderAncestor(possibleDescendant: string, possibleAncestor: string): boolean;
/**
 * Splits a path via the path separator.
 */
export declare function splitPath(path: string): string[];
/**
 * Joins path segments with the separator, escaping each segment.
 */
export declare function joinPath(...segments: string[]): string;
/**
 * Removes unnecessary path separators from a path.
 */
export declare function normalizePath(path: string): string;
/**
 * For a path like a/b/c, returns a/b. for the root returns the root.
 */
export declare function getParentFolder(folderPath: string): string;
/**
 * Returns whether or not this path is the root. Root canonically
 * represented by an empty string, but also normalizes from /, //, ///, etc.
 */
export declare function isRootFolder(folderPath: string): boolean;
/**
 * Gets the last path segment of a path. Eg. a/b/c would return c.
 * For root, returns root.
 */
export declare function getNameFromPath(path: string): string;
/**
 * Removes any path separators from a file name.
 */
export declare function escapePathSegment(name: string): string;
//# sourceMappingURL=util.d.ts.map