"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isDeleteFolderAction = exports.isAppendToFolderAction = exports.expectIsReplaceInFolderAction = exports.isReplaceInFolderAction = exports.getPcdsFromActions = exports.PCDActionType = void 0;
exports.PCDActionType = {
    ReplaceInFolder: "ReplaceInFolder_action",
    AppendToFolder: "AppendToFolder_action",
    DeleteFolder: "DeleteFolder_action"
};
function getPcdsFromActions(actions) {
    let results = [];
    actions.forEach((action) => {
        if (isAppendToFolderAction(action) || isReplaceInFolderAction(action)) {
            results = [...results, ...action.pcds];
        }
    });
    return results;
}
exports.getPcdsFromActions = getPcdsFromActions;
function isReplaceInFolderAction(action) {
    return action.type === exports.PCDActionType.ReplaceInFolder;
}
exports.isReplaceInFolderAction = isReplaceInFolderAction;
function expectIsReplaceInFolderAction(action) {
    if (action.type !== exports.PCDActionType.ReplaceInFolder) {
        throw new Error("Expected action to be a ReplaceInFolderAction");
    }
}
exports.expectIsReplaceInFolderAction = expectIsReplaceInFolderAction;
function isAppendToFolderAction(action) {
    return action.type === exports.PCDActionType.AppendToFolder;
}
exports.isAppendToFolderAction = isAppendToFolderAction;
function isDeleteFolderAction(action) {
    return action.type === exports.PCDActionType.DeleteFolder;
}
exports.isDeleteFolderAction = isDeleteFolderAction;
