"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isDeleteFolderPermission = exports.isReplaceInFolderPermission = exports.isAppendToFolderPermission = exports.isPCDFolderPermission = exports.PCDPermissionType = void 0;
// This enum should never overlap with PCDActionType
// See test "hould not allow action types to be assigned to permission
// types or vice-versa" in permissions.spec.ts
exports.PCDPermissionType = {
    ReplaceInFolder: "ReplaceInFolder_permission",
    AppendToFolder: "AppendToFolder_permission",
    DeleteFolder: "DeleteFolder_permission"
};
function isPCDFolderPermission(permission) {
    return [
        exports.PCDPermissionType.AppendToFolder,
        exports.PCDPermissionType.ReplaceInFolder,
        exports.PCDPermissionType.DeleteFolder
    ].includes(permission.type);
}
exports.isPCDFolderPermission = isPCDFolderPermission;
function isAppendToFolderPermission(permission) {
    return permission.type === exports.PCDPermissionType.AppendToFolder;
}
exports.isAppendToFolderPermission = isAppendToFolderPermission;
function isReplaceInFolderPermission(permission) {
    return permission.type === exports.PCDPermissionType.ReplaceInFolder;
}
exports.isReplaceInFolderPermission = isReplaceInFolderPermission;
function isDeleteFolderPermission(permission) {
    return permission.type === exports.PCDPermissionType.DeleteFolder;
}
exports.isDeleteFolderPermission = isDeleteFolderPermission;
