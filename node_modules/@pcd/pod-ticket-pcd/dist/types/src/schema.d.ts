import { z } from "zod";
import { TicketCategory } from "./PODTicketPCD";
export declare const TicketDataSchema: z.ZodObject<{
    eventName: z.ZodString;
    ticketName: z.ZodString;
    checkerEmail: z.ZodOptional<z.ZodString>;
    imageUrl: z.ZodOptional<z.ZodString>;
    imageAltText: z.ZodOptional<z.ZodString>;
    ticketId: z.ZodString;
    eventId: z.ZodString;
    productId: z.ZodString;
    timestampConsumed: z.ZodNumber;
    timestampSigned: z.ZodNumber;
    /**
     * V3 semaphore commitment.
     * Optional, used only by legacy v3 tickets.
     * @deprecated
     */
    attendeeSemaphoreId: z.ZodEffects<z.ZodOptional<z.ZodEffects<z.ZodString, string, string>>, string | undefined, string | undefined>;
    /**
     * Semaphore v4 identity commitment.
     */
    owner: z.ZodEffects<z.ZodOptional<z.ZodString>, string | undefined, string | undefined>;
    isConsumed: z.ZodBoolean;
    isRevoked: z.ZodBoolean;
    ticketCategory: z.ZodNativeEnum<typeof TicketCategory>;
    attendeeName: z.ZodString;
    attendeeEmail: z.ZodString;
    qrCodeOverrideImageUrl: z.ZodOptional<z.ZodString>;
    ticketSecret: z.ZodOptional<z.ZodString>;
    eventLocation: z.ZodOptional<z.ZodString>;
    eventStartDate: z.ZodOptional<z.ZodString>;
    isAddOn: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    eventName: string;
    ticketName: string;
    ticketId: string;
    eventId: string;
    productId: string;
    timestampConsumed: number;
    timestampSigned: number;
    isConsumed: boolean;
    isRevoked: boolean;
    ticketCategory: TicketCategory;
    attendeeName: string;
    attendeeEmail: string;
    checkerEmail?: string | undefined;
    imageUrl?: string | undefined;
    imageAltText?: string | undefined;
    attendeeSemaphoreId?: string | undefined;
    owner?: string | undefined;
    qrCodeOverrideImageUrl?: string | undefined;
    ticketSecret?: string | undefined;
    eventLocation?: string | undefined;
    eventStartDate?: string | undefined;
    isAddOn?: boolean | undefined;
}, {
    eventName: string;
    ticketName: string;
    ticketId: string;
    eventId: string;
    productId: string;
    timestampConsumed: number;
    timestampSigned: number;
    isConsumed: boolean;
    isRevoked: boolean;
    ticketCategory: TicketCategory;
    attendeeName: string;
    attendeeEmail: string;
    checkerEmail?: string | undefined;
    imageUrl?: string | undefined;
    imageAltText?: string | undefined;
    attendeeSemaphoreId?: string | undefined;
    owner?: string | undefined;
    qrCodeOverrideImageUrl?: string | undefined;
    ticketSecret?: string | undefined;
    eventLocation?: string | undefined;
    eventStartDate?: string | undefined;
    isAddOn?: boolean | undefined;
}>;
export type IPODTicketData = z.infer<typeof TicketDataSchema>;
//# sourceMappingURL=schema.d.ts.map