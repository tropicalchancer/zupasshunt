"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isEdDSAPublicKey = exports.isEqualEdDSAPublicKey = exports.newEdDSAPrivateKey = void 0;
const util_1 = require("@pcd/util");
/**
 * Creates a new EdDSA private key generating a cryptographically strong random 32-byte value.
 */
function newEdDSAPrivateKey() {
    return (0, util_1.toHexString)((0, util_1.getRandomValues)(32));
}
exports.newEdDSAPrivateKey = newEdDSAPrivateKey;
/**
 * Compares two EdDSA public keys for equality.
 */
function isEqualEdDSAPublicKey(a, b) {
    return a[0] === b[0] && a[1] === b[1];
}
exports.isEqualEdDSAPublicKey = isEqualEdDSAPublicKey;
/**
 * Checks if a value is a valid EdDSAPublicKey
 */
function isEdDSAPublicKey(maybeKey) {
    if (maybeKey instanceof Array &&
        maybeKey.length === 2 &&
        typeof maybeKey[0] === "string" &&
        typeof maybeKey[1] === "string" &&
        !isNaN(Number("0x" + maybeKey[0])) &&
        !isNaN(Number("0x" + maybeKey[1]))) {
        return true;
    }
    else {
        return false;
    }
}
exports.isEdDSAPublicKey = isEdDSAPublicKey;
