"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.deserializeSemaphoreGroup = exports.serializeSemaphoreGroup = void 0;
function serializeSemaphoreGroup(group, name) {
    return {
        id: group.id.toString(),
        name,
        members: group.members.map((m) => m.toString()),
        depth: group.depth,
        zeroValue: group.zeroValue.toString()
    };
}
exports.serializeSemaphoreGroup = serializeSemaphoreGroup;
async function deserializeSemaphoreGroup(serializedGroup) {
    const { Group } = await Promise.resolve().then(() => __importStar(require("@semaphore-protocol/group")));
    const group = new Group(BigInt(serializedGroup.id), serializedGroup.depth, serializedGroup.members.map((m) => BigInt(m)));
    return group;
}
exports.deserializeSemaphoreGroup = deserializeSemaphoreGroup;
