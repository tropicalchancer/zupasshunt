"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.passportDecrypt = exports.passportEncrypt = exports.getHash = void 0;
const passportCrypto_1 = require("./passportCrypto");
const sharedCryptoPromise = passportCrypto_1.PCDCrypto.newInstance();
async function getHash(str, cryptoPromise = sharedCryptoPromise) {
    const crypto = await cryptoPromise;
    const hashed = crypto.cryptoHash(str);
    return hashed;
}
exports.getHash = getHash;
async function passportEncrypt(data, encryptionKey, cryptoPromise = sharedCryptoPromise) {
    const crypto = await cryptoPromise;
    const nonce = crypto.generateRandomKey(192);
    const ciphertext = crypto.xchacha20Encrypt(data, nonce, encryptionKey, "abc");
    return {
        nonce,
        ciphertext
    };
}
exports.passportEncrypt = passportEncrypt;
async function passportDecrypt(encryptedStorage, encryptionKey, cryptoPromise = sharedCryptoPromise) {
    const crypto = await cryptoPromise;
    const plaintext = crypto.xchacha20Decrypt(encryptedStorage.ciphertext, encryptedStorage.nonce, encryptionKey, "abc");
    if (!plaintext) {
        throw new Error("could not decrypt storage");
    }
    return plaintext;
}
exports.passportDecrypt = passportDecrypt;
