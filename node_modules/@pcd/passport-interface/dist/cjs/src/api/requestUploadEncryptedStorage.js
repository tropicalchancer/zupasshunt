"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.requestUploadEncryptedStorage = void 0;
const url_join_1 = __importDefault(require("url-join"));
const apiResult_1 = require("./apiResult");
const makeRequest_1 = require("./makeRequest");
/**
 * Asks to upload an e2ee encrypted blob to the Zupass server. The server
 * never learns the user's encryption key.
 *
 * Never rejects. All information encoded in the resolved response.
 */
async function requestUploadEncryptedStorage(zupassServerUrl, blobKey, encryptedStorage, knownRevision, pcd) {
    return (0, makeRequest_1.httpPost)((0, url_join_1.default)(zupassServerUrl, `/sync/v3/save`), {
        onValue: async (resText) => ({
            value: JSON.parse(resText),
            success: true
        }),
        onError: apiResult_1.onNamedAPIError
    }, {
        blobKey,
        encryptedBlob: JSON.stringify(encryptedStorage),
        knownRevision,
        pcd
    });
}
exports.requestUploadEncryptedStorage = requestUploadEncryptedStorage;
