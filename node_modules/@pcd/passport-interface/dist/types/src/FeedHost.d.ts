import { ListFeedsRequest, ListFeedsResponseValue, ListSingleFeedRequest, PollFeedRequest, PollFeedResponseValue } from "./RequestTypes";
import { Feed } from "./SubscriptionManager";
export interface HostedFeed<IFeed extends Feed = Feed> {
    feed: IFeed;
    handleRequest(request: PollFeedRequest): Promise<PollFeedResponseValue>;
}
export declare class FeedHost<IFeed extends Feed = Feed> {
    protected readonly hostedFeed: HostedFeed<IFeed>[];
    protected readonly providerUrl: string;
    protected readonly providerName: string;
    constructor(feeds: HostedFeed<IFeed>[], providerUrl: string, providerName: string);
    getProviderUrl(): string;
    getProviderName(): string;
    handleFeedRequest(request: PollFeedRequest): Promise<PollFeedResponseValue>;
    handleListFeedsRequest(_request: ListFeedsRequest): Promise<ListFeedsResponseValue>;
    hasFeedWithId(feedId: string): boolean;
    handleListSingleFeedRequest(_request: ListSingleFeedRequest): Promise<ListFeedsResponseValue>;
}
//# sourceMappingURL=FeedHost.d.ts.map