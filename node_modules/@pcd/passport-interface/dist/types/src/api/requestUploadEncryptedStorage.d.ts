import { EncryptedPacket } from "@pcd/passport-crypto";
import { SerializedPCD } from "@pcd/pcd-types";
import { UploadEncryptedStorageResponseValue } from "../RequestTypes";
import { APIResult, NamedAPIError } from "./apiResult";
/**
 * Asks to upload an e2ee encrypted blob to the Zupass server. The server
 * never learns the user's encryption key.
 *
 * Never rejects. All information encoded in the resolved response.
 */
export declare function requestUploadEncryptedStorage(zupassServerUrl: string, blobKey: string, encryptedStorage: EncryptedPacket, knownRevision?: string, pcd?: SerializedPCD): Promise<UploadEncryptedStorageResult>;
export type UploadEncryptedStorageResult = APIResult<UploadEncryptedStorageResponseValue, NamedAPIError>;
//# sourceMappingURL=requestUploadEncryptedStorage.d.ts.map