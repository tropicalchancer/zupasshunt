/**
 * Baby Jubjub prime, i.e. the order of the Baby Jubjub base field, which is the
 * order of the BN254 scalar field.
 */
export declare const BABY_JUB_PRIME: bigint;
/**
 * Encoding of -1 in the Baby Jubjub base field (as p-1).
 */
export declare const BABY_JUB_NEGATIVE_ONE: bigint;
/**
 * Encoding of -1 in the Baby Jubjub 251-bit prime order subgroup's scalar
 * field (as subgroupOrder-1).
 */
export declare const BABY_JUB_SUBGROUP_ORDER_MINUS_ONE: bigint;
/**
 * Determines whether a given number (as decimal string) represents -1,
 * either directly, or via a value of p-1 in a Baby Jubjub field.
 *
 * @param value integer encoded in a string
 */
export declare function babyJubIsNegativeOne(value: string): boolean;
/**
 * Hashes a message to be signed with sha256 and truncates to fit into a
 * baby jub jub field element.  The result includes the top 248 bits of
 * the 256 bit hash.
 *
 * @param signal The initial message.
 * @returns The outputted hash, fed in as a signal to the Semaphore proof.
 */
export declare function generateSnarkMessageHash(signal: string | undefined): bigint;
//# sourceMappingURL=SNARKHelpers.d.ts.map