/// <reference types="node" />
import { Buffer } from "buffer";
/**
 * Converts a byte array to a hex string.  Opposite of fromHexString().
 */
export declare function toHexString(bytes: Uint8Array): string;
/**
 * Converts a hex string to a byte-array.  Opposite of toHexString().
 */
export declare function fromHexString(hexString: string): Buffer;
/**
 * Converts a number (as decimal string) to a UUID (as string) in the
 * format of uuid.stringify.
 */
export declare function decStringToBigIntToUuid(value: string): string;
/**
 * Converts a UUID string into a bigint.
 */
export declare function uuidToBigInt(v: string): bigint;
/**
 * Converts a native number to a bigint.
 */
export declare function numberToBigInt(v: number): bigint;
/**
 * Converts a hex number to a bigint.
 */
export declare function hexToBigInt(v: string): bigint;
/**
 * Converts a boolean to a bigint value of 0 or 1.
 */
export declare function booleanToBigInt(v: boolean): bigint;
//# sourceMappingURL=NumericRepresentation.d.ts.map