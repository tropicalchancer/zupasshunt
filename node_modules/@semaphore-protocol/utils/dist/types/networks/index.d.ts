/**
 * @module Networks
 * This module provides a collection of utility functions to provide the other internal
 * packages and developers with information on deployed contracts and networks supported
 * by Semaphore.
 */
import deployedContracts from "./deployed-contracts.json";
import supportedNetworks from "./supported-networks";
export type SupportedNetwork = keyof typeof supportedNetworks;
export declare const defaultNetwork: SupportedNetwork;
/**
 * Returns true if a network is supported by Semaphore, false otherwise.
 * @param supportedNetwork The network to be checked.
 */
export declare function isSupportedNetwork(supportedNetwork: string): boolean;
/**
 * Utility function to get an object compatible with the Hardhat 'networks' option.
 * If the private key is not defined it returns an empty object.
 * @param privateKey Private key to be used with networks.
 * @returns An object compatible with the Hardhat 'networks' option.
 */
export declare function getHardhatNetworks(privateKey?: string): any;
/**
 * Returns name, address and start block of a Semaphore contract deployed
 * on a specific supported network.
 * @param supportedNetwork The network supported by Semaphore.
 * @returns An object with name, address and start block of the deployed contract.
 */
export declare function getDeployedContract(supportedNetwork: SupportedNetwork): {
    name: string;
    address: string;
    startBlock: number;
};
export { deployedContracts, supportedNetworks };
