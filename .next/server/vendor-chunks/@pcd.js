/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@pcd";
exports.ids = ["vendor-chunks/@pcd"];
exports.modules = {

/***/ "(ssr)/./node_modules/@pcd/passport-interface/dist/esm/src/PassportInterface.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@pcd/passport-interface/dist/esm/src/PassportInterface.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PCDRequestType: () => (/* binding */ PCDRequestType),\n/* harmony export */   PayloadType: () => (/* binding */ PayloadType),\n/* harmony export */   constructZupassPcdAddRequestUrl: () => (/* binding */ constructZupassPcdAddRequestUrl),\n/* harmony export */   constructZupassPcdGetRequestUrl: () => (/* binding */ constructZupassPcdGetRequestUrl),\n/* harmony export */   constructZupassPcdMintRequestUrl: () => (/* binding */ constructZupassPcdMintRequestUrl),\n/* harmony export */   constructZupassPcdProveAndAddRequestUrl: () => (/* binding */ constructZupassPcdProveAndAddRequestUrl),\n/* harmony export */   getWithoutProvingUrl: () => (/* binding */ getWithoutProvingUrl),\n/* harmony export */   postPendingPCDMessage: () => (/* binding */ postPendingPCDMessage),\n/* harmony export */   postSerializedMultiPCDMessage: () => (/* binding */ postSerializedMultiPCDMessage),\n/* harmony export */   postSerializedPCDMessage: () => (/* binding */ postSerializedPCDMessage)\n/* harmony export */ });\nvar PCDRequestType;\n(function (PCDRequestType) {\n    PCDRequestType[\"Get\"] = \"Get\";\n    PCDRequestType[\"GetWithoutProving\"] = \"GetWithoutProving\";\n    PCDRequestType[\"Add\"] = \"Add\";\n    PCDRequestType[\"ProveAndAdd\"] = \"ProveAndAdd\";\n})(PCDRequestType || (PCDRequestType = {}));\nfunction getWithoutProvingUrl(zupassClientUrl, returnUrl, pcdType, postMessage = false) {\n    const req = {\n        type: PCDRequestType.GetWithoutProving,\n        pcdType,\n        returnUrl,\n        postMessage\n    };\n    const encReq = encodeURIComponent(JSON.stringify(req));\n    return `${zupassClientUrl}#/get-without-proving?request=${encReq}`;\n}\nfunction constructZupassPcdGetRequestUrl(zupassClientUrl, returnUrl, pcdType, args, options, postMessage = false) {\n    const req = {\n        type: PCDRequestType.Get,\n        returnUrl: returnUrl,\n        args: args,\n        pcdType,\n        options,\n        postMessage\n    };\n    const encReq = encodeURIComponent(JSON.stringify(req));\n    return `${zupassClientUrl}#/prove?request=${encReq}`;\n}\nfunction constructZupassPcdAddRequestUrl(zupassClientUrl, returnUrl, pcd, folder, postMessage = false, redirectToFolder) {\n    const req = {\n        type: PCDRequestType.Add,\n        returnUrl,\n        pcd,\n        folder,\n        postMessage,\n        redirectToFolder\n    };\n    const eqReq = encodeURIComponent(JSON.stringify(req));\n    return `${zupassClientUrl}#/add?request=${eqReq}`;\n}\nfunction constructZupassPcdMintRequestUrl(zupassClientUrl, mintUrl, returnUrl, pcd, folder, postMessage = false, redirectToFolder) {\n    const req = {\n        type: PCDRequestType.Add,\n        mintUrl,\n        returnUrl,\n        pcd,\n        folder,\n        postMessage,\n        redirectToFolder\n    };\n    const eqReq = encodeURIComponent(JSON.stringify(req));\n    return `${zupassClientUrl}#/add?request=${eqReq}`;\n}\nfunction constructZupassPcdProveAndAddRequestUrl(zupassClientUrl, returnUrl, pcdType, args, options, returnPCD, folder, postMessage = false) {\n    const req = {\n        type: PCDRequestType.ProveAndAdd,\n        returnUrl: returnUrl,\n        pcdType,\n        args,\n        options,\n        returnPCD,\n        folder,\n        postMessage\n    };\n    const eqReq = encodeURIComponent(JSON.stringify(req));\n    return `${zupassClientUrl}#/add?request=${eqReq}`;\n}\nfunction postSerializedPCDMessage(window, serialized) {\n    window.postMessage({ encodedPCD: JSON.stringify(serialized) }, \"*\");\n}\nfunction postSerializedMultiPCDMessage(window, pcds) {\n    window.postMessage({ multiplePCDs: JSON.stringify(pcds) }, \"*\");\n}\nfunction postPendingPCDMessage(window, pending) {\n    window.postMessage({ encodedPendingPCD: JSON.stringify(pending) }, \"*\");\n}\nvar PayloadType;\n(function (PayloadType) {\n    PayloadType[\"RedirectTopicData\"] = \"topic-data\";\n    PayloadType[\"NullifierHash\"] = \"nullifier-hash\";\n    PayloadType[\"AnonTopicDataPayload\"] = \"anon-topic-data-payload\";\n    PayloadType[\"ReactData\"] = \"react-data\";\n})(PayloadType || (PayloadType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC9wYXNzcG9ydC1pbnRlcmZhY2UvZGlzdC9lc20vc3JjL1Bhc3Nwb3J0SW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdDQUF3QztBQUNsQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxnQkFBZ0IsZ0NBQWdDLE9BQU87QUFDckU7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsZ0JBQWdCLGtCQUFrQixPQUFPO0FBQ3ZEO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGdCQUFnQixnQkFBZ0IsTUFBTTtBQUNwRDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGdCQUFnQixnQkFBZ0IsTUFBTTtBQUNwRDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsZ0JBQWdCLGdCQUFnQixNQUFNO0FBQ3BEO0FBQ087QUFDUCx5QkFBeUIsd0NBQXdDO0FBQ2pFO0FBQ087QUFDUCx5QkFBeUIsb0NBQW9DO0FBQzdEO0FBQ087QUFDUCx5QkFBeUIsNENBQTRDO0FBQ3JFO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxrQ0FBa0MiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGFuY2VtY2FsbGlzdGVyL1Byb2plY3RzL3p1cGFzc2h1bnQvbm9kZV9tb2R1bGVzL0BwY2QvcGFzc3BvcnQtaW50ZXJmYWNlL2Rpc3QvZXNtL3NyYy9QYXNzcG9ydEludGVyZmFjZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIFBDRFJlcXVlc3RUeXBlO1xuKGZ1bmN0aW9uIChQQ0RSZXF1ZXN0VHlwZSkge1xuICAgIFBDRFJlcXVlc3RUeXBlW1wiR2V0XCJdID0gXCJHZXRcIjtcbiAgICBQQ0RSZXF1ZXN0VHlwZVtcIkdldFdpdGhvdXRQcm92aW5nXCJdID0gXCJHZXRXaXRob3V0UHJvdmluZ1wiO1xuICAgIFBDRFJlcXVlc3RUeXBlW1wiQWRkXCJdID0gXCJBZGRcIjtcbiAgICBQQ0RSZXF1ZXN0VHlwZVtcIlByb3ZlQW5kQWRkXCJdID0gXCJQcm92ZUFuZEFkZFwiO1xufSkoUENEUmVxdWVzdFR5cGUgfHwgKFBDRFJlcXVlc3RUeXBlID0ge30pKTtcbmV4cG9ydCBmdW5jdGlvbiBnZXRXaXRob3V0UHJvdmluZ1VybCh6dXBhc3NDbGllbnRVcmwsIHJldHVyblVybCwgcGNkVHlwZSwgcG9zdE1lc3NhZ2UgPSBmYWxzZSkge1xuICAgIGNvbnN0IHJlcSA9IHtcbiAgICAgICAgdHlwZTogUENEUmVxdWVzdFR5cGUuR2V0V2l0aG91dFByb3ZpbmcsXG4gICAgICAgIHBjZFR5cGUsXG4gICAgICAgIHJldHVyblVybCxcbiAgICAgICAgcG9zdE1lc3NhZ2VcbiAgICB9O1xuICAgIGNvbnN0IGVuY1JlcSA9IGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShyZXEpKTtcbiAgICByZXR1cm4gYCR7enVwYXNzQ2xpZW50VXJsfSMvZ2V0LXdpdGhvdXQtcHJvdmluZz9yZXF1ZXN0PSR7ZW5jUmVxfWA7XG59XG5leHBvcnQgZnVuY3Rpb24gY29uc3RydWN0WnVwYXNzUGNkR2V0UmVxdWVzdFVybCh6dXBhc3NDbGllbnRVcmwsIHJldHVyblVybCwgcGNkVHlwZSwgYXJncywgb3B0aW9ucywgcG9zdE1lc3NhZ2UgPSBmYWxzZSkge1xuICAgIGNvbnN0IHJlcSA9IHtcbiAgICAgICAgdHlwZTogUENEUmVxdWVzdFR5cGUuR2V0LFxuICAgICAgICByZXR1cm5Vcmw6IHJldHVyblVybCxcbiAgICAgICAgYXJnczogYXJncyxcbiAgICAgICAgcGNkVHlwZSxcbiAgICAgICAgb3B0aW9ucyxcbiAgICAgICAgcG9zdE1lc3NhZ2VcbiAgICB9O1xuICAgIGNvbnN0IGVuY1JlcSA9IGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShyZXEpKTtcbiAgICByZXR1cm4gYCR7enVwYXNzQ2xpZW50VXJsfSMvcHJvdmU/cmVxdWVzdD0ke2VuY1JlcX1gO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvbnN0cnVjdFp1cGFzc1BjZEFkZFJlcXVlc3RVcmwoenVwYXNzQ2xpZW50VXJsLCByZXR1cm5VcmwsIHBjZCwgZm9sZGVyLCBwb3N0TWVzc2FnZSA9IGZhbHNlLCByZWRpcmVjdFRvRm9sZGVyKSB7XG4gICAgY29uc3QgcmVxID0ge1xuICAgICAgICB0eXBlOiBQQ0RSZXF1ZXN0VHlwZS5BZGQsXG4gICAgICAgIHJldHVyblVybCxcbiAgICAgICAgcGNkLFxuICAgICAgICBmb2xkZXIsXG4gICAgICAgIHBvc3RNZXNzYWdlLFxuICAgICAgICByZWRpcmVjdFRvRm9sZGVyXG4gICAgfTtcbiAgICBjb25zdCBlcVJlcSA9IGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShyZXEpKTtcbiAgICByZXR1cm4gYCR7enVwYXNzQ2xpZW50VXJsfSMvYWRkP3JlcXVlc3Q9JHtlcVJlcX1gO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvbnN0cnVjdFp1cGFzc1BjZE1pbnRSZXF1ZXN0VXJsKHp1cGFzc0NsaWVudFVybCwgbWludFVybCwgcmV0dXJuVXJsLCBwY2QsIGZvbGRlciwgcG9zdE1lc3NhZ2UgPSBmYWxzZSwgcmVkaXJlY3RUb0ZvbGRlcikge1xuICAgIGNvbnN0IHJlcSA9IHtcbiAgICAgICAgdHlwZTogUENEUmVxdWVzdFR5cGUuQWRkLFxuICAgICAgICBtaW50VXJsLFxuICAgICAgICByZXR1cm5VcmwsXG4gICAgICAgIHBjZCxcbiAgICAgICAgZm9sZGVyLFxuICAgICAgICBwb3N0TWVzc2FnZSxcbiAgICAgICAgcmVkaXJlY3RUb0ZvbGRlclxuICAgIH07XG4gICAgY29uc3QgZXFSZXEgPSBlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkocmVxKSk7XG4gICAgcmV0dXJuIGAke3p1cGFzc0NsaWVudFVybH0jL2FkZD9yZXF1ZXN0PSR7ZXFSZXF9YDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjb25zdHJ1Y3RadXBhc3NQY2RQcm92ZUFuZEFkZFJlcXVlc3RVcmwoenVwYXNzQ2xpZW50VXJsLCByZXR1cm5VcmwsIHBjZFR5cGUsIGFyZ3MsIG9wdGlvbnMsIHJldHVyblBDRCwgZm9sZGVyLCBwb3N0TWVzc2FnZSA9IGZhbHNlKSB7XG4gICAgY29uc3QgcmVxID0ge1xuICAgICAgICB0eXBlOiBQQ0RSZXF1ZXN0VHlwZS5Qcm92ZUFuZEFkZCxcbiAgICAgICAgcmV0dXJuVXJsOiByZXR1cm5VcmwsXG4gICAgICAgIHBjZFR5cGUsXG4gICAgICAgIGFyZ3MsXG4gICAgICAgIG9wdGlvbnMsXG4gICAgICAgIHJldHVyblBDRCxcbiAgICAgICAgZm9sZGVyLFxuICAgICAgICBwb3N0TWVzc2FnZVxuICAgIH07XG4gICAgY29uc3QgZXFSZXEgPSBlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkocmVxKSk7XG4gICAgcmV0dXJuIGAke3p1cGFzc0NsaWVudFVybH0jL2FkZD9yZXF1ZXN0PSR7ZXFSZXF9YDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwb3N0U2VyaWFsaXplZFBDRE1lc3NhZ2Uod2luZG93LCBzZXJpYWxpemVkKSB7XG4gICAgd2luZG93LnBvc3RNZXNzYWdlKHsgZW5jb2RlZFBDRDogSlNPTi5zdHJpbmdpZnkoc2VyaWFsaXplZCkgfSwgXCIqXCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBvc3RTZXJpYWxpemVkTXVsdGlQQ0RNZXNzYWdlKHdpbmRvdywgcGNkcykge1xuICAgIHdpbmRvdy5wb3N0TWVzc2FnZSh7IG11bHRpcGxlUENEczogSlNPTi5zdHJpbmdpZnkocGNkcykgfSwgXCIqXCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBvc3RQZW5kaW5nUENETWVzc2FnZSh3aW5kb3csIHBlbmRpbmcpIHtcbiAgICB3aW5kb3cucG9zdE1lc3NhZ2UoeyBlbmNvZGVkUGVuZGluZ1BDRDogSlNPTi5zdHJpbmdpZnkocGVuZGluZykgfSwgXCIqXCIpO1xufVxuZXhwb3J0IHZhciBQYXlsb2FkVHlwZTtcbihmdW5jdGlvbiAoUGF5bG9hZFR5cGUpIHtcbiAgICBQYXlsb2FkVHlwZVtcIlJlZGlyZWN0VG9waWNEYXRhXCJdID0gXCJ0b3BpYy1kYXRhXCI7XG4gICAgUGF5bG9hZFR5cGVbXCJOdWxsaWZpZXJIYXNoXCJdID0gXCJudWxsaWZpZXItaGFzaFwiO1xuICAgIFBheWxvYWRUeXBlW1wiQW5vblRvcGljRGF0YVBheWxvYWRcIl0gPSBcImFub24tdG9waWMtZGF0YS1wYXlsb2FkXCI7XG4gICAgUGF5bG9hZFR5cGVbXCJSZWFjdERhdGFcIl0gPSBcInJlYWN0LWRhdGFcIjtcbn0pKFBheWxvYWRUeXBlIHx8IChQYXlsb2FkVHlwZSA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/passport-interface/dist/esm/src/PassportInterface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/passport-interface/dist/esm/src/PassportPopup/core.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@pcd/passport-interface/dist/esm/src/PassportPopup/core.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   openZupassPopup: () => (/* binding */ openZupassPopup),\n/* harmony export */   openZupassPopupUrl: () => (/* binding */ openZupassPopupUrl),\n/* harmony export */   receiveZupassPopupMessage: () => (/* binding */ receiveZupassPopupMessage),\n/* harmony export */   zupassPopupExecute: () => (/* binding */ zupassPopupExecute),\n/* harmony export */   zupassPopupSetup: () => (/* binding */ zupassPopupSetup)\n/* harmony export */ });\n/*\n * Call this function on a dedicated /popup page in your app to integrate your\n * app with the Zupass proving/auth popup flow. The popup flow is optional,\n * as you could also just redirect to Zupass in the same page, but the popup\n * gives authentication a more oauth feel, which users are already familiar\n * with.\n *\n * Navigates the current window to a `proofUrl` provided in the query\n * parameters (if any), or posts a message to the window's opener if the query\n * parameters contain a valid result (either an encoded PCD or an encoded\n * pending PCD). If a message is sent, the current window is also closed\n * immediately. This functionality is only valid in a popup window.\n *\n * The /popup page's URL is provided to {@link openZupassPopup} as the popupUrl\n * parameter.\n */\nasync function zupassPopupSetup() {\n    if (!window.opener) {\n        return \"zupassPopupSetup() can only be called from within a popup window\";\n    }\n    let params;\n    // Hash routing is commonly used in web applications to enable client-side\n    // routing without requiring server-side configuration, typically single-page applications.\n    // Without hash routing, the server should always serve the same index.html file for any route.\n    // Some providers, like Github Pages, don't provide this feature.\n    // To read the parameters of a URL with hash routing, the hash must first be removed.\n    if (window.location.href.includes(window.location.origin + \"/#/\")) {\n        const url = new URL(window.location.href.replace(\"#\", \"\"));\n        params = url.searchParams;\n    }\n    else {\n        params = new URLSearchParams(window.location.search);\n    }\n    const paramsProofUrl = params.get(\"proofUrl\");\n    const paramsProof = params.get(\"proof\");\n    const paramsEncodingPendingPCD = params.get(\"encodedPendingPCD\");\n    const finished = params.get(\"finished\");\n    // If we have a proof URL, we should direct the user to that URL first.\n    if (paramsProofUrl) {\n        window.location.href = paramsProofUrl;\n    }\n    else if (finished) {\n        // Later, Zupass redirects back with a result. Send it to our parent.\n        if (paramsProof) {\n            window.opener.postMessage({ encodedPCD: paramsProof }, \"*\");\n        }\n        window.close();\n        // Almost certainly the window will close. But if, for some reason, it\n        // does not then we should return a string that will be shown as an error\n        // message. Wait a few seconds, so the error message doesn't \"flash\" up as\n        // the screen is closing.\n        await new Promise((resolve) => window.setTimeout(() => resolve(), 1000 * 3));\n        return \"Finished. Please close this window.\";\n    }\n    else if (paramsEncodingPendingPCD) {\n        // Later, Zupass redirects back with a encodedPendingPCD. Send it to our parent.\n        window.opener.postMessage({ encodedPendingPCD: paramsEncodingPendingPCD }, \"*\");\n        window.close();\n        await new Promise((resolve) => window.setTimeout(() => resolve(), 1000 * 3));\n        return \"Finished. Please close this window.\";\n    }\n}\n/**\n * Open up a Zupass popup window on a local popup page, which will redirect to\n * Zupass. Once the action is complete, Zupass will redirect back, and the\n * local page will send a message to its opener and close itself. See\n * {@link zupassPopupSetup} and {@link receiveZupassPopupMessage}.\n *\n * @param {string} popupUrl is a URL to the local page that hosts some\n * JavaScript calling {@link zupassPopupSetup}\n * @param {string} proofUrl is a URL pointing to Zupass, and should be\n * generated using the construct*url() functions in ../PassportInterface.ts\n */\nfunction openZupassPopup(popupUrl, proofUrl) {\n    const url = `${popupUrl}?proofUrl=${encodeURIComponent(proofUrl)}`;\n    return openZupassPopupUrl(url);\n}\n/**\n * Opens a Zupass popup window to a given URL. Can be used to open Zupass\n * directly, allowing Zupass to send a message back and bypassing the need for\n * a special page to redirect.\n */\nfunction openZupassPopupUrl(url) {\n    // Calling window.open from within a React hook can cause problems.\n    // The workaround is to do it asynchronously, as per:\n    // https://stackoverflow.com/questions/76944918/should-not-already-be-working-on-window-open-in-simple-react-app\n    return new Promise((resolve) => window.setTimeout(() => resolve(window.open(url, \"_blank\", \"width=450,height=600,top=100,popup\")), 0));\n}\n/**\n * Asynchronous function that listens for PCDs and PendingPCDs from a Zupass\n * popup window using message passing and event listeners.\n */\nfunction receiveZupassPopupMessage(signal) {\n    return new Promise((resolve) => {\n        const receiveMessage = (ev) => {\n            if (ev.data.encodedPCD) {\n                resolve({ type: \"pcd\", pcdStr: ev.data.encodedPCD });\n                window.removeEventListener(\"message\", receiveMessage);\n            }\n            else if (ev.data.encodedPendingPCD) {\n                resolve({\n                    type: \"pendingPcd\",\n                    pendingPcdStr: ev.data.encodedPendingPCD\n                });\n                window.removeEventListener(\"message\", receiveMessage);\n            }\n            else if (ev.data.multiplePCDs) {\n                resolve({\n                    type: \"multi-pcd\",\n                    pcds: JSON.parse(ev.data.multiplePCDs)\n                });\n                window.removeEventListener(\"message\", receiveMessage);\n            }\n        };\n        window.addEventListener(\"message\", receiveMessage, {\n            // Remove this event listener automatically if abort signal fires.\n            signal\n        });\n        signal.addEventListener(\"abort\", () => {\n            resolve({ type: \"aborted\" });\n        });\n    });\n}\n/**\n * An asynchronous function that opens a Zupass popup window, and returns a\n * {@link PopupActionResult} containing either:\n * - An encoded PCD\n * - An encoded pending PCD\n * - An indication that the popup was closed with no result\n * - An indication that the popup was blocked from opening\n *\n * By detecting popup blockers and the popup being closed without result, this\n * offers broader functionality than calling {@link openZupassPopupWithLocalRedirect} and\n * {@link receiveZupassPopupMessage} separately. It is added as a new API to\n * avoid breaking backwards-compatibility for existing code.\n */\nasync function zupassPopupExecute(proofUrl, popupUrl) {\n    const popup = await (popupUrl\n        ? openZupassPopup(proofUrl, popupUrl)\n        : openZupassPopupUrl(proofUrl));\n    // If we did not get a window from `openZupassPopup`, it was blocked\n    // See https://developer.mozilla.org/en-US/docs/Web/API/Window/open#return_value\n    // This allows the caller to gracefully handle this, e.g. by notifying the\n    // user\n    if (!popup) {\n        return { type: \"popupBlocked\" };\n    }\n    // If the popup is closed, the promise waiting for an event from the popup\n    // will not know that this has happened, and so will remain unresolved\n    // forever, leaking memory. To avoid this, we pass in an AbortController to\n    // receiveZupassPopupMessage(), which allows it to resolve.\n    // This is necessary even when using Promise.race(), as Promise.race() will\n    // not clean up the unresolved promises even after they have definitely\n    // \"lost\" the race.\n    const abortReceiveMessage = new AbortController();\n    // There's no way to receive an event indicating that a popup window has been\n    // closed, and we can't rely on the code running inside the popup to send us\n    // a message, so instead we have to check for it on a timer.\n    // We are doing this in order to detect cases in which the popup window is\n    // closed without any action being taken (e.g. a proof being generated).\n    const closePromise = new Promise((resolve) => {\n        const closeCheckInterval = window.setInterval(() => {\n            if (popup.closed) {\n                clearInterval(closeCheckInterval);\n                // In the case where an action is completed, the popup will send a\n                // message, and then close itself. In testing, it seems that the\n                // message is always received before we pick up on the fact that the\n                // popup is closed. However, for safety, we will avoid resolving this\n                // promise for another 250ms, to ensure that the other promise\n                // (containing the received message) definitely resolves first.\n                window.setTimeout(() => {\n                    resolve({ type: \"popupClosed\" });\n                    // In the event that the message-receiving promise has *not*\n                    // resolved, we need to tell it to resolve now, to avoid a memory\n                    // leak.\n                    abortReceiveMessage.abort();\n                }, 250);\n            }\n        }, 100);\n    });\n    // Race the closing of the window against the receipt of a message, and\n    // return whichever resolves first.\n    return Promise.race([\n        closePromise,\n        receiveZupassPopupMessage(abortReceiveMessage.signal)\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/passport-interface/dist/esm/src/PassportPopup/core.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/passport-interface/dist/esm/src/PassportPopup/react.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@pcd/passport-interface/dist/esm/src/PassportPopup/react.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useZupassPopupMessages: () => (/* binding */ useZupassPopupMessages),\n/* harmony export */   useZupassPopupSetup: () => (/* binding */ useZupassPopupSetup)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core.js */ \"(ssr)/./node_modules/@pcd/passport-interface/dist/esm/src/PassportPopup/core.js\");\n\n\n/**\n * React hook that listens for PCDs and PendingPCDs from a Zupass popup window.\n * A thin wrapper around {@link receiveZupassPopupMessage}.\n */\nfunction useZupassPopupMessages() {\n    const [pcdStr, setPCDStr] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    const [multiPcdStrs, setMultiPcdStrs] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [pendingPCDStr, setPendingPCDStr] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    // Listen for PCDs coming back from the Zupass popup\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        const abortReceiveMessage = new AbortController();\n        (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.receiveZupassPopupMessage)(abortReceiveMessage.signal).then((result) => {\n            if (result.type === \"pcd\") {\n                setPCDStr(result.pcdStr);\n            }\n            else if (result.type === \"pendingPcd\") {\n                setPendingPCDStr(result.pendingPcdStr);\n            }\n            else if (result.type === \"multi-pcd\") {\n                setMultiPcdStrs(result.pcds);\n            }\n        });\n        return () => {\n            // If the hook is unmounted, signal that the message handlers can detach\n            // by aborting.\n            abortReceiveMessage.abort();\n        };\n    }, []);\n    return [pcdStr, pendingPCDStr, multiPcdStrs];\n}\n/**\n * Call this hook on a dedicated /popup page in your app to integrate your\n * app with the Zupass proving/auth popup flow.\n *\n * See {@link zupassPopupSetup} for further details.\n */\nfunction useZupassPopupSetup() {\n    // Usually this page redirects immediately. If not, show an error.\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.zupassPopupSetup)().then((maybeErrorMessage) => {\n            if (maybeErrorMessage) {\n                setError(maybeErrorMessage);\n            }\n        });\n    }, []);\n    return error;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC9wYXNzcG9ydC1pbnRlcmZhY2UvZGlzdC9lc20vc3JjL1Bhc3Nwb3J0UG9wdXAvcmVhY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNEM7QUFDNEI7QUFDeEU7QUFDQTtBQUNBLDBCQUEwQixnQ0FBZ0M7QUFDMUQ7QUFDTztBQUNQLGdDQUFnQywrQ0FBUTtBQUN4Qyw0Q0FBNEMsK0NBQVE7QUFDcEQsOENBQThDLCtDQUFRO0FBQ3REO0FBQ0EsSUFBSSxnREFBUztBQUNiO0FBQ0EsUUFBUSxtRUFBeUI7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx3QkFBd0I7QUFDaEM7QUFDTztBQUNQO0FBQ0EsOEJBQThCLCtDQUFRO0FBQ3RDLElBQUksZ0RBQVM7QUFDYixRQUFRLDBEQUFnQjtBQUN4QjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGFuY2VtY2FsbGlzdGVyL1Byb2plY3RzL3p1cGFzc2h1bnQvbm9kZV9tb2R1bGVzL0BwY2QvcGFzc3BvcnQtaW50ZXJmYWNlL2Rpc3QvZXNtL3NyYy9QYXNzcG9ydFBvcHVwL3JlYWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHJlY2VpdmVadXBhc3NQb3B1cE1lc3NhZ2UsIHp1cGFzc1BvcHVwU2V0dXAgfSBmcm9tIFwiLi9jb3JlLmpzXCI7XG4vKipcbiAqIFJlYWN0IGhvb2sgdGhhdCBsaXN0ZW5zIGZvciBQQ0RzIGFuZCBQZW5kaW5nUENEcyBmcm9tIGEgWnVwYXNzIHBvcHVwIHdpbmRvdy5cbiAqIEEgdGhpbiB3cmFwcGVyIGFyb3VuZCB7QGxpbmsgcmVjZWl2ZVp1cGFzc1BvcHVwTWVzc2FnZX0uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VadXBhc3NQb3B1cE1lc3NhZ2VzKCkge1xuICAgIGNvbnN0IFtwY2RTdHIsIHNldFBDRFN0cl0gPSB1c2VTdGF0ZShcIlwiKTtcbiAgICBjb25zdCBbbXVsdGlQY2RTdHJzLCBzZXRNdWx0aVBjZFN0cnNdID0gdXNlU3RhdGUoW10pO1xuICAgIGNvbnN0IFtwZW5kaW5nUENEU3RyLCBzZXRQZW5kaW5nUENEU3RyXSA9IHVzZVN0YXRlKFwiXCIpO1xuICAgIC8vIExpc3RlbiBmb3IgUENEcyBjb21pbmcgYmFjayBmcm9tIHRoZSBadXBhc3MgcG9wdXBcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBjb25zdCBhYm9ydFJlY2VpdmVNZXNzYWdlID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgICAgICByZWNlaXZlWnVwYXNzUG9wdXBNZXNzYWdlKGFib3J0UmVjZWl2ZU1lc3NhZ2Uuc2lnbmFsKS50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgICAgICAgIGlmIChyZXN1bHQudHlwZSA9PT0gXCJwY2RcIikge1xuICAgICAgICAgICAgICAgIHNldFBDRFN0cihyZXN1bHQucGNkU3RyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHJlc3VsdC50eXBlID09PSBcInBlbmRpbmdQY2RcIikge1xuICAgICAgICAgICAgICAgIHNldFBlbmRpbmdQQ0RTdHIocmVzdWx0LnBlbmRpbmdQY2RTdHIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAocmVzdWx0LnR5cGUgPT09IFwibXVsdGktcGNkXCIpIHtcbiAgICAgICAgICAgICAgICBzZXRNdWx0aVBjZFN0cnMocmVzdWx0LnBjZHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIC8vIElmIHRoZSBob29rIGlzIHVubW91bnRlZCwgc2lnbmFsIHRoYXQgdGhlIG1lc3NhZ2UgaGFuZGxlcnMgY2FuIGRldGFjaFxuICAgICAgICAgICAgLy8gYnkgYWJvcnRpbmcuXG4gICAgICAgICAgICBhYm9ydFJlY2VpdmVNZXNzYWdlLmFib3J0KCk7XG4gICAgICAgIH07XG4gICAgfSwgW10pO1xuICAgIHJldHVybiBbcGNkU3RyLCBwZW5kaW5nUENEU3RyLCBtdWx0aVBjZFN0cnNdO1xufVxuLyoqXG4gKiBDYWxsIHRoaXMgaG9vayBvbiBhIGRlZGljYXRlZCAvcG9wdXAgcGFnZSBpbiB5b3VyIGFwcCB0byBpbnRlZ3JhdGUgeW91clxuICogYXBwIHdpdGggdGhlIFp1cGFzcyBwcm92aW5nL2F1dGggcG9wdXAgZmxvdy5cbiAqXG4gKiBTZWUge0BsaW5rIHp1cGFzc1BvcHVwU2V0dXB9IGZvciBmdXJ0aGVyIGRldGFpbHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VadXBhc3NQb3B1cFNldHVwKCkge1xuICAgIC8vIFVzdWFsbHkgdGhpcyBwYWdlIHJlZGlyZWN0cyBpbW1lZGlhdGVseS4gSWYgbm90LCBzaG93IGFuIGVycm9yLlxuICAgIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGUoXCJcIik7XG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgenVwYXNzUG9wdXBTZXR1cCgpLnRoZW4oKG1heWJlRXJyb3JNZXNzYWdlKSA9PiB7XG4gICAgICAgICAgICBpZiAobWF5YmVFcnJvck1lc3NhZ2UpIHtcbiAgICAgICAgICAgICAgICBzZXRFcnJvcihtYXliZUVycm9yTWVzc2FnZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0sIFtdKTtcbiAgICByZXR1cm4gZXJyb3I7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/passport-interface/dist/esm/src/PassportPopup/react.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/pcd-types/dist/esm/src/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@pcd/pcd-types/dist/esm/src/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ArgumentTypeName: () => (/* reexport safe */ _pcd_js__WEBPACK_IMPORTED_MODULE_0__.ArgumentTypeName),\n/* harmony export */   isBigIntArgument: () => (/* reexport safe */ _pcd_js__WEBPACK_IMPORTED_MODULE_0__.isBigIntArgument),\n/* harmony export */   isBooleanArgument: () => (/* reexport safe */ _pcd_js__WEBPACK_IMPORTED_MODULE_0__.isBooleanArgument),\n/* harmony export */   isNumberArgument: () => (/* reexport safe */ _pcd_js__WEBPACK_IMPORTED_MODULE_0__.isNumberArgument),\n/* harmony export */   isObjectArgument: () => (/* reexport safe */ _pcd_js__WEBPACK_IMPORTED_MODULE_0__.isObjectArgument),\n/* harmony export */   isPCDArgument: () => (/* reexport safe */ _pcd_js__WEBPACK_IMPORTED_MODULE_0__.isPCDArgument),\n/* harmony export */   isRecordContainerArgument: () => (/* reexport safe */ _pcd_js__WEBPACK_IMPORTED_MODULE_0__.isRecordContainerArgument),\n/* harmony export */   isRevealListArgument: () => (/* reexport safe */ _pcd_js__WEBPACK_IMPORTED_MODULE_0__.isRevealListArgument),\n/* harmony export */   isStringArgument: () => (/* reexport safe */ _pcd_js__WEBPACK_IMPORTED_MODULE_0__.isStringArgument),\n/* harmony export */   isStringArrayArgument: () => (/* reexport safe */ _pcd_js__WEBPACK_IMPORTED_MODULE_0__.isStringArrayArgument),\n/* harmony export */   isToggleListArgument: () => (/* reexport safe */ _pcd_js__WEBPACK_IMPORTED_MODULE_0__.isToggleListArgument)\n/* harmony export */ });\n/* harmony import */ var _pcd_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pcd.js */ \"(ssr)/./node_modules/@pcd/pcd-types/dist/esm/src/pcd.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC9wY2QtdHlwZXMvZGlzdC9lc20vc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUF5QiIsInNvdXJjZXMiOlsiL1VzZXJzL2NoYW5jZW1jYWxsaXN0ZXIvUHJvamVjdHMvenVwYXNzaHVudC9ub2RlX21vZHVsZXMvQHBjZC9wY2QtdHlwZXMvZGlzdC9lc20vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL3BjZC5qc1wiO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/pcd-types/dist/esm/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/pcd-types/dist/esm/src/pcd.js":
/*!*********************************************************!*\
  !*** ./node_modules/@pcd/pcd-types/dist/esm/src/pcd.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ArgumentTypeName: () => (/* binding */ ArgumentTypeName),\n/* harmony export */   isBigIntArgument: () => (/* binding */ isBigIntArgument),\n/* harmony export */   isBooleanArgument: () => (/* binding */ isBooleanArgument),\n/* harmony export */   isNumberArgument: () => (/* binding */ isNumberArgument),\n/* harmony export */   isObjectArgument: () => (/* binding */ isObjectArgument),\n/* harmony export */   isPCDArgument: () => (/* binding */ isPCDArgument),\n/* harmony export */   isRecordContainerArgument: () => (/* binding */ isRecordContainerArgument),\n/* harmony export */   isRevealListArgument: () => (/* binding */ isRevealListArgument),\n/* harmony export */   isStringArgument: () => (/* binding */ isStringArgument),\n/* harmony export */   isStringArrayArgument: () => (/* binding */ isStringArrayArgument),\n/* harmony export */   isToggleListArgument: () => (/* binding */ isToggleListArgument)\n/* harmony export */ });\n/**\n * Fields of the object passed into {@link PCDPackage.prove} can only represent\n * one of the following types. {@link Unknown} is included to be used in a similar\n * way as {@code unknown} is used in TypeScript.\n */\nvar ArgumentTypeName;\n(function (ArgumentTypeName) {\n    ArgumentTypeName[\"String\"] = \"String\";\n    ArgumentTypeName[\"Number\"] = \"Number\";\n    ArgumentTypeName[\"BigInt\"] = \"BigInt\";\n    ArgumentTypeName[\"Boolean\"] = \"Boolean\";\n    ArgumentTypeName[\"Object\"] = \"Object\";\n    ArgumentTypeName[\"StringArray\"] = \"StringArray\";\n    ArgumentTypeName[\"PCD\"] = \"PCD\";\n    ArgumentTypeName[\"RecordContainer\"] = \"RecordContainer\";\n    ArgumentTypeName[\"ToggleList\"] = \"ToggleList\";\n    ArgumentTypeName[\"Unknown\"] = \"Unknown\";\n})(ArgumentTypeName || (ArgumentTypeName = {}));\nfunction isRecordContainerArgument(arg) {\n    return arg.argumentType === ArgumentTypeName.RecordContainer;\n}\nfunction isStringArgument(arg) {\n    return arg.argumentType === ArgumentTypeName.String;\n}\nfunction isNumberArgument(arg) {\n    return arg.argumentType === ArgumentTypeName.Number;\n}\nfunction isBigIntArgument(arg) {\n    return arg.argumentType === ArgumentTypeName.BigInt;\n}\nfunction isBooleanArgument(arg) {\n    return arg.argumentType === ArgumentTypeName.Boolean;\n}\nfunction isObjectArgument(arg) {\n    return arg.argumentType === ArgumentTypeName.Object;\n}\nfunction isStringArrayArgument(arg) {\n    return arg.argumentType === ArgumentTypeName.StringArray;\n}\nfunction isPCDArgument(arg) {\n    return arg.argumentType === ArgumentTypeName.PCD;\n}\nfunction isToggleListArgument(arg) {\n    return (arg.argumentType === ArgumentTypeName.ToggleList &&\n        arg.value !== undefined &&\n        arg.value !== null &&\n        typeof arg.value === \"object\" &&\n        Object.values(arg.value).every((v) => typeof v === \"boolean\"));\n}\nfunction isRevealListArgument(arg) {\n    return (arg.value !== undefined &&\n        Object.keys(arg.value).every((k) => k.startsWith(\"reveal\")));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC9wY2QtdHlwZXMvZGlzdC9lc20vc3JjL3BjZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0EscUNBQXFDLHdCQUF3QjtBQUM3RCxnQ0FBZ0MsZUFBZTtBQUMvQyxXQUFXLGVBQWU7QUFDMUI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDRDQUE0QztBQUN0QztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvY2hhbmNlbWNhbGxpc3Rlci9Qcm9qZWN0cy96dXBhc3NodW50L25vZGVfbW9kdWxlcy9AcGNkL3BjZC10eXBlcy9kaXN0L2VzbS9zcmMvcGNkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRmllbGRzIG9mIHRoZSBvYmplY3QgcGFzc2VkIGludG8ge0BsaW5rIFBDRFBhY2thZ2UucHJvdmV9IGNhbiBvbmx5IHJlcHJlc2VudFxuICogb25lIG9mIHRoZSBmb2xsb3dpbmcgdHlwZXMuIHtAbGluayBVbmtub3dufSBpcyBpbmNsdWRlZCB0byBiZSB1c2VkIGluIGEgc2ltaWxhclxuICogd2F5IGFzIHtAY29kZSB1bmtub3dufSBpcyB1c2VkIGluIFR5cGVTY3JpcHQuXG4gKi9cbmV4cG9ydCB2YXIgQXJndW1lbnRUeXBlTmFtZTtcbihmdW5jdGlvbiAoQXJndW1lbnRUeXBlTmFtZSkge1xuICAgIEFyZ3VtZW50VHlwZU5hbWVbXCJTdHJpbmdcIl0gPSBcIlN0cmluZ1wiO1xuICAgIEFyZ3VtZW50VHlwZU5hbWVbXCJOdW1iZXJcIl0gPSBcIk51bWJlclwiO1xuICAgIEFyZ3VtZW50VHlwZU5hbWVbXCJCaWdJbnRcIl0gPSBcIkJpZ0ludFwiO1xuICAgIEFyZ3VtZW50VHlwZU5hbWVbXCJCb29sZWFuXCJdID0gXCJCb29sZWFuXCI7XG4gICAgQXJndW1lbnRUeXBlTmFtZVtcIk9iamVjdFwiXSA9IFwiT2JqZWN0XCI7XG4gICAgQXJndW1lbnRUeXBlTmFtZVtcIlN0cmluZ0FycmF5XCJdID0gXCJTdHJpbmdBcnJheVwiO1xuICAgIEFyZ3VtZW50VHlwZU5hbWVbXCJQQ0RcIl0gPSBcIlBDRFwiO1xuICAgIEFyZ3VtZW50VHlwZU5hbWVbXCJSZWNvcmRDb250YWluZXJcIl0gPSBcIlJlY29yZENvbnRhaW5lclwiO1xuICAgIEFyZ3VtZW50VHlwZU5hbWVbXCJUb2dnbGVMaXN0XCJdID0gXCJUb2dnbGVMaXN0XCI7XG4gICAgQXJndW1lbnRUeXBlTmFtZVtcIlVua25vd25cIl0gPSBcIlVua25vd25cIjtcbn0pKEFyZ3VtZW50VHlwZU5hbWUgfHwgKEFyZ3VtZW50VHlwZU5hbWUgPSB7fSkpO1xuZXhwb3J0IGZ1bmN0aW9uIGlzUmVjb3JkQ29udGFpbmVyQXJndW1lbnQoYXJnKSB7XG4gICAgcmV0dXJuIGFyZy5hcmd1bWVudFR5cGUgPT09IEFyZ3VtZW50VHlwZU5hbWUuUmVjb3JkQ29udGFpbmVyO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzU3RyaW5nQXJndW1lbnQoYXJnKSB7XG4gICAgcmV0dXJuIGFyZy5hcmd1bWVudFR5cGUgPT09IEFyZ3VtZW50VHlwZU5hbWUuU3RyaW5nO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzTnVtYmVyQXJndW1lbnQoYXJnKSB7XG4gICAgcmV0dXJuIGFyZy5hcmd1bWVudFR5cGUgPT09IEFyZ3VtZW50VHlwZU5hbWUuTnVtYmVyO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzQmlnSW50QXJndW1lbnQoYXJnKSB7XG4gICAgcmV0dXJuIGFyZy5hcmd1bWVudFR5cGUgPT09IEFyZ3VtZW50VHlwZU5hbWUuQmlnSW50O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzQm9vbGVhbkFyZ3VtZW50KGFyZykge1xuICAgIHJldHVybiBhcmcuYXJndW1lbnRUeXBlID09PSBBcmd1bWVudFR5cGVOYW1lLkJvb2xlYW47XG59XG5leHBvcnQgZnVuY3Rpb24gaXNPYmplY3RBcmd1bWVudChhcmcpIHtcbiAgICByZXR1cm4gYXJnLmFyZ3VtZW50VHlwZSA9PT0gQXJndW1lbnRUeXBlTmFtZS5PYmplY3Q7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNTdHJpbmdBcnJheUFyZ3VtZW50KGFyZykge1xuICAgIHJldHVybiBhcmcuYXJndW1lbnRUeXBlID09PSBBcmd1bWVudFR5cGVOYW1lLlN0cmluZ0FycmF5O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzUENEQXJndW1lbnQoYXJnKSB7XG4gICAgcmV0dXJuIGFyZy5hcmd1bWVudFR5cGUgPT09IEFyZ3VtZW50VHlwZU5hbWUuUENEO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVG9nZ2xlTGlzdEFyZ3VtZW50KGFyZykge1xuICAgIHJldHVybiAoYXJnLmFyZ3VtZW50VHlwZSA9PT0gQXJndW1lbnRUeXBlTmFtZS5Ub2dnbGVMaXN0ICYmXG4gICAgICAgIGFyZy52YWx1ZSAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgIGFyZy52YWx1ZSAhPT0gbnVsbCAmJlxuICAgICAgICB0eXBlb2YgYXJnLnZhbHVlID09PSBcIm9iamVjdFwiICYmXG4gICAgICAgIE9iamVjdC52YWx1ZXMoYXJnLnZhbHVlKS5ldmVyeSgodikgPT4gdHlwZW9mIHYgPT09IFwiYm9vbGVhblwiKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNSZXZlYWxMaXN0QXJndW1lbnQoYXJnKSB7XG4gICAgcmV0dXJuIChhcmcudmFsdWUgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICBPYmplY3Qua2V5cyhhcmcudmFsdWUpLmV2ZXJ5KChrKSA9PiBrLnN0YXJ0c1dpdGgoXCJyZXZlYWxcIikpKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/pcd-types/dist/esm/src/pcd.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/pod/dist/esm/src/podChecks.js":
/*!*********************************************************!*\
  !*** ./node_modules/@pcd/pod/dist/esm/src/podChecks.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POD_BASE64_REGEX: () => (/* binding */ POD_BASE64_REGEX),\n/* harmony export */   POD_HEX_REGEX: () => (/* binding */ POD_HEX_REGEX),\n/* harmony export */   POD_PRIVATE_KEY_REGEX: () => (/* binding */ POD_PRIVATE_KEY_REGEX),\n/* harmony export */   POD_PUBLIC_KEY_REGEX: () => (/* binding */ POD_PUBLIC_KEY_REGEX),\n/* harmony export */   POD_SIGNATURE_REGEX: () => (/* binding */ POD_SIGNATURE_REGEX),\n/* harmony export */   PRIVATE_KEY_ENCODING_GROUPS: () => (/* binding */ PRIVATE_KEY_ENCODING_GROUPS),\n/* harmony export */   PUBLIC_KEY_ENCODING_GROUPS: () => (/* binding */ PUBLIC_KEY_ENCODING_GROUPS),\n/* harmony export */   SIGNATURE_ENCODING_GROUPS: () => (/* binding */ SIGNATURE_ENCODING_GROUPS),\n/* harmony export */   checkBase64Encoding: () => (/* binding */ checkBase64Encoding),\n/* harmony export */   checkBigintBounds: () => (/* binding */ checkBigintBounds),\n/* harmony export */   checkHexEncoding: () => (/* binding */ checkHexEncoding),\n/* harmony export */   checkPODEntries: () => (/* binding */ checkPODEntries),\n/* harmony export */   checkPODName: () => (/* binding */ checkPODName),\n/* harmony export */   checkPODValue: () => (/* binding */ checkPODValue),\n/* harmony export */   checkPrivateKeyFormat: () => (/* binding */ checkPrivateKeyFormat),\n/* harmony export */   checkPublicKeyFormat: () => (/* binding */ checkPublicKeyFormat),\n/* harmony export */   checkSignatureFormat: () => (/* binding */ checkSignatureFormat),\n/* harmony export */   isPODArithmeticValue: () => (/* binding */ isPODArithmeticValue),\n/* harmony export */   isPODNumericValue: () => (/* binding */ isPODNumericValue),\n/* harmony export */   requireType: () => (/* binding */ requireType),\n/* harmony export */   requireValueType: () => (/* binding */ requireValueType)\n/* harmony export */ });\n/* harmony import */ var _podTypes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./podTypes.js */ \"(ssr)/./node_modules/@pcd/pod/dist/esm/src/podTypes.js\");\n/* harmony import */ var _podUtil_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./podUtil.js */ \"(ssr)/./node_modules/@pcd/pod/dist/esm/src/podUtil.js\");\n\n\n/**\n * Private keys are 32 bytes (any arbitrary bytes), represented as Base64 or\n * hexadecimal\n *\n * This regex matches any supported format, with match groups usable to\n * determine the format, in the order above.\n */\nconst POD_PRIVATE_KEY_REGEX = new RegExp(/^(?:([A-Za-z0-9+/]{43}=?)|([0-9A-Fa-f]{64}))$/);\n/**\n * Description of the match groups in {@link POD_PRIVATE_KEY_REGEX} and how they\n * map to encoding formats, as needed by {@link decodeBytesAuto}.\n */\nconst PRIVATE_KEY_ENCODING_GROUPS = [\n    { index: 1, encoding: \"base64\" },\n    { index: 2, encoding: \"hex\" }\n];\n/**\n * Public keys are 32 bytes (a packed elliptic curve point), represented as\n * Base64 or hexadecimal.  Base64 padding is optional.\n *\n * This regex matches any supported format, with match groups usable to\n * determine the format, in the order above.\n */\nconst POD_PUBLIC_KEY_REGEX = new RegExp(/^(?:([A-Za-z0-9+/]{43}=?)|([0-9A-Fa-f]{64}))$/);\n/**\n * Description of the match groups in {@link POD_PUBLIC_KEY_REGEX} and how they\n * map to encoding formats, as needed by {@link decodeBytesAuto}.\n */\nconst PUBLIC_KEY_ENCODING_GROUPS = [\n    { index: 1, encoding: \"base64\" },\n    { index: 2, encoding: \"hex\" }\n];\n/**\n * Signatures are 64 bytes (one packed elliptic curve point, one scalar),\n * represented as Base64 or hexadecimal.  Base64 padding is optional.\n *\n * This regex matches any supported format, with match groups usable to\n * determine the format, in the order above.\n */\nconst POD_SIGNATURE_REGEX = new RegExp(/^(?:([A-Za-z0-9+/]{86}(?:==)?)|([0-9A-Fa-f]{128}))$/);\n/**\n * Description of the match groups in {@link POD_SIGNATURE_REGEX} and how they\n * map to encoding formats, as needed by {@link decodeBytesAuto}.\n */\nconst SIGNATURE_ENCODING_GROUPS = [\n    { index: 1, encoding: \"base64\" },\n    { index: 2, encoding: \"hex\" }\n];\n/**\n * Checks that the input matches the proper format for a private key, as given\n * by {@link POD_PRIVATE_KEY_REGEX}.\n *\n * @param privateKey the string to check\n * @returns the unmodified input, for easy chaining\n * @throws TypeError if the format doesn't match\n */\nfunction checkPrivateKeyFormat(privateKey) {\n    (0,_podUtil_js__WEBPACK_IMPORTED_MODULE_0__.decodeBytesAuto)(privateKey, POD_PRIVATE_KEY_REGEX, PRIVATE_KEY_ENCODING_GROUPS, \"Private key should be 32 bytes, encoded as hex or Base64.\");\n    return privateKey;\n}\n/**\n * Checks that the input matches the proper format for a public key, as given\n * by {@link POD_PUBLIC_KEY_REGEX}.\n *\n * @param nameForErrorMessages the name of this value, which is used only for\n *   error messages (not checked for legality).\n * @param publicKey the string to check\n * @returns the unmodified input, for easy chaining\n * @throws TypeError if the format doesn't match\n */\nfunction checkPublicKeyFormat(publicKey, nameForErrorMessages) {\n    (0,_podUtil_js__WEBPACK_IMPORTED_MODULE_0__.decodeBytesAuto)(publicKey, POD_PUBLIC_KEY_REGEX, PUBLIC_KEY_ENCODING_GROUPS, \"Public key should be 32 bytes, encoded as hex or Base64\" +\n        (nameForErrorMessages ? ` in ${nameForErrorMessages}.` : \".\"));\n    return publicKey;\n}\n/**\n * Checks that the input matches the proper format for a signature, as given\n * by {@link POD_SIGNATURE_REGEX}.\n *\n * @param signature the string to check\n * @returns the unmodified input, for easy chaining\n * @throws TypeError if the format doesn't match\n */\nfunction checkSignatureFormat(signature) {\n    (0,_podUtil_js__WEBPACK_IMPORTED_MODULE_0__.decodeBytesAuto)(signature, POD_SIGNATURE_REGEX, SIGNATURE_ENCODING_GROUPS, \"Signature should be 64 bytes, encoded as hex or Base64.\");\n    return signature;\n}\n/**\n * Regular expression matching valid Base64 encoding of any length, allowing\n * padding to be omitted.\n */\nconst POD_BASE64_REGEX = new RegExp(/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}(?:==)?|[A-Za-z0-9+/]{3}=?)?$/);\n/**\n * Checks that the given string is encoded in valid Base64, allowing padding\n * to be omitted.\n *\n * @param encoded the string-encoded bytes\n * @param errorMessage human-readable message for error thrown if decoding\n *  fails.\n * @returns\n */\nfunction checkBase64Encoding(encoded, errorMessage) {\n    if (!encoded.match(POD_BASE64_REGEX)) {\n        throw new TypeError(errorMessage ?? \"Invalid base64 bytes\");\n    }\n    return encoded;\n}\n/**\n * Regular expression matching valid hex encoding.\n */\nconst POD_HEX_REGEX = new RegExp(/^[0-9A-Fa-f]*$/);\n/**\n * Checks that the given string is encoded in valid Base64.\n *\n * @param encoded the string-encoded bytes\n * @param errorMessage human-readable message for error thrown if decoding\n *  fails.\n * @returns\n */\nfunction checkHexEncoding(encoded, errorMessage) {\n    if (!encoded.match(POD_HEX_REGEX)) {\n        throw new TypeError(errorMessage ?? \"Invalid hex bytes\");\n    }\n    return encoded;\n}\n/**\n * Checks that the input matches the proper format for an entry name, as given\n * by {@link POD_NAME_REGEX}.\n *\n * @param name the string to check\n * @returns the unmodified input, for easy chaining\n * @throws TypeError if the format doesn't match\n */\nfunction checkPODName(name) {\n    if (!name) {\n        throw new TypeError(\"POD names cannot be undefined.\");\n    }\n    if (typeof name !== \"string\") {\n        throw new TypeError(\"POD names must be strings.\");\n    }\n    if (name.match(_podTypes_js__WEBPACK_IMPORTED_MODULE_1__.POD_NAME_REGEX) === null) {\n        throw new TypeError(`Invalid POD name \"${name}\". \\\n      Only alphanumeric characters and underscores are allowed.`);\n    }\n    return name;\n}\n/**\n * Checks that the input matches the proper format for {@link PODEntries}, by\n * checking each name and value in turn.\n *\n * @param podEntries the entries to check\n * @throws TypeError if the input type, or any of the names or values are\n *   invalid\n * @throws RangeError if a value is outside of the bounds\n */\nfunction checkPODEntries(podEntries) {\n    requireType(\"entries\", podEntries, \"object\");\n    for (const [n, v] of Object.entries(podEntries)) {\n        checkPODName(n);\n        checkPODValue(n, v);\n    }\n}\n/**\n * Checks that `value` has the run-time type given by `typeName`.\n *\n * Works for any runtime JavaScript type, but three values have special meaning.\n * \"object\" is used specifically to require a non-null non-array object, while\n * \"array\" is used to mean a non-null array object, and \"null\" is used for the\n * null object.\n *\n * @param nameForErrorMessages the name for this value, used only for error\n *   messages.\n * @param value the value to check\n * @param typeName the expected type\n * @throws TypeError if the value does not have the expected type\n */\nfunction requireType(nameForErrorMessages, value, typeName) {\n    switch (typeName) {\n        case \"object\":\n            if (typeof value !== \"object\" || Array.isArray(value) || value === null) {\n                throw new TypeError(`Invalid value for entry ${nameForErrorMessages}.  \\\n          Expected a non-array non-null object.`);\n            }\n            break;\n        case \"array\":\n            if (typeof value !== \"object\" || !Array.isArray(value)) {\n                throw new TypeError(`Invalid value for entry ${nameForErrorMessages}.  \\\n          Expected an array.`);\n            }\n            break;\n        case \"null\":\n            if (typeof value !== \"object\" || Array.isArray(value) || value !== null) {\n                throw new TypeError(`Invalid value for entry ${nameForErrorMessages}.  \\\n            Expected a null object.`);\n            }\n            break;\n        default:\n            if (typeof value !== typeName) {\n                throw new TypeError(`Invalid value for entry ${nameForErrorMessages}.  \\\n          Expected type ${typeName}.`);\n            }\n            break;\n    }\n}\n/**\n * Checks that `value` has the run-time type given by `typeName`, and returns\n * the value for easy chaining.\n *\n * Works identically to {@link requireType} except that the compile-time type of\n * input/output is limited to expected POD value types to help catch errors\n * at compile time.\n *\n * @param nameForErrorMessages the name for this value, used only for error\n *   messages.\n * @param value the value to check\n * @param typeName the expected type\n * @returns the value unmodified, for easy chaining\n * @throws TypeError if the value does not have the expected type\n */\nfunction requireValueType(nameForErrorMessages, value, typeName) {\n    requireType(nameForErrorMessages, value, typeName);\n    return value;\n}\n/**\n * Checks that the given value is between the given bounds.  The bounds are\n * both inclusive, so that they can also be legal values in the same bounds.\n *\n * @param nameForErrorMessages the name of this value, used only for error\n *   messages\n * @param value the value to check\n * @param minValue the minimum legal value (inclusive lower bound)\n * @param maxValue the maximum legal value (inclusive upper bound)\n * @returns the value unmodified, for easy chaining\n * @throws RangeError if the value is outside of the bounds\n */\nfunction checkBigintBounds(nameForErrorMessages, value, minValue, maxValue) {\n    if (value < minValue || value > maxValue) {\n        throw new RangeError(`Invalid value for entry ${nameForErrorMessages}.  ` +\n            `Value ${value} is outside supported bounds: (min ${minValue}, max ${maxValue}).`);\n    }\n    return value;\n}\n/**\n * Check that `PODValue` object has a value which matches the specified type.\n *\n * @param nameForErrorMessages the name of this value, which is used only for\n *   error messages (not checked for legality).\n * @param podValue the value to check\n * @returns the unmodified value, for easy chaining\n * @throws TypeError if the value is invalid\n * @throws RangeError if the value is outside of the bounds\n */\nfunction checkPODValue(nameForErrorMessages, podValue) {\n    if (podValue === null) {\n        throw new TypeError(`POD value for ${nameForErrorMessages} cannot be null.` +\n            \"  Consider PODNull instead.\");\n    }\n    if (podValue === undefined || podValue.value === undefined) {\n        throw new TypeError(`POD value for ${nameForErrorMessages} cannot be undefined.`);\n    }\n    if (podValue.type === undefined) {\n        throw new TypeError(`POD value for ${nameForErrorMessages} must have a type.`);\n    }\n    switch (podValue.type) {\n        case \"string\":\n            requireValueType(nameForErrorMessages, podValue.value, \"string\");\n            break;\n        case \"bytes\":\n            requireValueType(nameForErrorMessages, podValue.value, \"object\");\n            if (!(podValue.value instanceof Uint8Array)) {\n                throw new TypeError(`Bytes value ${nameForErrorMessages} must be a UInt8Array.`);\n            }\n            break;\n        case \"cryptographic\":\n            requireValueType(nameForErrorMessages, podValue.value, \"bigint\");\n            checkBigintBounds(nameForErrorMessages, podValue.value, _podTypes_js__WEBPACK_IMPORTED_MODULE_1__.POD_CRYPTOGRAPHIC_MIN, _podTypes_js__WEBPACK_IMPORTED_MODULE_1__.POD_CRYPTOGRAPHIC_MAX);\n            break;\n        case \"int\":\n            requireValueType(nameForErrorMessages, podValue.value, \"bigint\");\n            checkBigintBounds(nameForErrorMessages, podValue.value, _podTypes_js__WEBPACK_IMPORTED_MODULE_1__.POD_INT_MIN, _podTypes_js__WEBPACK_IMPORTED_MODULE_1__.POD_INT_MAX);\n            break;\n        case \"boolean\":\n            requireValueType(nameForErrorMessages, podValue.value, \"boolean\");\n            break;\n        case _podTypes_js__WEBPACK_IMPORTED_MODULE_1__.EDDSA_PUBKEY_TYPE_STRING:\n            requireValueType(nameForErrorMessages, podValue.value, \"string\");\n            checkPublicKeyFormat(podValue.value, nameForErrorMessages);\n            break;\n        case \"date\":\n            requireValueType(nameForErrorMessages, podValue.value, \"object\");\n            if (!(podValue.value instanceof Date)) {\n                throw new TypeError(`Date value ${nameForErrorMessages} must be a Date object.`);\n            }\n            break;\n        case \"null\":\n            requireValueType(nameForErrorMessages, podValue.value, \"null\");\n            break;\n        default:\n            throw new TypeError(`POD value ${nameForErrorMessages} has unknown type ${podValue.type}`);\n    }\n    return podValue;\n}\n/**\n * Checks whether a given value is a fixed-size numeric value, which can be\n * represented in a circuit as a single signal.\n *\n * @param podValue the value to check\n * @returns `true` if the given value is numeric\n */\nfunction isPODNumericValue(podValue) {\n    return (0,_podUtil_js__WEBPACK_IMPORTED_MODULE_0__.getPODValueForCircuit)(podValue) !== undefined;\n}\n/**\n * Checks whether a given value is a bounded numeric value of a type which\n * can be subject to ordered comparison or arithmetic in a circuit.  The\n * determination is based on the value's type, not its specific value.  This\n * returns true for all numeric types with a range fitting inside of the\n * PODIntValue type.\n *\n * @param podValue the value to check\n * @returns `true` if the given value is arithmetic\n */\nfunction isPODArithmeticValue(podValue) {\n    switch (podValue.type) {\n        case \"string\":\n        case \"bytes\":\n        case \"eddsa_pubkey\":\n        case \"null\":\n        case \"cryptographic\":\n            return false;\n        case \"int\":\n        case \"boolean\":\n        case \"date\":\n            return true;\n        default:\n            // @ts-expect-error podValue is of type `never` if we've covered all types\n            throw TypeError(`Unknown PODValue type ${podValue.type}!`);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/pod/dist/esm/src/podChecks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/pod/dist/esm/src/podCrypto.js":
/*!*********************************************************!*\
  !*** ./node_modules/@pcd/pod/dist/esm/src/podCrypto.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodePrivateKey: () => (/* binding */ decodePrivateKey),\n/* harmony export */   decodePublicKey: () => (/* binding */ decodePublicKey),\n/* harmony export */   decodeSignature: () => (/* binding */ decodeSignature),\n/* harmony export */   deriveSignerPublicKey: () => (/* binding */ deriveSignerPublicKey),\n/* harmony export */   encodePrivateKey: () => (/* binding */ encodePrivateKey),\n/* harmony export */   encodePublicKey: () => (/* binding */ encodePublicKey),\n/* harmony export */   encodeSignature: () => (/* binding */ encodeSignature),\n/* harmony export */   podBytesHash: () => (/* binding */ podBytesHash),\n/* harmony export */   podEdDSAPublicKeyHash: () => (/* binding */ podEdDSAPublicKeyHash),\n/* harmony export */   podIntHash: () => (/* binding */ podIntHash),\n/* harmony export */   podMerkleTreeHash: () => (/* binding */ podMerkleTreeHash),\n/* harmony export */   podNameHash: () => (/* binding */ podNameHash),\n/* harmony export */   podValueHash: () => (/* binding */ podValueHash),\n/* harmony export */   signPODRoot: () => (/* binding */ signPODRoot),\n/* harmony export */   verifyPODRootSignature: () => (/* binding */ verifyPODRootSignature)\n/* harmony export */ });\n/* harmony import */ var _zk_kit_eddsa_poseidon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zk-kit/eddsa-poseidon */ \"(ssr)/./node_modules/@zk-kit/eddsa-poseidon/dist/index.js\");\n/* harmony import */ var _zk_kit_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zk-kit/utils */ \"(ssr)/./node_modules/@zk-kit/utils/dist/index.node.js\");\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! js-sha256 */ \"(ssr)/./node_modules/js-sha256/src/sha256.js\");\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(js_sha256__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var poseidon_lite_poseidon1__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! poseidon-lite/poseidon1 */ \"(ssr)/./node_modules/poseidon-lite/poseidon1.js\");\n/* harmony import */ var poseidon_lite_poseidon2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! poseidon-lite/poseidon2 */ \"(ssr)/./node_modules/poseidon-lite/poseidon2.js\");\n/* harmony import */ var _podChecks_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./podChecks.js */ \"(ssr)/./node_modules/@pcd/pod/dist/esm/src/podChecks.js\");\n/* harmony import */ var _podTypes_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./podTypes.js */ \"(ssr)/./node_modules/@pcd/pod/dist/esm/src/podTypes.js\");\n/* harmony import */ var _podUtil_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./podUtil.js */ \"(ssr)/./node_modules/@pcd/pod/dist/esm/src/podUtil.js\");\n\n\n\n\n\n\n\n\n/**\n * Calculates the appropriate hash for a POD value represented as a string or\n * bytes, which could be one of multiple value types (see {@link podValueHash}).\n */\nfunction podBytesHash(input) {\n    return BigInt(\"0x\" + (0,js_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256)(input)) >> 8n;\n}\n/**\n * Calculates the appropriate hash for a POD value represented as an integer,\n * which could be one of multiple value types (see {@link podValueHash}).\n */\nfunction podIntHash(input) {\n    return (0,poseidon_lite_poseidon1__WEBPACK_IMPORTED_MODULE_3__.poseidon1)([input]);\n}\n/**\n * Calculates the appropriate hash for a POD value represented as a string-encoded EdDSA public key.\n */\nfunction podEdDSAPublicKeyHash(input) {\n    return (0,poseidon_lite_poseidon2__WEBPACK_IMPORTED_MODULE_4__.poseidon2)(decodePublicKey(input));\n}\n/**\n * Calculates the appropriate hash for a POD entry name.\n */\nfunction podNameHash(podName) {\n    return podBytesHash(podName);\n}\n/**\n * Calculates the appropriate hash for a POD value of any type.\n */\nfunction podValueHash(podValue) {\n    switch (podValue.type) {\n        case \"string\":\n        case \"bytes\":\n            return podBytesHash(podValue.value);\n        case \"int\":\n        case \"cryptographic\":\n            return podIntHash(podValue.value);\n        case \"boolean\":\n            return podIntHash(podValue.value ? 1n : 0n);\n        case _podTypes_js__WEBPACK_IMPORTED_MODULE_5__.EDDSA_PUBKEY_TYPE_STRING:\n            return podEdDSAPublicKeyHash(podValue.value);\n        case \"date\":\n            return podIntHash(BigInt(podValue.value.getTime()));\n        case \"null\":\n            return _podTypes_js__WEBPACK_IMPORTED_MODULE_5__.POD_NULL_HASH;\n        default:\n            throw new TypeError(`Unexpected type in PODValue ${podValue}.`);\n    }\n}\n/**\n * The hash function used to generate interior nodes in the Merkle tree\n * representing a POD.  The inputs may be value hashes, or other inner\n * nodes.\n */\nfunction podMerkleTreeHash(left, right) {\n    return (0,poseidon_lite_poseidon2__WEBPACK_IMPORTED_MODULE_4__.poseidon2)([left, right]);\n}\n/**\n * Encodes a private key to a string.  The input must be 32 bytes.  The output\n * is represented as unpadded Base64 by default.\n *\n * @param rawPrivateKey the private key bytes\n * @param encoding one of the supported encodings to use, as per\n *   {@link encodeBytes}.\n * @throws TypeError if the size of the buffer is incorrect.\n */\nfunction encodePrivateKey(rawPrivateKey, encoding = \"base64\") {\n    if (!(rawPrivateKey instanceof Uint8Array)) {\n        throw TypeError(\"Private key must be Buffer or Uint8Array.\");\n    }\n    if (rawPrivateKey.length !== 32) {\n        throw TypeError(\"Private key must be a 32 bytes.\");\n    }\n    return (0,_podUtil_js__WEBPACK_IMPORTED_MODULE_6__.encodeBytes)(rawPrivateKey, encoding);\n}\n/**\n * Decodes a private key's bytes from a string.  The input must be 32 bytes,\n * represented as hex or Base64.  Base64 padding is optional.\n *\n * @param privateKey the private key string to decode\n * @throws TypeError if the private key format is incorrect.\n */\nfunction decodePrivateKey(privateKey) {\n    return (0,_podUtil_js__WEBPACK_IMPORTED_MODULE_6__.decodeBytesAuto)(privateKey, _podChecks_js__WEBPACK_IMPORTED_MODULE_7__.POD_PRIVATE_KEY_REGEX, _podChecks_js__WEBPACK_IMPORTED_MODULE_7__.PUBLIC_KEY_ENCODING_GROUPS, \"Private key should be 32 bytes, encoded as hex or Base64.\");\n}\n/**\n * Encodes an EdDSA public key into a compact string represenation.  The output\n * is 32 bytes, represented as unpadded Base64 by default.\n *\n * @param rawPublicKey the EdDSA public key to encode\n * @param encoding one of the supported encodings to use\n */\nfunction encodePublicKey(rawPublicKey, encoding = \"base64\") {\n    return (0,_podUtil_js__WEBPACK_IMPORTED_MODULE_6__.encodeBytes)((0,_zk_kit_utils__WEBPACK_IMPORTED_MODULE_1__.leBigIntToBuffer)((0,_zk_kit_eddsa_poseidon__WEBPACK_IMPORTED_MODULE_0__.packPublicKey)(rawPublicKey), 32), encoding);\n}\n/**\n * Decodes a public key packed by {@encodePublicKey}.  The input must be\n * 32 bytes, represented as hex or Base64.  Base64 padding is optional.\n *\n * @param publicKey the public key string to decode\n * @throws TypeError if the public key format is incorrect.\n */\nfunction decodePublicKey(publicKey) {\n    const rawPublicKey = (0,_zk_kit_eddsa_poseidon__WEBPACK_IMPORTED_MODULE_0__.unpackPublicKey)((0,_zk_kit_utils__WEBPACK_IMPORTED_MODULE_1__.leBufferToBigInt)((0,_podUtil_js__WEBPACK_IMPORTED_MODULE_6__.decodeBytesAuto)(publicKey, _podChecks_js__WEBPACK_IMPORTED_MODULE_7__.POD_PUBLIC_KEY_REGEX, _podChecks_js__WEBPACK_IMPORTED_MODULE_7__.PUBLIC_KEY_ENCODING_GROUPS, \"Public key should be 32 bytes, encoded as hex or Base64.\")));\n    if (rawPublicKey === null) {\n        throw new TypeError(`Invalid packed public key point ${publicKey}.`);\n    }\n    return rawPublicKey;\n}\n/**\n * Encodes an EdDSA signature into a compact string representation.\n * The output is represented in unpadded Base64 by default.\n *\n * @param rawSignature the EdDSA signature to encode\n * @param encoding one of the supported encodings to use\n */\nfunction encodeSignature(rawSignature, encoding = \"base64\") {\n    return (0,_podUtil_js__WEBPACK_IMPORTED_MODULE_6__.encodeBytes)((0,_zk_kit_eddsa_poseidon__WEBPACK_IMPORTED_MODULE_0__.packSignature)(rawSignature), encoding);\n}\n/**\n * Decodes a signature produced by {@link encodeSignature}.  The input must be\n * 64 bytes, represented as hex or Base64.  Base64 padding is optional.\n *\n * @param encodedSignature the signature string to decode\n * @throws TypeError if the signature format is incorrect\n */\nfunction decodeSignature(encodedSignature) {\n    return (0,_zk_kit_eddsa_poseidon__WEBPACK_IMPORTED_MODULE_0__.unpackSignature)((0,_podUtil_js__WEBPACK_IMPORTED_MODULE_6__.decodeBytesAuto)(encodedSignature, _podChecks_js__WEBPACK_IMPORTED_MODULE_7__.POD_SIGNATURE_REGEX, _podChecks_js__WEBPACK_IMPORTED_MODULE_7__.SIGNATURE_ENCODING_GROUPS, \"Signature should be 64 bytes, encoded as hex or Base64.\"));\n}\n/**\n * Calculates the corresponding public key for the given private key.  This is\n * equivalent to the calculation performed in {@link signPODRoot}, and can be\n * used to pre-publish the expected public key to clients before signing.\n *\n * @param privateKey the signer's private key, which is 32 bytes encoded as\n *   per {@link encodePrivateKey}.\n * @returns The signer's public key, which is 32 bytes encoded as per\n *   {@link encodePublicKey}.\n * @throws TypeError if any of the individual arguments is incorrectly formatted\n */\nfunction deriveSignerPublicKey(privateKey) {\n    const privateKeyBytes = decodePrivateKey(privateKey);\n    const unpackedPublicKey = (0,_zk_kit_eddsa_poseidon__WEBPACK_IMPORTED_MODULE_0__.derivePublicKey)(privateKeyBytes);\n    return encodePublicKey(unpackedPublicKey);\n}\n/**\n * Signs a POD's root hash.\n *\n * @param root the root hash (content ID) of the POD.\n * @param privateKey the signer's private key, which is 32 bytes encoded as\n *   per {@link encodePrivateKey}.\n * @returns The signature as well as the signer's public key for inclusion\n *   in the POD.  The signature is 64 bytes represented in unpadded Base64.\n * @throws TypeError if any of the individual arguments is incorrectly formatted\n */\nfunction signPODRoot(root, privateKey) {\n    if (typeof root !== \"bigint\") {\n        throw new TypeError(\"POD root must be a bigint not `${typeof root}`.\");\n    }\n    const privateKeyBytes = decodePrivateKey(privateKey);\n    const unpackedSignature = (0,_zk_kit_eddsa_poseidon__WEBPACK_IMPORTED_MODULE_0__.signMessage)(privateKeyBytes, root);\n    const signature = encodeSignature(unpackedSignature);\n    const unpackedPublicKey = (0,_zk_kit_eddsa_poseidon__WEBPACK_IMPORTED_MODULE_0__.derivePublicKey)(privateKeyBytes);\n    const publicKey = encodePublicKey(unpackedPublicKey);\n    return { signature, publicKey };\n}\n/**\n * Verifies the signature of a POD root hash.\n *\n * @param root the root hash (content ID) of the POD.\n * @param signature the signature in packed form, which is 64 bytes represented\n *   in hex or Base64.  Base64 padding is optional.\n * @param publicKey the signer's public key in packed form, which is 32 bytes\n *   represented in hex or Base64.  Base64 padding is optional.\n * @returns `true` if the signature is valid\n * @throws TypeError if any of the individual arguments incorrectly formatted\n */\nfunction verifyPODRootSignature(root, signature, publicKey) {\n    const unpackedPublicKey = decodePublicKey(publicKey);\n    const unpackedSignature = decodeSignature(signature);\n    return (0,_zk_kit_eddsa_poseidon__WEBPACK_IMPORTED_MODULE_0__.verifySignature)(root, unpackedSignature, unpackedPublicKey);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/pod/dist/esm/src/podCrypto.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/pod/dist/esm/src/podJSON.js":
/*!*******************************************************!*\
  !*** ./node_modules/@pcd/pod/dist/esm/src/podJSON.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bigintFromJSON: () => (/* binding */ bigintFromJSON),\n/* harmony export */   bigintToSimplestJSON: () => (/* binding */ bigintToSimplestJSON),\n/* harmony export */   podEntriesFromJSON: () => (/* binding */ podEntriesFromJSON),\n/* harmony export */   podEntriesToJSON: () => (/* binding */ podEntriesToJSON),\n/* harmony export */   podValueFromJSON: () => (/* binding */ podValueFromJSON),\n/* harmony export */   podValueFromTypedJSON: () => (/* binding */ podValueFromTypedJSON),\n/* harmony export */   podValueToJSON: () => (/* binding */ podValueToJSON)\n/* harmony export */ });\n/* harmony import */ var _podChecks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./podChecks.js */ \"(ssr)/./node_modules/@pcd/pod/dist/esm/src/podChecks.js\");\n/* harmony import */ var _podUtil_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./podUtil.js */ \"(ssr)/./node_modules/@pcd/pod/dist/esm/src/podUtil.js\");\n\n\n/**\n * Parses {@link PODEntries} from the JSON-compatible format potentially\n * coming directly from `JSON.parse`.\n *\n * @param jsonEntries the JSON-encoded POD entries to parse\n * @returns a standard TypeScript POD entries representation\n * @throws TypeError if the input entries are not validly formed\n * @throws RangeError if a value is outside of the bounds\n * @throws SyntaxError if a value is unparseable\n */\nfunction podEntriesFromJSON(jsonEntries) {\n    (0,_podChecks_js__WEBPACK_IMPORTED_MODULE_0__.requireType)(\"jsonEntries\", jsonEntries, \"object\");\n    return Object.fromEntries(Object.entries(jsonEntries).map(([name, jsonValue]) => [\n        (0,_podChecks_js__WEBPACK_IMPORTED_MODULE_0__.checkPODName)(name),\n        podValueFromJSON(jsonValue, name)\n    ]));\n}\n/**\n * Parses a {@link PODValue} from the JSON-compatible format potentially\n * coming directly from `JSON.parse`.\n *\n * @param jsonValue the JSON-encoded POD value to parse\n * @param nameForErrorMessages an optional name for this value to be used\n *   in error messages\n * @returns a standard TypeScript POD value\n * @throws TypeError if the input value is not validly formed\n * @throws RangeError if a value is outside of the bounds\n * @throws SyntaxError if a value is unparseable\n */\nfunction podValueFromJSON(jsonValue, nameForErrorMessages) {\n    nameForErrorMessages = nameForErrorMessages || \"(unnamed)\";\n    switch (typeof jsonValue) {\n        case \"string\":\n            return podValueFromTypedJSON(\"string\", jsonValue, nameForErrorMessages);\n        case \"number\":\n            return podValueFromTypedJSON(\"int\", jsonValue, nameForErrorMessages);\n        case \"boolean\":\n            return podValueFromTypedJSON(\"boolean\", jsonValue, nameForErrorMessages);\n        case \"object\":\n            if (Array.isArray(jsonValue)) {\n                throw new TypeError(`Value ${nameForErrorMessages} isn't a well-formed JSON POD Value.` +\n                    \"  It should be an object not an array.\");\n            }\n            if (jsonValue === null) {\n                return podValueFromTypedJSON(\"null\", null, nameForErrorMessages);\n            }\n            if (Object.keys(jsonValue).length !== 1) {\n                throw new TypeError(`Value ${nameForErrorMessages} isn't a well-formed JSON POD Value.` +\n                    \"  It should be an object with a single key.\");\n            }\n            const [n, v] = Object.entries(jsonValue)[0];\n            return podValueFromTypedJSON(n, v, nameForErrorMessages);\n        default:\n            throw new TypeError(`Value ${nameForErrorMessages} has invalid type '${typeof jsonValue}'.`);\n    }\n}\n/**\n * Parses a {@link PODValue} from JSON-compatible inputs which have already\n * been parsed into separate `type` and `value`.  Most use cases should use\n * {@link podValueFromJSON} instead.  This function is intended as a helper\n * for other parsers with their own source of type information.\n *\n * @param podValueType the type of {@link PODValue} expected\n * @param jsonRawValue the JSON-compatible encoding of the bare value with\n *   no type information\n * @param nameForErrorMessages an optional name for this value to be used\n *   in error messages\n * @returns a standard TypeScript POD value\n * @throws TypeError if the input type or value are not validly formed\n * @throws RangeError if a value is outside of the bounds\n * @throws SyntaxError if a value is unparseable\n */\nfunction podValueFromTypedJSON(podValueType, jsonRawValue, nameForErrorMessages) {\n    nameForErrorMessages = nameForErrorMessages || \"(unnamed)\";\n    switch (podValueType) {\n        case \"string\":\n            return (0,_podChecks_js__WEBPACK_IMPORTED_MODULE_0__.checkPODValue)(nameForErrorMessages, {\n                type: \"string\",\n                value: jsonRawValue // checkPODValue checks this\n            });\n        case \"bytes\":\n            (0,_podChecks_js__WEBPACK_IMPORTED_MODULE_0__.requireType)(nameForErrorMessages, jsonRawValue, \"string\");\n            return (0,_podChecks_js__WEBPACK_IMPORTED_MODULE_0__.checkPODValue)(nameForErrorMessages, {\n                type: \"bytes\",\n                value: (0,_podUtil_js__WEBPACK_IMPORTED_MODULE_1__.decodeBytesRaw)((0,_podChecks_js__WEBPACK_IMPORTED_MODULE_0__.checkBase64Encoding)(jsonRawValue, `Value ${nameForErrorMessages} must be encoded in base64.`), \"base64\")\n            });\n        case \"cryptographic\":\n            return (0,_podChecks_js__WEBPACK_IMPORTED_MODULE_0__.checkPODValue)(nameForErrorMessages, {\n                type: \"cryptographic\",\n                value: bigintFromJSON(jsonRawValue, // bigintFromJSON checks this\n                nameForErrorMessages)\n            });\n        case \"int\":\n            return (0,_podChecks_js__WEBPACK_IMPORTED_MODULE_0__.checkPODValue)(nameForErrorMessages, {\n                type: \"int\",\n                value: bigintFromJSON(jsonRawValue, // bigintFromJSON checks this\n                nameForErrorMessages)\n            });\n        case \"boolean\":\n            return (0,_podChecks_js__WEBPACK_IMPORTED_MODULE_0__.checkPODValue)(nameForErrorMessages, {\n                type: \"boolean\",\n                value: jsonRawValue // checkPODValue checks this\n            });\n        case \"eddsa_pubkey\":\n            return (0,_podChecks_js__WEBPACK_IMPORTED_MODULE_0__.checkPODValue)(nameForErrorMessages, {\n                type: \"eddsa_pubkey\",\n                value: jsonRawValue // checkPODValue checks this\n            });\n        case \"date\":\n            (0,_podChecks_js__WEBPACK_IMPORTED_MODULE_0__.requireType)(nameForErrorMessages, jsonRawValue, \"string\");\n            if (!jsonRawValue.endsWith(\"Z\")) {\n                throw new TypeError(`Value ${nameForErrorMessages} must be encoded in UTC.`);\n            }\n            return (0,_podChecks_js__WEBPACK_IMPORTED_MODULE_0__.checkPODValue)(nameForErrorMessages, {\n                type: \"date\",\n                value: new Date(jsonRawValue)\n            });\n        case \"null\":\n            return (0,_podChecks_js__WEBPACK_IMPORTED_MODULE_0__.checkPODValue)(nameForErrorMessages, {\n                type: \"null\",\n                value: jsonRawValue // checkPODValue checks this\n            });\n        default:\n            throw new TypeError(`Value ${nameForErrorMessages} specifies unknown type '${podValueType}'.`);\n    }\n}\n/**\n * Parses an integer value into a `bigint` from JSON-compatible value encoding\n * separate from type inforation.  Most use cases should use\n * {@link podValueFromJSON} instead.  This function is intended as a helper\n * for other parsers with their own source of type information.\n *\n * @param numericValue the encoded numeric value, which could be a number, or\n *   a stringified number\n * @param nameForErrorMessages an optional name for this value to be used\n *   in error messages\n * @returns a bigint representing the number\n * @throws TypeError if the input type or value are not validly formed\n * @throws RangeError if a value is outside of the bounds\n * @throws SyntaxError if a value is unparseable\n */\nfunction bigintFromJSON(numericValue, nameForErrorMessages) {\n    nameForErrorMessages = nameForErrorMessages || \"(unnamed)\";\n    switch (typeof numericValue) {\n        case \"number\":\n            if (numericValue > Number.MAX_SAFE_INTEGER ||\n                numericValue < Number.MIN_SAFE_INTEGER) {\n                // This is to catch a mistake in JSON generation as early as possible.\n                // JSON.parse will parse overly large values but lose accuracy.\n                // Throwing here is more informative than waiting for a signature\n                // validation to fail.\n                throw new RangeError(`Numeric value ${nameForErrorMessages} is too large to be safely` +\n                    \" represented in JSON and must be stringified instead.\");\n            }\n            return BigInt(numericValue);\n        case \"string\":\n            return BigInt(numericValue);\n        default:\n            throw new TypeError(`Value ${nameForErrorMessages} is an unexpected type ` +\n                `'${typeof numericValue}'.  Numeric values must be encoded as a ` +\n                \"number or string.\");\n    }\n}\n/**\n * Converts {@link PODEntries} from the TypeScript format used internally, into\n * a JSON-compatible format safe to serialize with `JSON.stringify`.  This\n * function will produce the simplest of the available encodings which can\n * represent the input with no loss value or type information.\n *\n * @param podEntries the POD entries to convert\n * @returns a JSON-compatible representation\n * @throws TypeError if the input entries are not validly formed\n */\nfunction podEntriesToJSON(podEntries) {\n    (0,_podChecks_js__WEBPACK_IMPORTED_MODULE_0__.requireType)(\"podEntries\", podEntries, \"object\");\n    return Object.fromEntries(Object.entries(podEntries).map(([name, podValue]) => [\n        (0,_podChecks_js__WEBPACK_IMPORTED_MODULE_0__.checkPODName)(name),\n        podValueToJSON(podValue, name)\n    ]));\n}\n/**\n * Converts a {@link PODValue} from the TypeScript format used internally, into\n * a JSON-compatible format safe to serialize with `JSON.stringify`.  This\n * function will produce the simplest of the available encodings which can\n * represent the input with no loss value or type information.\n *\n * @param podValue the POD entries to convert\n * @param nameForErrorMessages an optional name for this value to be used\n *   in error messages\n * @returns a JSON-compatible representation\n * @throws TypeError if the input entries are not validly formed\n */\nfunction podValueToJSON(podValue, nameForErrorMessages) {\n    nameForErrorMessages = nameForErrorMessages || \"(unnamed)\";\n    podValue = (0,_podChecks_js__WEBPACK_IMPORTED_MODULE_0__.checkPODValue)(nameForErrorMessages, podValue);\n    switch (podValue.type) {\n        case \"string\":\n            return podValue.value;\n        case \"bytes\":\n            return { bytes: (0,_podUtil_js__WEBPACK_IMPORTED_MODULE_1__.encodeBytes)(podValue.value, \"base64\") };\n        case \"cryptographic\":\n            return { cryptographic: bigintToSimplestJSON(podValue.value) };\n        case \"int\":\n            const numValue = bigintToSimplestJSON(podValue.value);\n            if (typeof numValue === \"number\") {\n                return numValue;\n            }\n            return { int: numValue };\n        case \"boolean\":\n            return podValue.value;\n        case \"eddsa_pubkey\":\n            return { eddsa_pubkey: podValue.value };\n        case \"date\":\n            return { date: podValue.value.toJSON() };\n        case \"null\":\n            return null;\n        default:\n            throw TypeError(`Value ${nameForErrorMessages} has unhandled POD value ` +\n                // @ts-expect-error podValue is of type `never` if we've covered all types\n                `type '${podValue.type}'.`);\n    }\n}\n/**\n * Converts a bigint to the simplest value-preserving JSON value available.\n * There is no type information included.  The output is always a number\n * (with no fractional part) or a string which can be parsed by `BigInt(s)`.\n *\n * Numbers are used preferentially for values in the range between\n * `Number.MIN_SAFE_INTEGER` and `Number.MAX_SAFE_INTEGER` where no accuracy\n * is lost.  Stringified values may be hex or decimal encoded for minimal size.\n *\n * Note that this function doesn't enforce any bounds on the input.  Any\n * bigint will be encoded, even if it's not a valid POD value.\n *\n * @param n the input integer\n * @returns a number or string representing this integer.\n */\nfunction bigintToSimplestJSON(n) {\n    // For values which are in range for a JSON number (2^53), use that.\n    if (n <= Number.MAX_SAFE_INTEGER && n >= Number.MIN_SAFE_INTEGER) {\n        return Number(n);\n    }\n    // Large positive values are shorter as hex than decimal.\n    // MAX_SAFE_INTEGER is large enough to be equal size even with the addition of\n    // \"0x\", and the benefits become greater for larger values.\n    if (n > 0) {\n        return \"0x\" + n.toString(16);\n    }\n    // BigInt/Number parsing doesn't support hex for negative values, so\n    // use decimal rather than having to write special numeric parsing.\n    return n.toString();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/pod/dist/esm/src/podJSON.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/pod/dist/esm/src/podTypes.js":
/*!********************************************************!*\
  !*** ./node_modules/@pcd/pod/dist/esm/src/podTypes.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EDDSA_PUBKEY_TYPE_STRING: () => (/* binding */ EDDSA_PUBKEY_TYPE_STRING),\n/* harmony export */   PODEdDSAPublicKeyValue: () => (/* binding */ PODEdDSAPublicKeyValue),\n/* harmony export */   PODNull: () => (/* binding */ PODNull),\n/* harmony export */   POD_CRYPTOGRAPHIC_MAX: () => (/* binding */ POD_CRYPTOGRAPHIC_MAX),\n/* harmony export */   POD_CRYPTOGRAPHIC_MIN: () => (/* binding */ POD_CRYPTOGRAPHIC_MIN),\n/* harmony export */   POD_DATE_MAX: () => (/* binding */ POD_DATE_MAX),\n/* harmony export */   POD_DATE_MIN: () => (/* binding */ POD_DATE_MIN),\n/* harmony export */   POD_INT_MAX: () => (/* binding */ POD_INT_MAX),\n/* harmony export */   POD_INT_MIN: () => (/* binding */ POD_INT_MIN),\n/* harmony export */   POD_NAME_REGEX: () => (/* binding */ POD_NAME_REGEX),\n/* harmony export */   POD_NULL_HASH: () => (/* binding */ POD_NULL_HASH),\n/* harmony export */   POD_STRING_TYPE_REGEX: () => (/* binding */ POD_STRING_TYPE_REGEX)\n/* harmony export */ });\n/**\n * Regex matching legal names for POD entries.  This is intended to make\n * entry names usable as identifiers in TypeScript and other languages.\n */\nconst POD_NAME_REGEX = new RegExp(/^[A-Za-z_]\\w*$/);\n/**\n * Identifier for EdDSA public key string type.\n */\nconst EDDSA_PUBKEY_TYPE_STRING = \"eddsa_pubkey\";\n/**\n * Regex matching legal values for types encoded as strings by\n * {@link podValueToRawValue}. This matches strings of the form\n * `pod_${PODName}:${string}`.\n */\nconst POD_STRING_TYPE_REGEX = new RegExp(/pod_([A-Za-z_]\\w*):(.*)$/);\n/**\n * Minimum legal value of a `cryptographic` entry value.\n */\nconst POD_CRYPTOGRAPHIC_MIN = 0n;\n/**\n * Maximum legal value of a `cryptographic` entry value.\n */\nconst POD_CRYPTOGRAPHIC_MAX = \n// Prime order of the alt_bn128 curve.\n// Should always be equal to the `r` constant in @zk-kit/baby-jubjub.\n21888242871839275222246405745257275088548364400416034343698204186575808495617n -\n    1n;\n/**\n * Minimum legal value of an `int` entry value.\n */\nconst POD_INT_MIN = -(1n << 63n);\n/**\n * Maximum legal value of an `int` entry value.\n */\nconst POD_INT_MAX = (1n << 63n) - 1n;\n/**\n * Type constructor for EdDSA (Baby Jubjub) public keys.\n */\nfunction PODEdDSAPublicKeyValue(value) {\n    return { type: EDDSA_PUBKEY_TYPE_STRING, value };\n}\n/**\n * Minimum legal value of a `date` entry value.\n */\nconst POD_DATE_MIN = new Date(-8640000000000000);\n/**\n * Maximum legal value of a `date` entry value.\n */\nconst POD_DATE_MAX = new Date(8640000000000000);\n/**\n * Convenience constant for a null PODValue.  Note that since users are not\n * required to use this constant, PODNullValues should not be compared using\n * `===`, but by examining the type or value fields.\n */\nconst PODNull = { type: \"null\", value: null };\n/**\n * Fixed hash value representing a PODNullValue in a circuit.\n */\nconst POD_NULL_HASH = 0x1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1dn;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC9wb2QvZGlzdC9lc20vc3JjL3BvZFR5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxJQUFJLHlCQUF5QjtBQUM3QixVQUFVLFFBQVEsR0FBRyxPQUFPO0FBQzVCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUCxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGtCQUFrQjtBQUN6QjtBQUNBO0FBQ0E7QUFDTyIsInNvdXJjZXMiOlsiL1VzZXJzL2NoYW5jZW1jYWxsaXN0ZXIvUHJvamVjdHMvenVwYXNzaHVudC9ub2RlX21vZHVsZXMvQHBjZC9wb2QvZGlzdC9lc20vc3JjL3BvZFR5cGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmVnZXggbWF0Y2hpbmcgbGVnYWwgbmFtZXMgZm9yIFBPRCBlbnRyaWVzLiAgVGhpcyBpcyBpbnRlbmRlZCB0byBtYWtlXG4gKiBlbnRyeSBuYW1lcyB1c2FibGUgYXMgaWRlbnRpZmllcnMgaW4gVHlwZVNjcmlwdCBhbmQgb3RoZXIgbGFuZ3VhZ2VzLlxuICovXG5leHBvcnQgY29uc3QgUE9EX05BTUVfUkVHRVggPSBuZXcgUmVnRXhwKC9eW0EtWmEtel9dXFx3KiQvKTtcbi8qKlxuICogSWRlbnRpZmllciBmb3IgRWREU0EgcHVibGljIGtleSBzdHJpbmcgdHlwZS5cbiAqL1xuZXhwb3J0IGNvbnN0IEVERFNBX1BVQktFWV9UWVBFX1NUUklORyA9IFwiZWRkc2FfcHVia2V5XCI7XG4vKipcbiAqIFJlZ2V4IG1hdGNoaW5nIGxlZ2FsIHZhbHVlcyBmb3IgdHlwZXMgZW5jb2RlZCBhcyBzdHJpbmdzIGJ5XG4gKiB7QGxpbmsgcG9kVmFsdWVUb1Jhd1ZhbHVlfS4gVGhpcyBtYXRjaGVzIHN0cmluZ3Mgb2YgdGhlIGZvcm1cbiAqIGBwb2RfJHtQT0ROYW1lfToke3N0cmluZ31gLlxuICovXG5leHBvcnQgY29uc3QgUE9EX1NUUklOR19UWVBFX1JFR0VYID0gbmV3IFJlZ0V4cCgvcG9kXyhbQS1aYS16X11cXHcqKTooLiopJC8pO1xuLyoqXG4gKiBNaW5pbXVtIGxlZ2FsIHZhbHVlIG9mIGEgYGNyeXB0b2dyYXBoaWNgIGVudHJ5IHZhbHVlLlxuICovXG5leHBvcnQgY29uc3QgUE9EX0NSWVBUT0dSQVBISUNfTUlOID0gMG47XG4vKipcbiAqIE1heGltdW0gbGVnYWwgdmFsdWUgb2YgYSBgY3J5cHRvZ3JhcGhpY2AgZW50cnkgdmFsdWUuXG4gKi9cbmV4cG9ydCBjb25zdCBQT0RfQ1JZUFRPR1JBUEhJQ19NQVggPSBcbi8vIFByaW1lIG9yZGVyIG9mIHRoZSBhbHRfYm4xMjggY3VydmUuXG4vLyBTaG91bGQgYWx3YXlzIGJlIGVxdWFsIHRvIHRoZSBgcmAgY29uc3RhbnQgaW4gQHprLWtpdC9iYWJ5LWp1Ymp1Yi5cbjIxODg4MjQyODcxODM5Mjc1MjIyMjQ2NDA1NzQ1MjU3Mjc1MDg4NTQ4MzY0NDAwNDE2MDM0MzQzNjk4MjA0MTg2NTc1ODA4NDk1NjE3biAtXG4gICAgMW47XG4vKipcbiAqIE1pbmltdW0gbGVnYWwgdmFsdWUgb2YgYW4gYGludGAgZW50cnkgdmFsdWUuXG4gKi9cbmV4cG9ydCBjb25zdCBQT0RfSU5UX01JTiA9IC0oMW4gPDwgNjNuKTtcbi8qKlxuICogTWF4aW11bSBsZWdhbCB2YWx1ZSBvZiBhbiBgaW50YCBlbnRyeSB2YWx1ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IFBPRF9JTlRfTUFYID0gKDFuIDw8IDYzbikgLSAxbjtcbi8qKlxuICogVHlwZSBjb25zdHJ1Y3RvciBmb3IgRWREU0EgKEJhYnkgSnVianViKSBwdWJsaWMga2V5cy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIFBPREVkRFNBUHVibGljS2V5VmFsdWUodmFsdWUpIHtcbiAgICByZXR1cm4geyB0eXBlOiBFRERTQV9QVUJLRVlfVFlQRV9TVFJJTkcsIHZhbHVlIH07XG59XG4vKipcbiAqIE1pbmltdW0gbGVnYWwgdmFsdWUgb2YgYSBgZGF0ZWAgZW50cnkgdmFsdWUuXG4gKi9cbmV4cG9ydCBjb25zdCBQT0RfREFURV9NSU4gPSBuZXcgRGF0ZSgtODY0MDAwMDAwMDAwMDAwMCk7XG4vKipcbiAqIE1heGltdW0gbGVnYWwgdmFsdWUgb2YgYSBgZGF0ZWAgZW50cnkgdmFsdWUuXG4gKi9cbmV4cG9ydCBjb25zdCBQT0RfREFURV9NQVggPSBuZXcgRGF0ZSg4NjQwMDAwMDAwMDAwMDAwKTtcbi8qKlxuICogQ29udmVuaWVuY2UgY29uc3RhbnQgZm9yIGEgbnVsbCBQT0RWYWx1ZS4gIE5vdGUgdGhhdCBzaW5jZSB1c2VycyBhcmUgbm90XG4gKiByZXF1aXJlZCB0byB1c2UgdGhpcyBjb25zdGFudCwgUE9ETnVsbFZhbHVlcyBzaG91bGQgbm90IGJlIGNvbXBhcmVkIHVzaW5nXG4gKiBgPT09YCwgYnV0IGJ5IGV4YW1pbmluZyB0aGUgdHlwZSBvciB2YWx1ZSBmaWVsZHMuXG4gKi9cbmV4cG9ydCBjb25zdCBQT0ROdWxsID0geyB0eXBlOiBcIm51bGxcIiwgdmFsdWU6IG51bGwgfTtcbi8qKlxuICogRml4ZWQgaGFzaCB2YWx1ZSByZXByZXNlbnRpbmcgYSBQT0ROdWxsVmFsdWUgaW4gYSBjaXJjdWl0LlxuICovXG5leHBvcnQgY29uc3QgUE9EX05VTExfSEFTSCA9IDB4MWQxZDFkMWQxZDFkMWQxZDFkMWQxZDFkMWQxZDFkMWQxZDFkMWQxZDFkMWQxZDFkMWQxZDFkMWQxZDFkMWQxZG47XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/pod/dist/esm/src/podTypes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/pod/dist/esm/src/podUtil.js":
/*!*******************************************************!*\
  !*** ./node_modules/@pcd/pod/dist/esm/src/podUtil.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyOrMap: () => (/* binding */ applyOrMap),\n/* harmony export */   cloneOptionalPODValue: () => (/* binding */ cloneOptionalPODValue),\n/* harmony export */   clonePODEntries: () => (/* binding */ clonePODEntries),\n/* harmony export */   clonePODValue: () => (/* binding */ clonePODValue),\n/* harmony export */   decodeBytesAuto: () => (/* binding */ decodeBytesAuto),\n/* harmony export */   decodeBytesRaw: () => (/* binding */ decodeBytesRaw),\n/* harmony export */   encodeBytes: () => (/* binding */ encodeBytes),\n/* harmony export */   getPODValueForCircuit: () => (/* binding */ getPODValueForCircuit),\n/* harmony export */   getRequiredPODValueForCircuit: () => (/* binding */ getRequiredPODValueForCircuit),\n/* harmony export */   printPODValue: () => (/* binding */ printPODValue),\n/* harmony export */   printPODValueOrTuple: () => (/* binding */ printPODValueOrTuple)\n/* harmony export */ });\n/* harmony import */ var _podJSON_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./podJSON.js */ \"(ssr)/./node_modules/@pcd/pod/dist/esm/src/podJSON.js\");\n\n/**\n * Gets the numeric representation of the given value for inclusion in a\n * circuit, if any.\n *\n * @param podValue the value to convert\n * @returns the numeric value, or undefined if this value cannot be represented\n *   in a circuit\n */\nfunction getPODValueForCircuit(podValue) {\n    switch (podValue.type) {\n        case \"string\":\n        case \"bytes\":\n        case \"eddsa_pubkey\":\n        case \"null\":\n            return undefined;\n        case \"int\":\n        case \"cryptographic\":\n            return podValue.value;\n        case \"boolean\":\n            return podValue.value ? 1n : 0n;\n        case \"date\":\n            return BigInt(podValue.value.getTime());\n        default:\n            // @ts-expect-error podValue is of type `never` if we've covered all types\n            throw TypeError(`Unknown PODValue type ${podValue.type}!`);\n    }\n}\n/**\n * As {@link getPODValueForCircuit} but throws a TypeError if the value is not\n * of a numeric type.\n *\n * @param podValue the value to convert\n * @param nameForErrorMessages the name of this value, which is used only for\n *   error messages (not checked for legality).\n * @returns the numeric value, or undefined if this value cannot be represented\n *   in a circuit\n */\nfunction getRequiredPODValueForCircuit(podValue, nameForErrorMesages) {\n    const numericValue = getPODValueForCircuit(podValue);\n    if (numericValue === undefined) {\n        throw new TypeError(`Non-numeric value ${nameForErrorMesages} cannot be represented in-circuit.`);\n    }\n    return numericValue;\n}\n/**\n * Makes a safe copy of a PODValue, so that modfications to the new value\n * will not affect the original.\n */\nfunction clonePODValue(podValue) {\n    // TODO(POD-P5): When we support containers as values, this will have\n    // to become more complex.\n    return { ...podValue };\n}\n/**\n * Makes a safe copy of a PODValue (or undefined), so that modfications to the\n * new value will not affect the original.\n */\nfunction cloneOptionalPODValue(podValue) {\n    if (podValue === undefined) {\n        return undefined;\n    }\n    return clonePODValue(podValue);\n}\n/**\n * Makes a safe copy of the given `PODEntries`, so that modfications to the\n * new entries will not affect the original.\n */\nfunction clonePODEntries(entries) {\n    const newEntries = {};\n    for (const [entryName, entryValue] of Object.entries(entries)) {\n        newEntries[entryName] = clonePODValue(entryValue);\n    }\n    return newEntries;\n}\n/**\n * Converts a POD value to a human-readable string for logging our user display\n * purposes.  The output is based on the {@link JSONPODValue} format, but also\n * allows the entire value to be undefined\n *\n * @param podValue the POD value (or undefined) to print\n * @returns a human-readable string\n * @throws if the POD value is malformed\n */\nfunction printPODValue(podValue) {\n    return JSON.stringify(podValue ? (0,_podJSON_js__WEBPACK_IMPORTED_MODULE_0__.podValueToJSON)(podValue) : undefined);\n}\n/**\n * Converts a POD value or tuple to a human-readable string for logging our user\n * display purposes.  The output is based on the {@link JSONPODValue} format,\n * but also handles the case where the whole value is undefined (but not\n * undefined values inside of a tuple).\n *\n * @param podValue the POD value (or undefined) to print\n * @returns a human-readable string\n * @throws if the POD value is malformed\n */\nfunction printPODValueOrTuple(value) {\n    return JSON.stringify(value\n        ? Array.isArray(value)\n            ? value.map((v) => (0,_podJSON_js__WEBPACK_IMPORTED_MODULE_0__.podValueToJSON)(v))\n            : (0,_podJSON_js__WEBPACK_IMPORTED_MODULE_0__.podValueToJSON)(value)\n        : undefined);\n}\n/**\n * Computation streamliner involving unions of the form A | A[] and functions of the form f: A -> B. It applies f to inputs of type A and maps f over A[] otherwise.\n *\n * @param f function to apply to input\n * @param input input argument\n * @returns result of appropriate application of function to input\n */\nfunction applyOrMap(f, input) {\n    return Array.isArray(input) ? input.map(f) : f(input);\n}\n/**\n * Encode cryptographic bytes (keys, signatures) in the given encoding.\n *\n * @param bytes raw bytes to encoded\n * @param encoding one of the supported encoding specifiers.  Default is\n *   `base64`, and padding is always stripped from base64 encoded output.\n * @returns a string encoding of the bytes\n */\nfunction encodeBytes(bytes, encoding = \"base64\") {\n    const encoded = Buffer.from(bytes).toString(encoding);\n    if (encoding === \"base64\") {\n        return stripBase64Padding(encoded);\n    }\n    return encoded;\n}\n/**\n * Strips the padding `=` characters from a Base64 encoded string.\n * The input is assumed to be valid Base64, meaning there should be 0, 1, or 2\n * padding characters.  If there is no padding, this function returns the input\n * unmodified.\n *\n * @param encoded Base64 encoded string\n * @returns the same string without padding\n */\nfunction stripBase64Padding(encoded) {\n    if (encoded.endsWith(\"==\")) {\n        return encoded.slice(0, encoded.length - 2);\n    }\n    else if (encoded.endsWith(\"=\")) {\n        return encoded.slice(0, encoded.length - 1);\n    }\n    else {\n        return encoded;\n    }\n}\n/**\n * Decodes cryptographic bytes (keys, signatures) using the given encoding.\n * Note that this function doesn't check that the input is actually valid, but\n * will truncate the output to only the valid prefix of input.\n *\n * @param encoded the encoded string\n * @param encoding one of the supported encoding specifiers.  Default is\n *   `base64`, and padding is always stripped from base64 encoded output.\n * @returns decoded bytes, truncated if the input does not properly match the\n *   encoding format\n */\nfunction decodeBytesRaw(encoded, encoding = \"base64\") {\n    // Buffer's base64 decoding can accept padded or unpadded strings.\n    return Buffer.from(encoded, encoding);\n}\n/**\n * Decodes cryptographic bytes from a string, auto-determining the encoding\n * based on the input length and character set.\n *\n * @param encoded the string-encoded bytes\n * @param encodingPattern a regex which matches valid encodings of bytes with\n *   an expected fixed size.  This pattern is expected to have groups\n *   separately matching each of the supported encodings.  See\n *   {@link PRIVATE_KEY_REGEX} for an example.\n * @param encodingGroups a description of the match groups in the regex,\n *   in the order they should be checked.\n * @param errorMessage human-readable message for error thrown if decoding\n *  fails.\n * @throws TypeError if the pattern doesn't match\n */\nfunction decodeBytesAuto(encoded, encodingPattern, encodingGroups, errorMessage) {\n    if (encoded && typeof encoded === \"string\" && encoded !== \"\") {\n        const matched = encoded.match(encodingPattern);\n        if (matched !== null) {\n            for (const encodingGroup of encodingGroups) {\n                if (matched[encodingGroup.index] &&\n                    matched[encodingGroup.index] !== \"\") {\n                    return decodeBytesRaw(encoded, encodingGroup.encoding);\n                }\n            }\n            // Fallthrough if no group matches.\n        }\n    }\n    throw new TypeError(errorMessage ?? \"Invalid encoded bytes\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/pod/dist/esm/src/podUtil.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/semaphore-group-pcd/dist/esm/src/SemaphoreGroupPCD.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@pcd/semaphore-group-pcd/dist/esm/src/SemaphoreGroupPCD.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SemaphoreGroupPCD: () => (/* binding */ SemaphoreGroupPCD),\n/* harmony export */   SemaphoreGroupPCDTypeName: () => (/* binding */ SemaphoreGroupPCDTypeName)\n/* harmony export */ });\nconst SemaphoreGroupPCDTypeName = \"semaphore-group-signal\";\nclass SemaphoreGroupPCD {\n    constructor(id, claim, proof) {\n        this.type = SemaphoreGroupPCDTypeName;\n        this.id = id;\n        this.claim = claim;\n        this.proof = proof;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC9zZW1hcGhvcmUtZ3JvdXAtcGNkL2Rpc3QvZXNtL3NyYy9TZW1hcGhvcmVHcm91cFBDRC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2NoYW5jZW1jYWxsaXN0ZXIvUHJvamVjdHMvenVwYXNzaHVudC9ub2RlX21vZHVsZXMvQHBjZC9zZW1hcGhvcmUtZ3JvdXAtcGNkL2Rpc3QvZXNtL3NyYy9TZW1hcGhvcmVHcm91cFBDRC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgU2VtYXBob3JlR3JvdXBQQ0RUeXBlTmFtZSA9IFwic2VtYXBob3JlLWdyb3VwLXNpZ25hbFwiO1xuZXhwb3J0IGNsYXNzIFNlbWFwaG9yZUdyb3VwUENEIHtcbiAgICBjb25zdHJ1Y3RvcihpZCwgY2xhaW0sIHByb29mKSB7XG4gICAgICAgIHRoaXMudHlwZSA9IFNlbWFwaG9yZUdyb3VwUENEVHlwZU5hbWU7XG4gICAgICAgIHRoaXMuaWQgPSBpZDtcbiAgICAgICAgdGhpcy5jbGFpbSA9IGNsYWltO1xuICAgICAgICB0aGlzLnByb29mID0gcHJvb2Y7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/semaphore-group-pcd/dist/esm/src/SemaphoreGroupPCD.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/semaphore-identity-pcd/dist/esm/src/SemaphoreIdentityPCD.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@pcd/semaphore-identity-pcd/dist/esm/src/SemaphoreIdentityPCD.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SemaphoreIdentityPCD: () => (/* binding */ SemaphoreIdentityPCD),\n/* harmony export */   SemaphoreIdentityPCDTypeName: () => (/* binding */ SemaphoreIdentityPCDTypeName),\n/* harmony export */   isSemaphoreIdentityPCD: () => (/* binding */ isSemaphoreIdentityPCD)\n/* harmony export */ });\n/* harmony import */ var _v4IdentityUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v4IdentityUtils.js */ \"(ssr)/./node_modules/@pcd/semaphore-identity-pcd/dist/esm/src/v4IdentityUtils.js\");\n\nconst SemaphoreIdentityPCDTypeName = \"semaphore-identity-pcd\";\nfunction isSemaphoreIdentityPCD(pcd) {\n    return pcd.type === SemaphoreIdentityPCDTypeName;\n}\nclass SemaphoreIdentityPCD {\n    constructor(id, claim) {\n        this.type = SemaphoreIdentityPCDTypeName;\n        this.claim = claim;\n        this.proof = undefined;\n        this.id = id;\n        if ((0,_v4IdentityUtils_js__WEBPACK_IMPORTED_MODULE_0__.v3tov4Identity)(claim.identityV3).export() !== claim.identityV4.export()) {\n            throw new Error(\"v3tov4Identity(claim.identity) !== claim.identityV4\");\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC9zZW1hcGhvcmUtaWRlbnRpdHktcGNkL2Rpc3QvZXNtL3NyYy9TZW1hcGhvcmVJZGVudGl0eVBDRC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXNEO0FBQy9DO0FBQ0E7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxtRUFBYztBQUMxQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2NoYW5jZW1jYWxsaXN0ZXIvUHJvamVjdHMvenVwYXNzaHVudC9ub2RlX21vZHVsZXMvQHBjZC9zZW1hcGhvcmUtaWRlbnRpdHktcGNkL2Rpc3QvZXNtL3NyYy9TZW1hcGhvcmVJZGVudGl0eVBDRC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2M3RvdjRJZGVudGl0eSB9IGZyb20gXCIuL3Y0SWRlbnRpdHlVdGlscy5qc1wiO1xuZXhwb3J0IGNvbnN0IFNlbWFwaG9yZUlkZW50aXR5UENEVHlwZU5hbWUgPSBcInNlbWFwaG9yZS1pZGVudGl0eS1wY2RcIjtcbmV4cG9ydCBmdW5jdGlvbiBpc1NlbWFwaG9yZUlkZW50aXR5UENEKHBjZCkge1xuICAgIHJldHVybiBwY2QudHlwZSA9PT0gU2VtYXBob3JlSWRlbnRpdHlQQ0RUeXBlTmFtZTtcbn1cbmV4cG9ydCBjbGFzcyBTZW1hcGhvcmVJZGVudGl0eVBDRCB7XG4gICAgY29uc3RydWN0b3IoaWQsIGNsYWltKSB7XG4gICAgICAgIHRoaXMudHlwZSA9IFNlbWFwaG9yZUlkZW50aXR5UENEVHlwZU5hbWU7XG4gICAgICAgIHRoaXMuY2xhaW0gPSBjbGFpbTtcbiAgICAgICAgdGhpcy5wcm9vZiA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgICAgICBpZiAodjN0b3Y0SWRlbnRpdHkoY2xhaW0uaWRlbnRpdHlWMykuZXhwb3J0KCkgIT09IGNsYWltLmlkZW50aXR5VjQuZXhwb3J0KCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInYzdG92NElkZW50aXR5KGNsYWltLmlkZW50aXR5KSAhPT0gY2xhaW0uaWRlbnRpdHlWNFwiKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/semaphore-identity-pcd/dist/esm/src/SemaphoreIdentityPCD.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/semaphore-identity-pcd/dist/esm/src/forwardedTypes.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@pcd/semaphore-identity-pcd/dist/esm/src/forwardedTypes.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IdentityV3: () => (/* reexport safe */ _pcd_semaphore_identity_v3_wrapper__WEBPACK_IMPORTED_MODULE_0__.Identity),\n/* harmony export */   IdentityV4: () => (/* reexport safe */ _semaphore_protocol_core__WEBPACK_IMPORTED_MODULE_1__.Identity)\n/* harmony export */ });\n/* harmony import */ var _pcd_semaphore_identity_v3_wrapper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pcd/semaphore-identity-v3-wrapper */ \"(ssr)/./node_modules/@pcd/semaphore-identity-v3-wrapper/dist/esm/src/index.js\");\n/* harmony import */ var _semaphore_protocol_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @semaphore-protocol/core */ \"(ssr)/./node_modules/@semaphore-protocol/core/src/index.js\");\n// yarn 1.xx (which we are using) doesn't support explicitly depending on several\n// different versions of a package. Luckily, semaphore provides the identity package\n// both as a standalone, and as part of a broader `core` package. Thus, to support\n// both versions, we re-export both here, to make the available throughout the rest\n// of our codebase.\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC9zZW1hcGhvcmUtaWRlbnRpdHktcGNkL2Rpc3QvZXNtL3NyYy9mb3J3YXJkZWRUeXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM0RTtBQUNWIiwic291cmNlcyI6WyIvVXNlcnMvY2hhbmNlbWNhbGxpc3Rlci9Qcm9qZWN0cy96dXBhc3NodW50L25vZGVfbW9kdWxlcy9AcGNkL3NlbWFwaG9yZS1pZGVudGl0eS1wY2QvZGlzdC9lc20vc3JjL2ZvcndhcmRlZFR5cGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHlhcm4gMS54eCAod2hpY2ggd2UgYXJlIHVzaW5nKSBkb2Vzbid0IHN1cHBvcnQgZXhwbGljaXRseSBkZXBlbmRpbmcgb24gc2V2ZXJhbFxuLy8gZGlmZmVyZW50IHZlcnNpb25zIG9mIGEgcGFja2FnZS4gTHVja2lseSwgc2VtYXBob3JlIHByb3ZpZGVzIHRoZSBpZGVudGl0eSBwYWNrYWdlXG4vLyBib3RoIGFzIGEgc3RhbmRhbG9uZSwgYW5kIGFzIHBhcnQgb2YgYSBicm9hZGVyIGBjb3JlYCBwYWNrYWdlLiBUaHVzLCB0byBzdXBwb3J0XG4vLyBib3RoIHZlcnNpb25zLCB3ZSByZS1leHBvcnQgYm90aCBoZXJlLCB0byBtYWtlIHRoZSBhdmFpbGFibGUgdGhyb3VnaG91dCB0aGUgcmVzdFxuLy8gb2Ygb3VyIGNvZGViYXNlLlxuZXhwb3J0IHsgSWRlbnRpdHkgYXMgSWRlbnRpdHlWMyB9IGZyb20gXCJAcGNkL3NlbWFwaG9yZS1pZGVudGl0eS12My13cmFwcGVyXCI7XG5leHBvcnQgeyBJZGVudGl0eSBhcyBJZGVudGl0eVY0IH0gZnJvbSBcIkBzZW1hcGhvcmUtcHJvdG9jb2wvY29yZVwiO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/semaphore-identity-pcd/dist/esm/src/forwardedTypes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/semaphore-identity-pcd/dist/esm/src/v4IdentityUtils.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@pcd/semaphore-identity-pcd/dist/esm/src/v4IdentityUtils.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   v3IdentityToPCD: () => (/* binding */ v3IdentityToPCD),\n/* harmony export */   v3tov4Identity: () => (/* binding */ v3tov4Identity),\n/* harmony export */   v4PrivateKey: () => (/* binding */ v4PrivateKey),\n/* harmony export */   v4PublicKey: () => (/* binding */ v4PublicKey),\n/* harmony export */   v4PublicKeyToCommitment: () => (/* binding */ v4PublicKeyToCommitment)\n/* harmony export */ });\n/* harmony import */ var _pcd_pod__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @pcd/pod */ \"(ssr)/./node_modules/@pcd/pod/dist/esm/src/podCrypto.js\");\n/* harmony import */ var _pcd_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @pcd/util */ \"(ssr)/./node_modules/@pcd/util/dist/esm/src/index.js\");\n/* harmony import */ var _zk_kit_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zk-kit/utils */ \"(ssr)/./node_modules/@zk-kit/utils/dist/index.node.js\");\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! js-sha256 */ \"(ssr)/./node_modules/@pcd/semaphore-identity-pcd/node_modules/js-sha256/src/sha256.js\");\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(js_sha256__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var poseidon_lite_poseidon2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! poseidon-lite/poseidon2 */ \"(ssr)/./node_modules/poseidon-lite/poseidon2.js\");\n/* harmony import */ var _forwardedTypes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./forwardedTypes.js */ \"(ssr)/./node_modules/@pcd/semaphore-identity-pcd/dist/esm/src/forwardedTypes.js\");\n/* harmony import */ var _SemaphoreIdentityPCD_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SemaphoreIdentityPCD.js */ \"(ssr)/./node_modules/@pcd/semaphore-identity-pcd/dist/esm/src/SemaphoreIdentityPCD.js\");\n\n\n\n\n\n\n\n/**\n * Given a semaphore v4 public key, returns the corresponding v4 identity commitment.\n */\nfunction v4PublicKeyToCommitment(publicKey) {\n    // matches implementation in semaphore v4 lib:\n    // https://github.com/semaphore-protocol/semaphore/blob/3572f44/packages/identity/src/index.ts#L49\n    return (0,poseidon_lite_poseidon2__WEBPACK_IMPORTED_MODULE_3__.poseidon2)((0,_pcd_pod__WEBPACK_IMPORTED_MODULE_6__.decodePublicKey)(publicKey)).toString();\n}\n/**\n * Given a semaphore v4 identity, returns it's EdDSA public key as a base64 encoded string.\n */\nfunction v4PublicKey(identity) {\n    return (0,_pcd_pod__WEBPACK_IMPORTED_MODULE_6__.encodePublicKey)(identity.publicKey);\n}\n/**\n * Given a semaphore v4 identity, returns it's EdDSA private key as a base64 encoded string.\n */\nfunction v4PrivateKey(identity) {\n    return (0,_pcd_pod__WEBPACK_IMPORTED_MODULE_6__.encodePrivateKey)(Buffer.from(identity.export(), \"base64\"));\n}\n/**\n * Deterministic migration from a v3 to a v4 semaphore identity. Not reversible.\n */\nfunction v3tov4Identity(v3Identity) {\n    const hashInput = Buffer.from((0,_zk_kit_utils__WEBPACK_IMPORTED_MODULE_1__.beBigIntToBuffer)(v3Identity.nullifier, 32).toString(\"hex\") +\n        (0,_zk_kit_utils__WEBPACK_IMPORTED_MODULE_1__.beBigIntToBuffer)(v3Identity.trapdoor, 32).toString(\"hex\"), \"hex\");\n    // this private key needs to be 32 bytes to be compatible with POD\n    const privKey = Buffer.from((0,js_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256)(hashInput), \"hex\");\n    return new _forwardedTypes_js__WEBPACK_IMPORTED_MODULE_4__.IdentityV4(privKey);\n}\nfunction v3IdentityToPCD(v3Identity) {\n    return new _SemaphoreIdentityPCD_js__WEBPACK_IMPORTED_MODULE_5__.SemaphoreIdentityPCD((0,_pcd_util__WEBPACK_IMPORTED_MODULE_0__.randomUUID)(), {\n        identityV3: v3Identity,\n        identityV4: v3tov4Identity(v3Identity)\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC9zZW1hcGhvcmUtaWRlbnRpdHktcGNkL2Rpc3QvZXNtL3NyYy92NElkZW50aXR5VXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUE4RTtBQUN2QztBQUNVO0FBQ2Q7QUFDaUI7QUFDSDtBQUNnQjtBQUNqRTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxXQUFXLGtFQUFTLENBQUMseURBQWU7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcseURBQWU7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsMERBQWdCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxrQ0FBa0MsK0RBQWdCO0FBQ2xELFFBQVEsK0RBQWdCO0FBQ3hCO0FBQ0EsZ0NBQWdDLGlEQUFNO0FBQ3RDLGVBQWUsMERBQVU7QUFDekI7QUFDTztBQUNQLGVBQWUsMEVBQW9CLENBQUMscURBQVU7QUFDOUM7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsiL1VzZXJzL2NoYW5jZW1jYWxsaXN0ZXIvUHJvamVjdHMvenVwYXNzaHVudC9ub2RlX21vZHVsZXMvQHBjZC9zZW1hcGhvcmUtaWRlbnRpdHktcGNkL2Rpc3QvZXNtL3NyYy92NElkZW50aXR5VXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVjb2RlUHVibGljS2V5LCBlbmNvZGVQcml2YXRlS2V5LCBlbmNvZGVQdWJsaWNLZXkgfSBmcm9tIFwiQHBjZC9wb2RcIjtcbmltcG9ydCB7IHJhbmRvbVVVSUQgfSBmcm9tIFwiQHBjZC91dGlsXCI7XG5pbXBvcnQgeyBiZUJpZ0ludFRvQnVmZmVyIH0gZnJvbSBcIkB6ay1raXQvdXRpbHNcIjtcbmltcG9ydCB7IHNoYTI1NiB9IGZyb20gXCJqcy1zaGEyNTZcIjtcbmltcG9ydCB7IHBvc2VpZG9uMiB9IGZyb20gXCJwb3NlaWRvbi1saXRlL3Bvc2VpZG9uMlwiO1xuaW1wb3J0IHsgSWRlbnRpdHlWNCB9IGZyb20gXCIuL2ZvcndhcmRlZFR5cGVzLmpzXCI7XG5pbXBvcnQgeyBTZW1hcGhvcmVJZGVudGl0eVBDRCB9IGZyb20gXCIuL1NlbWFwaG9yZUlkZW50aXR5UENELmpzXCI7XG4vKipcbiAqIEdpdmVuIGEgc2VtYXBob3JlIHY0IHB1YmxpYyBrZXksIHJldHVybnMgdGhlIGNvcnJlc3BvbmRpbmcgdjQgaWRlbnRpdHkgY29tbWl0bWVudC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHY0UHVibGljS2V5VG9Db21taXRtZW50KHB1YmxpY0tleSkge1xuICAgIC8vIG1hdGNoZXMgaW1wbGVtZW50YXRpb24gaW4gc2VtYXBob3JlIHY0IGxpYjpcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vc2VtYXBob3JlLXByb3RvY29sL3NlbWFwaG9yZS9ibG9iLzM1NzJmNDQvcGFja2FnZXMvaWRlbnRpdHkvc3JjL2luZGV4LnRzI0w0OVxuICAgIHJldHVybiBwb3NlaWRvbjIoZGVjb2RlUHVibGljS2V5KHB1YmxpY0tleSkpLnRvU3RyaW5nKCk7XG59XG4vKipcbiAqIEdpdmVuIGEgc2VtYXBob3JlIHY0IGlkZW50aXR5LCByZXR1cm5zIGl0J3MgRWREU0EgcHVibGljIGtleSBhcyBhIGJhc2U2NCBlbmNvZGVkIHN0cmluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHY0UHVibGljS2V5KGlkZW50aXR5KSB7XG4gICAgcmV0dXJuIGVuY29kZVB1YmxpY0tleShpZGVudGl0eS5wdWJsaWNLZXkpO1xufVxuLyoqXG4gKiBHaXZlbiBhIHNlbWFwaG9yZSB2NCBpZGVudGl0eSwgcmV0dXJucyBpdCdzIEVkRFNBIHByaXZhdGUga2V5IGFzIGEgYmFzZTY0IGVuY29kZWQgc3RyaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdjRQcml2YXRlS2V5KGlkZW50aXR5KSB7XG4gICAgcmV0dXJuIGVuY29kZVByaXZhdGVLZXkoQnVmZmVyLmZyb20oaWRlbnRpdHkuZXhwb3J0KCksIFwiYmFzZTY0XCIpKTtcbn1cbi8qKlxuICogRGV0ZXJtaW5pc3RpYyBtaWdyYXRpb24gZnJvbSBhIHYzIHRvIGEgdjQgc2VtYXBob3JlIGlkZW50aXR5LiBOb3QgcmV2ZXJzaWJsZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHYzdG92NElkZW50aXR5KHYzSWRlbnRpdHkpIHtcbiAgICBjb25zdCBoYXNoSW5wdXQgPSBCdWZmZXIuZnJvbShiZUJpZ0ludFRvQnVmZmVyKHYzSWRlbnRpdHkubnVsbGlmaWVyLCAzMikudG9TdHJpbmcoXCJoZXhcIikgK1xuICAgICAgICBiZUJpZ0ludFRvQnVmZmVyKHYzSWRlbnRpdHkudHJhcGRvb3IsIDMyKS50b1N0cmluZyhcImhleFwiKSwgXCJoZXhcIik7XG4gICAgLy8gdGhpcyBwcml2YXRlIGtleSBuZWVkcyB0byBiZSAzMiBieXRlcyB0byBiZSBjb21wYXRpYmxlIHdpdGggUE9EXG4gICAgY29uc3QgcHJpdktleSA9IEJ1ZmZlci5mcm9tKHNoYTI1NihoYXNoSW5wdXQpLCBcImhleFwiKTtcbiAgICByZXR1cm4gbmV3IElkZW50aXR5VjQocHJpdktleSk7XG59XG5leHBvcnQgZnVuY3Rpb24gdjNJZGVudGl0eVRvUENEKHYzSWRlbnRpdHkpIHtcbiAgICByZXR1cm4gbmV3IFNlbWFwaG9yZUlkZW50aXR5UENEKHJhbmRvbVVVSUQoKSwge1xuICAgICAgICBpZGVudGl0eVYzOiB2M0lkZW50aXR5LFxuICAgICAgICBpZGVudGl0eVY0OiB2M3RvdjRJZGVudGl0eSh2M0lkZW50aXR5KVxuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/semaphore-identity-pcd/dist/esm/src/v4IdentityUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/semaphore-identity-pcd/node_modules/js-sha256/src/sha256.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@pcd/semaphore-identity-pcd/node_modules/js-sha256/src/sha256.js ***!
  \***************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.11.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2024\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && \"object\" === 'object' && module.exports;\n  var AMD =  true && __webpack_require__.amdO;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n  ];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n    method.create = function () {\n      return new Sha256(is224);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = __webpack_require__(/*! crypto */ \"crypto\")\n    var Buffer = (__webpack_require__(/*! buffer */ \"buffer\").Buffer);\n    var algorithm = is224 ? 'sha224' : 'sha256';\n    var bufferFrom;\n    if (Buffer.from && !root.JS_SHA256_NO_BUFFER_FROM) {\n      bufferFrom = Buffer.from;\n    } else {\n      bufferFrom = function (message) {\n        return new Buffer(message);\n      };\n    }\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(bufferFrom(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else { // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        this.block = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >>> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >>> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >>> 2] |= (0xc0 | (code >>> 6)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >>> 2] |= (0xe0 | (code >>> 12)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | ((code >>> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >>> 2] |= (0xf0 | (code >>> 18)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | ((code >>> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | ((code >>> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >>> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n      t1 = blocks[j - 2];\n      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n        ab = a & b;\n        maj = ab ^ (a & c) ^ bc;\n        ch = (e & f) ^ (~e & g);\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\n      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\n      da = d & a;\n      maj = da ^ (d & b) ^ ab;\n      ch = (h & e) ^ (~h & f);\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\n      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\n      cd = c & d;\n      maj = cd ^ (c & a) ^ da;\n      ch = (g & h) ^ (~g & e);\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\n      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\n      bc = b & c;\n      maj = bc ^ (b & d) ^ cd;\n      ch = (f & g) ^ (~f & h);\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n      this.chromeBugWorkAround = true;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var hex = HEX_CHARS[(h0 >>> 28) & 0x0F] + HEX_CHARS[(h0 >>> 24) & 0x0F] +\n      HEX_CHARS[(h0 >>> 20) & 0x0F] + HEX_CHARS[(h0 >>> 16) & 0x0F] +\n      HEX_CHARS[(h0 >>> 12) & 0x0F] + HEX_CHARS[(h0 >>> 8) & 0x0F] +\n      HEX_CHARS[(h0 >>> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h1 >>> 28) & 0x0F] + HEX_CHARS[(h1 >>> 24) & 0x0F] +\n      HEX_CHARS[(h1 >>> 20) & 0x0F] + HEX_CHARS[(h1 >>> 16) & 0x0F] +\n      HEX_CHARS[(h1 >>> 12) & 0x0F] + HEX_CHARS[(h1 >>> 8) & 0x0F] +\n      HEX_CHARS[(h1 >>> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h2 >>> 28) & 0x0F] + HEX_CHARS[(h2 >>> 24) & 0x0F] +\n      HEX_CHARS[(h2 >>> 20) & 0x0F] + HEX_CHARS[(h2 >>> 16) & 0x0F] +\n      HEX_CHARS[(h2 >>> 12) & 0x0F] + HEX_CHARS[(h2 >>> 8) & 0x0F] +\n      HEX_CHARS[(h2 >>> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h3 >>> 28) & 0x0F] + HEX_CHARS[(h3 >>> 24) & 0x0F] +\n      HEX_CHARS[(h3 >>> 20) & 0x0F] + HEX_CHARS[(h3 >>> 16) & 0x0F] +\n      HEX_CHARS[(h3 >>> 12) & 0x0F] + HEX_CHARS[(h3 >>> 8) & 0x0F] +\n      HEX_CHARS[(h3 >>> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h4 >>> 28) & 0x0F] + HEX_CHARS[(h4 >>> 24) & 0x0F] +\n      HEX_CHARS[(h4 >>> 20) & 0x0F] + HEX_CHARS[(h4 >>> 16) & 0x0F] +\n      HEX_CHARS[(h4 >>> 12) & 0x0F] + HEX_CHARS[(h4 >>> 8) & 0x0F] +\n      HEX_CHARS[(h4 >>> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +\n      HEX_CHARS[(h5 >>> 28) & 0x0F] + HEX_CHARS[(h5 >>> 24) & 0x0F] +\n      HEX_CHARS[(h5 >>> 20) & 0x0F] + HEX_CHARS[(h5 >>> 16) & 0x0F] +\n      HEX_CHARS[(h5 >>> 12) & 0x0F] + HEX_CHARS[(h5 >>> 8) & 0x0F] +\n      HEX_CHARS[(h5 >>> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +\n      HEX_CHARS[(h6 >>> 28) & 0x0F] + HEX_CHARS[(h6 >>> 24) & 0x0F] +\n      HEX_CHARS[(h6 >>> 20) & 0x0F] + HEX_CHARS[(h6 >>> 16) & 0x0F] +\n      HEX_CHARS[(h6 >>> 12) & 0x0F] + HEX_CHARS[(h6 >>> 8) & 0x0F] +\n      HEX_CHARS[(h6 >>> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];\n    if (!this.is224) {\n      hex += HEX_CHARS[(h7 >>> 28) & 0x0F] + HEX_CHARS[(h7 >>> 24) & 0x0F] +\n        HEX_CHARS[(h7 >>> 20) & 0x0F] + HEX_CHARS[(h7 >>> 16) & 0x0F] +\n        HEX_CHARS[(h7 >>> 12) & 0x0F] + HEX_CHARS[(h7 >>> 8) & 0x0F] +\n        HEX_CHARS[(h7 >>> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var arr = [\n      (h0 >>> 24) & 0xFF, (h0 >>> 16) & 0xFF, (h0 >>> 8) & 0xFF, h0 & 0xFF,\n      (h1 >>> 24) & 0xFF, (h1 >>> 16) & 0xFF, (h1 >>> 8) & 0xFF, h1 & 0xFF,\n      (h2 >>> 24) & 0xFF, (h2 >>> 16) & 0xFF, (h2 >>> 8) & 0xFF, h2 & 0xFF,\n      (h3 >>> 24) & 0xFF, (h3 >>> 16) & 0xFF, (h3 >>> 8) & 0xFF, h3 & 0xFF,\n      (h4 >>> 24) & 0xFF, (h4 >>> 16) & 0xFF, (h4 >>> 8) & 0xFF, h4 & 0xFF,\n      (h5 >>> 24) & 0xFF, (h5 >>> 16) & 0xFF, (h5 >>> 8) & 0xFF, h5 & 0xFF,\n      (h6 >>> 24) & 0xFF, (h6 >>> 16) & 0xFF, (h6 >>> 8) & 0xFF, h6 & 0xFF\n    ];\n    if (!this.is224) {\n      arr.push((h7 >>> 24) & 0xFF, (h7 >>> 16) & 0xFF, (h7 >>> 8) & 0xFF, h7 & 0xFF);\n    }\n    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i, type = typeof key;\n    if (type === 'string') {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >>> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >>> 12));\n          bytes[index++] = (0x80 | ((code >>> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >>> 18));\n          bytes[index++] = (0x80 | ((code >>> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >>> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n\n    if (key.length > 64) {\n      key = (new Sha256(is224, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n    root.sha224 = exports.sha224;\n    if (AMD) {\n      !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n        return exports;\n      }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    }\n  }\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/semaphore-identity-pcd/node_modules/js-sha256/src/sha256.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/semaphore-identity-v3-wrapper/dist/esm/src/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@pcd/semaphore-identity-v3-wrapper/dist/esm/src/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Identity: () => (/* reexport safe */ _semaphore_protocol_identity__WEBPACK_IMPORTED_MODULE_0__.Identity)\n/* harmony export */ });\n/* harmony import */ var _semaphore_protocol_identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @semaphore-protocol/identity */ \"(ssr)/./node_modules/@semaphore-protocol/identity/dist/index.mjs\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC9zZW1hcGhvcmUtaWRlbnRpdHktdjMtd3JhcHBlci9kaXN0L2VzbS9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNkMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGFuY2VtY2FsbGlzdGVyL1Byb2plY3RzL3p1cGFzc2h1bnQvbm9kZV9tb2R1bGVzL0BwY2Qvc2VtYXBob3JlLWlkZW50aXR5LXYzLXdyYXBwZXIvZGlzdC9lc20vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCJAc2VtYXBob3JlLXByb3RvY29sL2lkZW50aXR5XCI7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/semaphore-identity-v3-wrapper/dist/esm/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/util/dist/esm/src/Collections.js":
/*!************************************************************!*\
  !*** ./node_modules/@pcd/util/dist/esm/src/Collections.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onlyDefined: () => (/* binding */ onlyDefined)\n/* harmony export */ });\nfunction onlyDefined(t) {\n    return t.filter((i) => !!i);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC91dGlsL2Rpc3QvZXNtL3NyYy9Db2xsZWN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvY2hhbmNlbWNhbGxpc3Rlci9Qcm9qZWN0cy96dXBhc3NodW50L25vZGVfbW9kdWxlcy9AcGNkL3V0aWwvZGlzdC9lc20vc3JjL0NvbGxlY3Rpb25zLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBvbmx5RGVmaW5lZCh0KSB7XG4gICAgcmV0dXJuIHQuZmlsdGVyKChpKSA9PiAhIWkpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/util/dist/esm/src/Collections.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/util/dist/esm/src/Constants.js":
/*!**********************************************************!*\
  !*** ./node_modules/@pcd/util/dist/esm/src/Constants.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ONE_DAY_MS: () => (/* binding */ ONE_DAY_MS),\n/* harmony export */   ONE_HOUR_MS: () => (/* binding */ ONE_HOUR_MS),\n/* harmony export */   ONE_MINUTE_MS: () => (/* binding */ ONE_MINUTE_MS),\n/* harmony export */   ONE_SECOND_MS: () => (/* binding */ ONE_SECOND_MS),\n/* harmony export */   ZUPASS_GITHUB_REPOSITORY_URL: () => (/* binding */ ZUPASS_GITHUB_REPOSITORY_URL),\n/* harmony export */   ZUPASS_SENDER_EMAIL: () => (/* binding */ ZUPASS_SENDER_EMAIL),\n/* harmony export */   ZUPASS_SUPPORT_EMAIL: () => (/* binding */ ZUPASS_SUPPORT_EMAIL)\n/* harmony export */ });\nconst ONE_SECOND_MS = 1000;\nconst ONE_MINUTE_MS = ONE_SECOND_MS * 60;\nconst ONE_HOUR_MS = ONE_MINUTE_MS * 60;\nconst ONE_DAY_MS = ONE_HOUR_MS * 24;\n/** Email to reach out to for Zupass-related support */\nconst ZUPASS_SUPPORT_EMAIL = \"support@zupass.org\";\n/** Email that will be sending out various notifications or messages related to Zupass */\nconst ZUPASS_SENDER_EMAIL = \"noreply@zupass.org\";\n/** Current GitHub repository for Zupass */\nconst ZUPASS_GITHUB_REPOSITORY_URL = \"https://github.com/proofcarryingdata/zupass\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC91dGlsL2Rpc3QvZXNtL3NyYy9Db25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFPO0FBQ0E7QUFDQTtBQUNBO0FBQ1A7QUFDTztBQUNQO0FBQ087QUFDUDtBQUNPIiwic291cmNlcyI6WyIvVXNlcnMvY2hhbmNlbWNhbGxpc3Rlci9Qcm9qZWN0cy96dXBhc3NodW50L25vZGVfbW9kdWxlcy9AcGNkL3V0aWwvZGlzdC9lc20vc3JjL0NvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgT05FX1NFQ09ORF9NUyA9IDEwMDA7XG5leHBvcnQgY29uc3QgT05FX01JTlVURV9NUyA9IE9ORV9TRUNPTkRfTVMgKiA2MDtcbmV4cG9ydCBjb25zdCBPTkVfSE9VUl9NUyA9IE9ORV9NSU5VVEVfTVMgKiA2MDtcbmV4cG9ydCBjb25zdCBPTkVfREFZX01TID0gT05FX0hPVVJfTVMgKiAyNDtcbi8qKiBFbWFpbCB0byByZWFjaCBvdXQgdG8gZm9yIFp1cGFzcy1yZWxhdGVkIHN1cHBvcnQgKi9cbmV4cG9ydCBjb25zdCBaVVBBU1NfU1VQUE9SVF9FTUFJTCA9IFwic3VwcG9ydEB6dXBhc3Mub3JnXCI7XG4vKiogRW1haWwgdGhhdCB3aWxsIGJlIHNlbmRpbmcgb3V0IHZhcmlvdXMgbm90aWZpY2F0aW9ucyBvciBtZXNzYWdlcyByZWxhdGVkIHRvIFp1cGFzcyAqL1xuZXhwb3J0IGNvbnN0IFpVUEFTU19TRU5ERVJfRU1BSUwgPSBcIm5vcmVwbHlAenVwYXNzLm9yZ1wiO1xuLyoqIEN1cnJlbnQgR2l0SHViIHJlcG9zaXRvcnkgZm9yIFp1cGFzcyAqL1xuZXhwb3J0IGNvbnN0IFpVUEFTU19HSVRIVUJfUkVQT1NJVE9SWV9VUkwgPSBcImh0dHBzOi8vZ2l0aHViLmNvbS9wcm9vZmNhcnJ5aW5nZGF0YS96dXBhc3NcIjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/util/dist/esm/src/Constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/util/dist/esm/src/CryptoHelpers.js":
/*!**************************************************************!*\
  !*** ./node_modules/@pcd/util/dist/esm/src/CryptoHelpers.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRandomValues: () => (/* binding */ getRandomValues)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Environment_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Environment.js */ \"(ssr)/./node_modules/@pcd/util/dist/esm/src/Environment.js\");\n\n\n// The 'crypto' variable provides access to the functions defined\n// in the standard Web Crypto API (https://www.w3.org/TR/WebCryptoAPI).\nlet crypto;\n/**\n * Initialize the 'crypto' variable with an implementation that\n * is compatible with the Web Crypto API standard in both\n * browser and Node.js environments, requiring no additional\n * polyfills or code.\n * This code is compatible with Node.js < v18 too.\n */\nfunction initCryptoAPI() {\n    if (!crypto) {\n        if ((0,_Environment_js__WEBPACK_IMPORTED_MODULE_1__.isBrowser)()) {\n            crypto = globalThis.crypto;\n        }\n        else if ((0,_Environment_js__WEBPACK_IMPORTED_MODULE_1__.isNode)()) {\n            crypto = (crypto__WEBPACK_IMPORTED_MODULE_0___default().webcrypto);\n        }\n        else {\n            throw new Error(\"Crypto API is not defined\");\n        }\n    }\n    return crypto;\n}\n/**\n * Provide cryptographically strong random values.\n * @param numberOfBytes Number of bytes of the random value.\n * @returns Random value.\n */\nfunction getRandomValues(numberOfBytes) {\n    const crypto = initCryptoAPI();\n    return crypto.getRandomValues(new Uint8Array(numberOfBytes));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC91dGlsL2Rpc3QvZXNtL3NyYy9DcnlwdG9IZWxwZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBZ0M7QUFDcUI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwwREFBUztBQUNyQjtBQUNBO0FBQ0EsaUJBQWlCLHVEQUFNO0FBQ3ZCLHFCQUFxQix5REFBb0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGFuY2VtY2FsbGlzdGVyL1Byb2plY3RzL3p1cGFzc2h1bnQvbm9kZV9tb2R1bGVzL0BwY2QvdXRpbC9kaXN0L2VzbS9zcmMvQ3J5cHRvSGVscGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbm9kZUNyeXB0byBmcm9tIFwiY3J5cHRvXCI7XG5pbXBvcnQgeyBpc0Jyb3dzZXIsIGlzTm9kZSB9IGZyb20gXCIuL0Vudmlyb25tZW50LmpzXCI7XG4vLyBUaGUgJ2NyeXB0bycgdmFyaWFibGUgcHJvdmlkZXMgYWNjZXNzIHRvIHRoZSBmdW5jdGlvbnMgZGVmaW5lZFxuLy8gaW4gdGhlIHN0YW5kYXJkIFdlYiBDcnlwdG8gQVBJIChodHRwczovL3d3dy53My5vcmcvVFIvV2ViQ3J5cHRvQVBJKS5cbmxldCBjcnlwdG87XG4vKipcbiAqIEluaXRpYWxpemUgdGhlICdjcnlwdG8nIHZhcmlhYmxlIHdpdGggYW4gaW1wbGVtZW50YXRpb24gdGhhdFxuICogaXMgY29tcGF0aWJsZSB3aXRoIHRoZSBXZWIgQ3J5cHRvIEFQSSBzdGFuZGFyZCBpbiBib3RoXG4gKiBicm93c2VyIGFuZCBOb2RlLmpzIGVudmlyb25tZW50cywgcmVxdWlyaW5nIG5vIGFkZGl0aW9uYWxcbiAqIHBvbHlmaWxscyBvciBjb2RlLlxuICogVGhpcyBjb2RlIGlzIGNvbXBhdGlibGUgd2l0aCBOb2RlLmpzIDwgdjE4IHRvby5cbiAqL1xuZnVuY3Rpb24gaW5pdENyeXB0b0FQSSgpIHtcbiAgICBpZiAoIWNyeXB0bykge1xuICAgICAgICBpZiAoaXNCcm93c2VyKCkpIHtcbiAgICAgICAgICAgIGNyeXB0byA9IGdsb2JhbFRoaXMuY3J5cHRvO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGlzTm9kZSgpKSB7XG4gICAgICAgICAgICBjcnlwdG8gPSBub2RlQ3J5cHRvLndlYmNyeXB0bztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNyeXB0byBBUEkgaXMgbm90IGRlZmluZWRcIik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGNyeXB0bztcbn1cbi8qKlxuICogUHJvdmlkZSBjcnlwdG9ncmFwaGljYWxseSBzdHJvbmcgcmFuZG9tIHZhbHVlcy5cbiAqIEBwYXJhbSBudW1iZXJPZkJ5dGVzIE51bWJlciBvZiBieXRlcyBvZiB0aGUgcmFuZG9tIHZhbHVlLlxuICogQHJldHVybnMgUmFuZG9tIHZhbHVlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmFuZG9tVmFsdWVzKG51bWJlck9mQnl0ZXMpIHtcbiAgICBjb25zdCBjcnlwdG8gPSBpbml0Q3J5cHRvQVBJKCk7XG4gICAgcmV0dXJuIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMobmV3IFVpbnQ4QXJyYXkobnVtYmVyT2ZCeXRlcykpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/util/dist/esm/src/CryptoHelpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/util/dist/esm/src/Environment.js":
/*!************************************************************!*\
  !*** ./node_modules/@pcd/util/dist/esm/src/Environment.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBrowser: () => (/* binding */ isBrowser),\n/* harmony export */   isLocalStorageAvailable: () => (/* binding */ isLocalStorageAvailable),\n/* harmony export */   isNode: () => (/* binding */ isNode),\n/* harmony export */   isWebAssemblySupported: () => (/* binding */ isWebAssemblySupported)\n/* harmony export */ });\n/**\n * Secure method to check if the environment is Node.js.\n * @returns true if the environment is Node.js, false otherwise.\n */\nfunction isNode() {\n    // Checking the existence of 'window' variable, or 'process' is not enough,\n    // as those variables can be redefined by inner scopes (by any module/library).\n    // In the 'new Function()' constructor, the execution scope of 'this' is bound\n    // to the global scope and it can be compared to the expected value (the objects\n    // will have the same id if the environment is the expected one).\n    return new Function(\"try {return this===global}catch(e){ return false}\")();\n}\n/**\n * Secure method to check if the environment is a browser.\n * @returns true if the environment is a browser, false otherwise.\n */\nfunction isBrowser() {\n    return new Function(\"try {return this===window}catch(e){ return false}\")();\n}\n/**\n * Secure method to check if Web Assembly is supported.\n * It does the following:\n *   Check whether WebAssembly is accessible in the current scope.\n *   See whether it has the '.instantiate' function.\n *   Try to synchronously compile the smallest possible module\n *   See if we get a WebAssembly.Module out of it.\n *   Finally, try to synchronously instantiate that module, and check that it's a WebAssembly.Instance.\n * More info on: https://stackoverflow.com/questions/47879864/how-can-i-check-if-a-browser-supports-webassembly.\n * @returns true if WASM is supported, false otherwise.\n */\nfunction isWebAssemblySupported() {\n    try {\n        if (typeof WebAssembly === \"object\" &&\n            typeof WebAssembly.instantiate === \"function\") {\n            const module = new WebAssembly.Module(Uint8Array.of(0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00));\n            if (module instanceof WebAssembly.Module) {\n                return new WebAssembly.Instance(module) instanceof WebAssembly.Instance;\n            }\n            return false;\n        }\n        return false;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Method that tests whether local storage is available by setting and\n * resetting a test entry in localStorage.\n */\nfunction isLocalStorageAvailable() {\n    try {\n        const key = `__storage__test`;\n        const originalValue = window.localStorage.getItem(key);\n        window.localStorage.setItem(key, \"test\");\n        if (originalValue !== null) {\n            window.localStorage.setItem(key, originalValue);\n        }\n        else {\n            window.localStorage.removeItem(key);\n        }\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC91dGlsL2Rpc3QvZXNtL3NyYy9FbnZpcm9ubWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIscUJBQXFCLFVBQVUsYUFBYTtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCw4QkFBOEIscUJBQXFCLFVBQVUsYUFBYTtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2NoYW5jZW1jYWxsaXN0ZXIvUHJvamVjdHMvenVwYXNzaHVudC9ub2RlX21vZHVsZXMvQHBjZC91dGlsL2Rpc3QvZXNtL3NyYy9FbnZpcm9ubWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNlY3VyZSBtZXRob2QgdG8gY2hlY2sgaWYgdGhlIGVudmlyb25tZW50IGlzIE5vZGUuanMuXG4gKiBAcmV0dXJucyB0cnVlIGlmIHRoZSBlbnZpcm9ubWVudCBpcyBOb2RlLmpzLCBmYWxzZSBvdGhlcndpc2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc05vZGUoKSB7XG4gICAgLy8gQ2hlY2tpbmcgdGhlIGV4aXN0ZW5jZSBvZiAnd2luZG93JyB2YXJpYWJsZSwgb3IgJ3Byb2Nlc3MnIGlzIG5vdCBlbm91Z2gsXG4gICAgLy8gYXMgdGhvc2UgdmFyaWFibGVzIGNhbiBiZSByZWRlZmluZWQgYnkgaW5uZXIgc2NvcGVzIChieSBhbnkgbW9kdWxlL2xpYnJhcnkpLlxuICAgIC8vIEluIHRoZSAnbmV3IEZ1bmN0aW9uKCknIGNvbnN0cnVjdG9yLCB0aGUgZXhlY3V0aW9uIHNjb3BlIG9mICd0aGlzJyBpcyBib3VuZFxuICAgIC8vIHRvIHRoZSBnbG9iYWwgc2NvcGUgYW5kIGl0IGNhbiBiZSBjb21wYXJlZCB0byB0aGUgZXhwZWN0ZWQgdmFsdWUgKHRoZSBvYmplY3RzXG4gICAgLy8gd2lsbCBoYXZlIHRoZSBzYW1lIGlkIGlmIHRoZSBlbnZpcm9ubWVudCBpcyB0aGUgZXhwZWN0ZWQgb25lKS5cbiAgICByZXR1cm4gbmV3IEZ1bmN0aW9uKFwidHJ5IHtyZXR1cm4gdGhpcz09PWdsb2JhbH1jYXRjaChlKXsgcmV0dXJuIGZhbHNlfVwiKSgpO1xufVxuLyoqXG4gKiBTZWN1cmUgbWV0aG9kIHRvIGNoZWNrIGlmIHRoZSBlbnZpcm9ubWVudCBpcyBhIGJyb3dzZXIuXG4gKiBAcmV0dXJucyB0cnVlIGlmIHRoZSBlbnZpcm9ubWVudCBpcyBhIGJyb3dzZXIsIGZhbHNlIG90aGVyd2lzZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzQnJvd3NlcigpIHtcbiAgICByZXR1cm4gbmV3IEZ1bmN0aW9uKFwidHJ5IHtyZXR1cm4gdGhpcz09PXdpbmRvd31jYXRjaChlKXsgcmV0dXJuIGZhbHNlfVwiKSgpO1xufVxuLyoqXG4gKiBTZWN1cmUgbWV0aG9kIHRvIGNoZWNrIGlmIFdlYiBBc3NlbWJseSBpcyBzdXBwb3J0ZWQuXG4gKiBJdCBkb2VzIHRoZSBmb2xsb3dpbmc6XG4gKiAgIENoZWNrIHdoZXRoZXIgV2ViQXNzZW1ibHkgaXMgYWNjZXNzaWJsZSBpbiB0aGUgY3VycmVudCBzY29wZS5cbiAqICAgU2VlIHdoZXRoZXIgaXQgaGFzIHRoZSAnLmluc3RhbnRpYXRlJyBmdW5jdGlvbi5cbiAqICAgVHJ5IHRvIHN5bmNocm9ub3VzbHkgY29tcGlsZSB0aGUgc21hbGxlc3QgcG9zc2libGUgbW9kdWxlXG4gKiAgIFNlZSBpZiB3ZSBnZXQgYSBXZWJBc3NlbWJseS5Nb2R1bGUgb3V0IG9mIGl0LlxuICogICBGaW5hbGx5LCB0cnkgdG8gc3luY2hyb25vdXNseSBpbnN0YW50aWF0ZSB0aGF0IG1vZHVsZSwgYW5kIGNoZWNrIHRoYXQgaXQncyBhIFdlYkFzc2VtYmx5Lkluc3RhbmNlLlxuICogTW9yZSBpbmZvIG9uOiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy80Nzg3OTg2NC9ob3ctY2FuLWktY2hlY2staWYtYS1icm93c2VyLXN1cHBvcnRzLXdlYmFzc2VtYmx5LlxuICogQHJldHVybnMgdHJ1ZSBpZiBXQVNNIGlzIHN1cHBvcnRlZCwgZmFsc2Ugb3RoZXJ3aXNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNXZWJBc3NlbWJseVN1cHBvcnRlZCgpIHtcbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIFdlYkFzc2VtYmx5ID09PSBcIm9iamVjdFwiICYmXG4gICAgICAgICAgICB0eXBlb2YgV2ViQXNzZW1ibHkuaW5zdGFudGlhdGUgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgY29uc3QgbW9kdWxlID0gbmV3IFdlYkFzc2VtYmx5Lk1vZHVsZShVaW50OEFycmF5Lm9mKDB4MCwgMHg2MSwgMHg3MywgMHg2ZCwgMHgwMSwgMHgwMCwgMHgwMCwgMHgwMCkpO1xuICAgICAgICAgICAgaWYgKG1vZHVsZSBpbnN0YW5jZW9mIFdlYkFzc2VtYmx5Lk1vZHVsZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgV2ViQXNzZW1ibHkuSW5zdGFuY2UobW9kdWxlKSBpbnN0YW5jZW9mIFdlYkFzc2VtYmx5Lkluc3RhbmNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbi8qKlxuICogTWV0aG9kIHRoYXQgdGVzdHMgd2hldGhlciBsb2NhbCBzdG9yYWdlIGlzIGF2YWlsYWJsZSBieSBzZXR0aW5nIGFuZFxuICogcmVzZXR0aW5nIGEgdGVzdCBlbnRyeSBpbiBsb2NhbFN0b3JhZ2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0xvY2FsU3RvcmFnZUF2YWlsYWJsZSgpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBrZXkgPSBgX19zdG9yYWdlX190ZXN0YDtcbiAgICAgICAgY29uc3Qgb3JpZ2luYWxWYWx1ZSA9IHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpO1xuICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCBcInRlc3RcIik7XG4gICAgICAgIGlmIChvcmlnaW5hbFZhbHVlICE9PSBudWxsKSB7XG4gICAgICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCBvcmlnaW5hbFZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/util/dist/esm/src/Environment.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/util/dist/esm/src/Errors.js":
/*!*******************************************************!*\
  !*** ./node_modules/@pcd/util/dist/esm/src/Errors.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   causalChain: () => (/* binding */ causalChain),\n/* harmony export */   getErrorMessage: () => (/* binding */ getErrorMessage),\n/* harmony export */   isError: () => (/* binding */ isError),\n/* harmony export */   requireDefinedParameter: () => (/* binding */ requireDefinedParameter)\n/* harmony export */ });\n/**\n * Either extracts the error message out of an error, or converts\n * the value passed in into a string.\n */\nfunction getErrorMessage(e) {\n    if (e instanceof Error) {\n        return e.message;\n    }\n    return e + \"\";\n}\n/**\n * Check if a parameter is defined. If not, it throws an error.\n * @param parameter Parameter to be checked.\n * @param parameterName Name of the parameter.\n */\nfunction requireDefinedParameter(parameter, parameterName) {\n    if (typeof parameter === \"undefined\") {\n        throw new Error(`${parameterName} must be defined`);\n    }\n}\nfunction isError(err) {\n    return err instanceof Error;\n}\n/**\n * Takes an error, and continues yielding errors by tracing the chain of\n * '.cause' properties on the error object.\n * Finally yields a \"rootCause\" object for Rollbar to log as a custom\n * property.\n */\nfunction* causalChain(err) {\n    // There's always at least one error\n    yield err;\n    // While the error has a cause, yield it and see if there's another one\n    while (isError(err.cause)) {\n        yield err.cause;\n        err = err.cause;\n    }\n    // The message of the last error in the chain is the root cause.\n    // This object will get logged as a custom property on the \"item\"\n    // in Rollbar.\n    const rootCause = err.message;\n    yield { rootCause };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC91dGlsL2Rpc3QvZXNtL3NyYy9FcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSwyQkFBMkIsZUFBZTtBQUMxQztBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaIiwic291cmNlcyI6WyIvVXNlcnMvY2hhbmNlbWNhbGxpc3Rlci9Qcm9qZWN0cy96dXBhc3NodW50L25vZGVfbW9kdWxlcy9AcGNkL3V0aWwvZGlzdC9lc20vc3JjL0Vycm9ycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEVpdGhlciBleHRyYWN0cyB0aGUgZXJyb3IgbWVzc2FnZSBvdXQgb2YgYW4gZXJyb3IsIG9yIGNvbnZlcnRzXG4gKiB0aGUgdmFsdWUgcGFzc2VkIGluIGludG8gYSBzdHJpbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRFcnJvck1lc3NhZ2UoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIGUubWVzc2FnZTtcbiAgICB9XG4gICAgcmV0dXJuIGUgKyBcIlwiO1xufVxuLyoqXG4gKiBDaGVjayBpZiBhIHBhcmFtZXRlciBpcyBkZWZpbmVkLiBJZiBub3QsIGl0IHRocm93cyBhbiBlcnJvci5cbiAqIEBwYXJhbSBwYXJhbWV0ZXIgUGFyYW1ldGVyIHRvIGJlIGNoZWNrZWQuXG4gKiBAcGFyYW0gcGFyYW1ldGVyTmFtZSBOYW1lIG9mIHRoZSBwYXJhbWV0ZXIuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXF1aXJlRGVmaW5lZFBhcmFtZXRlcihwYXJhbWV0ZXIsIHBhcmFtZXRlck5hbWUpIHtcbiAgICBpZiAodHlwZW9mIHBhcmFtZXRlciA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7cGFyYW1ldGVyTmFtZX0gbXVzdCBiZSBkZWZpbmVkYCk7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGlzRXJyb3IoZXJyKSB7XG4gICAgcmV0dXJuIGVyciBpbnN0YW5jZW9mIEVycm9yO1xufVxuLyoqXG4gKiBUYWtlcyBhbiBlcnJvciwgYW5kIGNvbnRpbnVlcyB5aWVsZGluZyBlcnJvcnMgYnkgdHJhY2luZyB0aGUgY2hhaW4gb2ZcbiAqICcuY2F1c2UnIHByb3BlcnRpZXMgb24gdGhlIGVycm9yIG9iamVjdC5cbiAqIEZpbmFsbHkgeWllbGRzIGEgXCJyb290Q2F1c2VcIiBvYmplY3QgZm9yIFJvbGxiYXIgdG8gbG9nIGFzIGEgY3VzdG9tXG4gKiBwcm9wZXJ0eS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uKiBjYXVzYWxDaGFpbihlcnIpIHtcbiAgICAvLyBUaGVyZSdzIGFsd2F5cyBhdCBsZWFzdCBvbmUgZXJyb3JcbiAgICB5aWVsZCBlcnI7XG4gICAgLy8gV2hpbGUgdGhlIGVycm9yIGhhcyBhIGNhdXNlLCB5aWVsZCBpdCBhbmQgc2VlIGlmIHRoZXJlJ3MgYW5vdGhlciBvbmVcbiAgICB3aGlsZSAoaXNFcnJvcihlcnIuY2F1c2UpKSB7XG4gICAgICAgIHlpZWxkIGVyci5jYXVzZTtcbiAgICAgICAgZXJyID0gZXJyLmNhdXNlO1xuICAgIH1cbiAgICAvLyBUaGUgbWVzc2FnZSBvZiB0aGUgbGFzdCBlcnJvciBpbiB0aGUgY2hhaW4gaXMgdGhlIHJvb3QgY2F1c2UuXG4gICAgLy8gVGhpcyBvYmplY3Qgd2lsbCBnZXQgbG9nZ2VkIGFzIGEgY3VzdG9tIHByb3BlcnR5IG9uIHRoZSBcIml0ZW1cIlxuICAgIC8vIGluIFJvbGxiYXIuXG4gICAgY29uc3Qgcm9vdENhdXNlID0gZXJyLm1lc3NhZ2U7XG4gICAgeWllbGQgeyByb290Q2F1c2UgfTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/util/dist/esm/src/Errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/util/dist/esm/src/NumericRepresentation.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@pcd/util/dist/esm/src/NumericRepresentation.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   booleanToBigInt: () => (/* binding */ booleanToBigInt),\n/* harmony export */   decStringToBigIntToUuid: () => (/* binding */ decStringToBigIntToUuid),\n/* harmony export */   fromHexString: () => (/* binding */ fromHexString),\n/* harmony export */   hexToBigInt: () => (/* binding */ hexToBigInt),\n/* harmony export */   numberToBigInt: () => (/* binding */ numberToBigInt),\n/* harmony export */   toHexString: () => (/* binding */ toHexString),\n/* harmony export */   uuidToBigInt: () => (/* binding */ uuidToBigInt)\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(buffer__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/uuid/dist/esm-node/stringify.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/uuid/dist/esm-node/parse.js\");\n\n\n/**\n * Converts a byte array to a hex string.  Opposite of fromHexString().\n */\nfunction toHexString(bytes) {\n    return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(bytes).toString(\"hex\");\n}\n/**\n * Converts a hex string to a byte-array.  Opposite of toHexString().\n */\nfunction fromHexString(hexString) {\n    return buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(hexString, \"hex\");\n}\n/**\n * Converts a number (as decimal string) to a UUID (as string) in the\n * format of uuid.stringify.\n */\nfunction decStringToBigIntToUuid(value) {\n    let hexStr = BigInt(value).toString(16);\n    while (hexStr.length < 32)\n        hexStr = \"0\" + hexStr;\n    const buf = buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(hexStr, \"hex\");\n    return (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(buf);\n}\n/**\n * Converts a UUID string into a bigint.\n */\nfunction uuidToBigInt(v) {\n    // a uuid is just a particular representation of 16 bytes\n    const bytes = (0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(v);\n    const hex = \"0x\" + buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(bytes).toString(\"hex\");\n    return BigInt(hex);\n}\n/**\n * Converts a native number to a bigint.\n */\nfunction numberToBigInt(v) {\n    return BigInt(v);\n}\n/**\n * Converts a hex number to a bigint.\n */\nfunction hexToBigInt(v) {\n    if (!v.startsWith(\"0x\")) {\n        v = \"0x\" + v;\n    }\n    return BigInt(v);\n}\n/**\n * Converts a boolean to a bigint value of 0 or 1.\n */\nfunction booleanToBigInt(v) {\n    return BigInt(v ? 1 : 0);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC91dGlsL2Rpc3QvZXNtL3NyYy9OdW1lcmljUmVwcmVzZW50YXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBZ0M7QUFDc0M7QUFDdEU7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLDBDQUFNO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLDBDQUFNO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwQ0FBTTtBQUN0QixXQUFXLGdEQUFhO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGtCQUFrQixnREFBUztBQUMzQix1QkFBdUIsMENBQU07QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2NoYW5jZW1jYWxsaXN0ZXIvUHJvamVjdHMvenVwYXNzaHVudC9ub2RlX21vZHVsZXMvQHBjZC91dGlsL2Rpc3QvZXNtL3NyYy9OdW1lcmljUmVwcmVzZW50YXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnVmZmVyIH0gZnJvbSBcImJ1ZmZlclwiO1xuaW1wb3J0IHsgcGFyc2UgYXMgdXVpZFBhcnNlLCBzdHJpbmdpZnkgYXMgdXVpZFN0cmluZ2lmeSB9IGZyb20gXCJ1dWlkXCI7XG4vKipcbiAqIENvbnZlcnRzIGEgYnl0ZSBhcnJheSB0byBhIGhleCBzdHJpbmcuICBPcHBvc2l0ZSBvZiBmcm9tSGV4U3RyaW5nKCkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b0hleFN0cmluZyhieXRlcykge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbShieXRlcykudG9TdHJpbmcoXCJoZXhcIik7XG59XG4vKipcbiAqIENvbnZlcnRzIGEgaGV4IHN0cmluZyB0byBhIGJ5dGUtYXJyYXkuICBPcHBvc2l0ZSBvZiB0b0hleFN0cmluZygpLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZnJvbUhleFN0cmluZyhoZXhTdHJpbmcpIHtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20oaGV4U3RyaW5nLCBcImhleFwiKTtcbn1cbi8qKlxuICogQ29udmVydHMgYSBudW1iZXIgKGFzIGRlY2ltYWwgc3RyaW5nKSB0byBhIFVVSUQgKGFzIHN0cmluZykgaW4gdGhlXG4gKiBmb3JtYXQgb2YgdXVpZC5zdHJpbmdpZnkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNTdHJpbmdUb0JpZ0ludFRvVXVpZCh2YWx1ZSkge1xuICAgIGxldCBoZXhTdHIgPSBCaWdJbnQodmFsdWUpLnRvU3RyaW5nKDE2KTtcbiAgICB3aGlsZSAoaGV4U3RyLmxlbmd0aCA8IDMyKVxuICAgICAgICBoZXhTdHIgPSBcIjBcIiArIGhleFN0cjtcbiAgICBjb25zdCBidWYgPSBCdWZmZXIuZnJvbShoZXhTdHIsIFwiaGV4XCIpO1xuICAgIHJldHVybiB1dWlkU3RyaW5naWZ5KGJ1Zik7XG59XG4vKipcbiAqIENvbnZlcnRzIGEgVVVJRCBzdHJpbmcgaW50byBhIGJpZ2ludC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHV1aWRUb0JpZ0ludCh2KSB7XG4gICAgLy8gYSB1dWlkIGlzIGp1c3QgYSBwYXJ0aWN1bGFyIHJlcHJlc2VudGF0aW9uIG9mIDE2IGJ5dGVzXG4gICAgY29uc3QgYnl0ZXMgPSB1dWlkUGFyc2Uodik7XG4gICAgY29uc3QgaGV4ID0gXCIweFwiICsgQnVmZmVyLmZyb20oYnl0ZXMpLnRvU3RyaW5nKFwiaGV4XCIpO1xuICAgIHJldHVybiBCaWdJbnQoaGV4KTtcbn1cbi8qKlxuICogQ29udmVydHMgYSBuYXRpdmUgbnVtYmVyIHRvIGEgYmlnaW50LlxuICovXG5leHBvcnQgZnVuY3Rpb24gbnVtYmVyVG9CaWdJbnQodikge1xuICAgIHJldHVybiBCaWdJbnQodik7XG59XG4vKipcbiAqIENvbnZlcnRzIGEgaGV4IG51bWJlciB0byBhIGJpZ2ludC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhleFRvQmlnSW50KHYpIHtcbiAgICBpZiAoIXYuc3RhcnRzV2l0aChcIjB4XCIpKSB7XG4gICAgICAgIHYgPSBcIjB4XCIgKyB2O1xuICAgIH1cbiAgICByZXR1cm4gQmlnSW50KHYpO1xufVxuLyoqXG4gKiBDb252ZXJ0cyBhIGJvb2xlYW4gdG8gYSBiaWdpbnQgdmFsdWUgb2YgMCBvciAxLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYm9vbGVhblRvQmlnSW50KHYpIHtcbiAgICByZXR1cm4gQmlnSW50KHYgPyAxIDogMCk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/util/dist/esm/src/NumericRepresentation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/util/dist/esm/src/Pseudonyms.js":
/*!***********************************************************!*\
  !*** ./node_modules/@pcd/util/dist/esm/src/Pseudonyms.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PSEUDONYM_TO_EMOJI: () => (/* binding */ PSEUDONYM_TO_EMOJI),\n/* harmony export */   bigIntToPseudonymEmoji: () => (/* binding */ bigIntToPseudonymEmoji),\n/* harmony export */   bigIntToPseudonymName: () => (/* binding */ bigIntToPseudonymName),\n/* harmony export */   bigintToPseudonym: () => (/* binding */ bigintToPseudonym),\n/* harmony export */   bigintToPseudonymNumber: () => (/* binding */ bigintToPseudonymNumber),\n/* harmony export */   emailToBigint: () => (/* binding */ emailToBigint)\n/* harmony export */ });\nconst PSEUDONYM_TO_EMOJI = {\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴍᴏɴᴋᴇʏ\": \"🐒\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ʙᴇᴀʀ\": \"🐻\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴅᴜᴄᴋ\": \"🦆\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴏᴡʟ\": \"🦉\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ʜᴏʀꜱᴇ\": \"🐴\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ʙᴇᴇ\": \"🐝\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴡᴏʀᴍ\": \"🪱\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ʙᴜᴛᴛᴇʀꜰʟʏ\": \"🦋\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ꜱɴᴀɪʟ\": \"🐌\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴛᴜʀᴛʟᴇ\": \"🐢\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ʟɪᴢᴀʀᴅ\": \"🦎\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ꜰʀᴏɢ\": \"🐸\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴛ ʀᴇx\": \"🦖\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴏᴄᴛᴏᴘᴜꜱ\": \"🐙\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ꜱʜʀɪᴍᴘ\": \"🦐\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴄʀᴀʙ\": \"🦀\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ꜰɪꜱʜ\": \"🐟\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴅᴏʟᴘʜɪɴ\": \"🐬\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴡʜᴀʟᴇ\": \"🐳\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴢᴇʙʀᴀ\": \"🦓\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴏʀᴀɴɢᴜᴛᴀɴ\": \"🦧\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴇʟᴇᴘʜᴀɴᴛ\": \"🐘\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴄᴀᴍᴇʟ\": \"🐫\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ɢɪʀᴀꜰꜰᴇ\": \"🦒\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴋᴀɴɢᴀʀᴏᴏ\": \"🦘\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴄᴏᴡ\": \"🐄\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ꜱʜᴇᴇᴘ\": \"🐑\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴄᴀᴛ\": \"🐈\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴄʜɪᴄᴋᴇɴ\": \"🐓\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴘᴀʀʀᴏᴛ\": \"🦜\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ꜰʟᴀᴍɪɴɢᴏ\": \"🦩\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ꜱᴋᴜɴᴋ\": \"🦨\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ʀᴀᴄᴄᴏᴏɴ\": \"🦝\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ꜱʟᴏᴛʜ\": \"🦥\",\n    \"ᴀɴᴏɴ ᴇ. ᴍᴏᴜꜱᴇ\": \"🐀\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ʜᴇᴅɢᴇʜᴏɢ\": \"🦔\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ʟᴏɢ\": \"🪵\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴍᴜꜱʜʀᴏᴏᴍ\": \"🍄\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴄᴀᴄᴛᴜꜱ\": \"🌵\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ꜱᴜɴꜰʟᴏᴡᴇʀ\": \"🌻\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴄᴏʀɴ\": \"🌽\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴘᴇᴀɴᴜᴛ\": \"🥜\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ʙᴀɢᴜᴇᴛᴛᴇ\": \"🥖\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴄᴀɴᴏᴇ\": \"🛶\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ʏᴀᴍ\": \"🍠\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴘᴜᴍᴘᴋɪɴ\": \"🎃\",\n    \"ᴀɴᴏɴʏᴍᴏᴜꜱ ᴍᴏᴏɴ\": \"🌚\"\n};\nfunction bigIntToPseudonymEmoji(input) {\n    const key = Number(input % BigInt(Object.keys(PSEUDONYM_TO_EMOJI).length));\n    return Object.values(PSEUDONYM_TO_EMOJI)[key];\n}\nfunction bigIntToPseudonymName(input) {\n    const key = Number(input % BigInt(Object.keys(PSEUDONYM_TO_EMOJI).length));\n    return Object.keys(PSEUDONYM_TO_EMOJI)[key];\n}\nfunction bigintToPseudonymNumber(input) {\n    return `${bigIntToPseudonymName(input)} #${input % 10000n}`;\n}\n/** Converts a given number, such as a nullifier hash, to a pseudonym. */\nfunction bigintToPseudonym(input) {\n    return `${bigIntToPseudonymEmoji(input)} ${bigIntToPseudonymName(input)}`;\n}\nfunction emailToBigint(email) {\n    let bigIntValue = BigInt(0);\n    for (let i = 0; i < email.length; i++) {\n        bigIntValue = (bigIntValue << BigInt(16)) + BigInt(email.charCodeAt(i));\n    }\n    return bigIntValue;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC91dGlsL2Rpc3QvZXNtL3NyYy9Qc2V1ZG9ueW1zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsY0FBYyw4QkFBOEIsR0FBRyxlQUFlO0FBQzlEO0FBQ0E7QUFDTztBQUNQLGNBQWMsK0JBQStCLEVBQUUsNkJBQTZCO0FBQzVFO0FBQ087QUFDUDtBQUNBLG9CQUFvQixrQkFBa0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGFuY2VtY2FsbGlzdGVyL1Byb2plY3RzL3p1cGFzc2h1bnQvbm9kZV9tb2R1bGVzL0BwY2QvdXRpbC9kaXN0L2VzbS9zcmMvUHNldWRvbnltcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgUFNFVURPTllNX1RPX0VNT0pJID0ge1xuICAgIFwi4bSAybThtI/JtMqP4bSN4bSP4bSc6pyxIOG0jeG0j8m04bSL4bSHyo9cIjogXCLwn5CSXCIsXG4gICAgXCLhtIDJtOG0j8m0yo/htI3htI/htJzqnLEgypnhtIfhtIDKgFwiOiBcIvCfkLtcIixcbiAgICBcIuG0gMm04bSPybTKj+G0jeG0j+G0nOqcsSDhtIXhtJzhtIThtItcIjogXCLwn6aGXCIsXG4gICAgXCLhtIDJtOG0j8m0yo/htI3htI/htJzqnLEg4bSP4bShyp9cIjogXCLwn6aJXCIsXG4gICAgXCLhtIDJtOG0j8m0yo/htI3htI/htJzqnLEgypzhtI/KgOqcseG0h1wiOiBcIvCfkLRcIixcbiAgICBcIuG0gMm04bSPybTKj+G0jeG0j+G0nOqcsSDKmeG0h+G0h1wiOiBcIvCfkJ1cIixcbiAgICBcIuG0gMm04bSPybTKj+G0jeG0j+G0nOqcsSDhtKHhtI/KgOG0jVwiOiBcIvCfqrFcIixcbiAgICBcIuG0gMm04bSPybTKj+G0jeG0j+G0nOqcsSDKmeG0nOG0m+G0m+G0h8qA6pywyp/Kj1wiOiBcIvCfpotcIixcbiAgICBcIuG0gMm04bSPybTKj+G0jeG0j+G0nOqcsSDqnLHJtOG0gMmqyp9cIjogXCLwn5CMXCIsXG4gICAgXCLhtIDJtOG0j8m0yo/htI3htI/htJzqnLEg4bSb4bScyoDhtJvKn+G0h1wiOiBcIvCfkKJcIixcbiAgICBcIuG0gMm04bSPybTKj+G0jeG0j+G0nOqcsSDKn8mq4bSi4bSAyoDhtIVcIjogXCLwn6aOXCIsXG4gICAgXCLhtIDJtOG0j8m0yo/htI3htI/htJzqnLEg6pywyoDhtI/JolwiOiBcIvCfkLhcIixcbiAgICBcIuG0gMm04bSPybTKj+G0jeG0j+G0nOqcsSDhtJsgyoDhtId4XCI6IFwi8J+mllwiLFxuICAgIFwi4bSAybThtI/JtMqP4bSN4bSP4bSc6pyxIOG0j+G0hOG0m+G0j+G0mOG0nOqcsVwiOiBcIvCfkJlcIixcbiAgICBcIuG0gMm04bSPybTKj+G0jeG0j+G0nOqcsSDqnLHKnMqAyarhtI3htJhcIjogXCLwn6aQXCIsXG4gICAgXCLhtIDJtOG0j8m0yo/htI3htI/htJzqnLEg4bSEyoDhtIDKmVwiOiBcIvCfpoBcIixcbiAgICBcIuG0gMm04bSPybTKj+G0jeG0j+G0nOqcsSDqnLDJquqcscqcXCI6IFwi8J+Qn1wiLFxuICAgIFwi4bSAybThtI/JtMqP4bSN4bSP4bSc6pyxIOG0heG0j8qf4bSYypzJqsm0XCI6IFwi8J+QrFwiLFxuICAgIFwi4bSAybThtI/JtMqP4bSN4bSP4bSc6pyxIOG0ocqc4bSAyp/htIdcIjogXCLwn5CzXCIsXG4gICAgXCLhtIDJtOG0j8m0yo/htI3htI/htJzqnLEg4bSi4bSHypnKgOG0gFwiOiBcIvCfppNcIixcbiAgICBcIuG0gMm04bSPybTKj+G0jeG0j+G0nOqcsSDhtI/KgOG0gMm0yaLhtJzhtJvhtIDJtFwiOiBcIvCfpqdcIixcbiAgICBcIuG0gMm04bSPybTKj+G0jeG0j+G0nOqcsSDhtIfKn+G0h+G0mMqc4bSAybThtJtcIjogXCLwn5CYXCIsXG4gICAgXCLhtIDJtOG0j8m0yo/htI3htI/htJzqnLEg4bSE4bSA4bSN4bSHyp9cIjogXCLwn5CrXCIsXG4gICAgXCLhtIDJtOG0j8m0yo/htI3htI/htJzqnLEgyaLJqsqA4bSA6pyw6pyw4bSHXCI6IFwi8J+mklwiLFxuICAgIFwi4bSAybThtI/JtMqP4bSN4bSP4bSc6pyxIOG0i+G0gMm0yaLhtIDKgOG0j+G0j1wiOiBcIvCfpphcIixcbiAgICBcIuG0gMm04bSPybTKj+G0jeG0j+G0nOqcsSDhtIThtI/htKFcIjogXCLwn5CEXCIsXG4gICAgXCLhtIDJtOG0j8m0yo/htI3htI/htJzqnLEg6pyxypzhtIfhtIfhtJhcIjogXCLwn5CRXCIsXG4gICAgXCLhtIDJtOG0j8m0yo/htI3htI/htJzqnLEg4bSE4bSA4bSbXCI6IFwi8J+QiFwiLFxuICAgIFwi4bSAybThtI/JtMqP4bSN4bSP4bSc6pyxIOG0hMqcyarhtIThtIvhtIfJtFwiOiBcIvCfkJNcIixcbiAgICBcIuG0gMm04bSPybTKj+G0jeG0j+G0nOqcsSDhtJjhtIDKgMqA4bSP4bSbXCI6IFwi8J+mnFwiLFxuICAgIFwi4bSAybThtI/JtMqP4bSN4bSP4bSc6pyxIOqcsMqf4bSA4bSNyarJtMmi4bSPXCI6IFwi8J+mqVwiLFxuICAgIFwi4bSAybThtI/JtMqP4bSN4bSP4bSc6pyxIOqcseG0i+G0nMm04bSLXCI6IFwi8J+mqFwiLFxuICAgIFwi4bSAybThtI/JtMqP4bSN4bSP4bSc6pyxIMqA4bSA4bSE4bSE4bSP4bSPybRcIjogXCLwn6adXCIsXG4gICAgXCLhtIDJtOG0j8m0yo/htI3htI/htJzqnLEg6pyxyp/htI/htJvKnFwiOiBcIvCfpqVcIixcbiAgICBcIuG0gMm04bSPybQg4bSHLiDhtI3htI/htJzqnLHhtIdcIjogXCLwn5CAXCIsXG4gICAgXCLhtIDJtOG0j8m0yo/htI3htI/htJzqnLEgypzhtIfhtIXJouG0h8qc4bSPyaJcIjogXCLwn6aUXCIsXG4gICAgXCLhtIDJtOG0j8m0yo/htI3htI/htJzqnLEgyp/htI/JolwiOiBcIvCfqrVcIixcbiAgICBcIuG0gMm04bSPybTKj+G0jeG0j+G0nOqcsSDhtI3htJzqnLHKnMqA4bSP4bSP4bSNXCI6IFwi8J+NhFwiLFxuICAgIFwi4bSAybThtI/JtMqP4bSN4bSP4bSc6pyxIOG0hOG0gOG0hOG0m+G0nOqcsVwiOiBcIvCfjLVcIixcbiAgICBcIuG0gMm04bSPybTKj+G0jeG0j+G0nOqcsSDqnLHhtJzJtOqcsMqf4bSP4bSh4bSHyoBcIjogXCLwn4y7XCIsXG4gICAgXCLhtIDJtOG0j8m0yo/htI3htI/htJzqnLEg4bSE4bSPyoDJtFwiOiBcIvCfjL1cIixcbiAgICBcIuG0gMm04bSPybTKj+G0jeG0j+G0nOqcsSDhtJjhtIfhtIDJtOG0nOG0m1wiOiBcIvCfpZxcIixcbiAgICBcIuG0gMm04bSPybTKj+G0jeG0j+G0nOqcsSDKmeG0gMmi4bSc4bSH4bSb4bSb4bSHXCI6IFwi8J+lllwiLFxuICAgIFwi4bSAybThtI/JtMqP4bSN4bSP4bSc6pyxIOG0hOG0gMm04bSP4bSHXCI6IFwi8J+btlwiLFxuICAgIFwi4bSAybThtI/JtMqP4bSN4bSP4bSc6pyxIMqP4bSA4bSNXCI6IFwi8J+NoFwiLFxuICAgIFwi4bSAybThtI/JtMqP4bSN4bSP4bSc6pyxIOG0mOG0nOG0jeG0mOG0i8mqybRcIjogXCLwn46DXCIsXG4gICAgXCLhtIDJtOG0j8m0yo/htI3htI/htJzqnLEg4bSN4bSP4bSPybRcIjogXCLwn4yaXCJcbn07XG5leHBvcnQgZnVuY3Rpb24gYmlnSW50VG9Qc2V1ZG9ueW1FbW9qaShpbnB1dCkge1xuICAgIGNvbnN0IGtleSA9IE51bWJlcihpbnB1dCAlIEJpZ0ludChPYmplY3Qua2V5cyhQU0VVRE9OWU1fVE9fRU1PSkkpLmxlbmd0aCkpO1xuICAgIHJldHVybiBPYmplY3QudmFsdWVzKFBTRVVET05ZTV9UT19FTU9KSSlba2V5XTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBiaWdJbnRUb1BzZXVkb255bU5hbWUoaW5wdXQpIHtcbiAgICBjb25zdCBrZXkgPSBOdW1iZXIoaW5wdXQgJSBCaWdJbnQoT2JqZWN0LmtleXMoUFNFVURPTllNX1RPX0VNT0pJKS5sZW5ndGgpKTtcbiAgICByZXR1cm4gT2JqZWN0LmtleXMoUFNFVURPTllNX1RPX0VNT0pJKVtrZXldO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGJpZ2ludFRvUHNldWRvbnltTnVtYmVyKGlucHV0KSB7XG4gICAgcmV0dXJuIGAke2JpZ0ludFRvUHNldWRvbnltTmFtZShpbnB1dCl9ICMke2lucHV0ICUgMTAwMDBufWA7XG59XG4vKiogQ29udmVydHMgYSBnaXZlbiBudW1iZXIsIHN1Y2ggYXMgYSBudWxsaWZpZXIgaGFzaCwgdG8gYSBwc2V1ZG9ueW0uICovXG5leHBvcnQgZnVuY3Rpb24gYmlnaW50VG9Qc2V1ZG9ueW0oaW5wdXQpIHtcbiAgICByZXR1cm4gYCR7YmlnSW50VG9Qc2V1ZG9ueW1FbW9qaShpbnB1dCl9ICR7YmlnSW50VG9Qc2V1ZG9ueW1OYW1lKGlucHV0KX1gO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVtYWlsVG9CaWdpbnQoZW1haWwpIHtcbiAgICBsZXQgYmlnSW50VmFsdWUgPSBCaWdJbnQoMCk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbWFpbC5sZW5ndGg7IGkrKykge1xuICAgICAgICBiaWdJbnRWYWx1ZSA9IChiaWdJbnRWYWx1ZSA8PCBCaWdJbnQoMTYpKSArIEJpZ0ludChlbWFpbC5jaGFyQ29kZUF0KGkpKTtcbiAgICB9XG4gICAgcmV0dXJuIGJpZ0ludFZhbHVlO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/util/dist/esm/src/Pseudonyms.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/util/dist/esm/src/SNARKHelpers.js":
/*!*************************************************************!*\
  !*** ./node_modules/@pcd/util/dist/esm/src/SNARKHelpers.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BABY_JUB_NEGATIVE_ONE: () => (/* binding */ BABY_JUB_NEGATIVE_ONE),\n/* harmony export */   BABY_JUB_PRIME: () => (/* binding */ BABY_JUB_PRIME),\n/* harmony export */   BABY_JUB_SUBGROUP_ORDER_MINUS_ONE: () => (/* binding */ BABY_JUB_SUBGROUP_ORDER_MINUS_ONE),\n/* harmony export */   babyJubIsNegativeOne: () => (/* binding */ babyJubIsNegativeOne),\n/* harmony export */   generateSnarkMessageHash: () => (/* binding */ generateSnarkMessageHash)\n/* harmony export */ });\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-sha256 */ \"(ssr)/./node_modules/js-sha256/src/sha256.js\");\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(js_sha256__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * Baby Jubjub prime, i.e. the order of the Baby Jubjub base field, which is the\n * order of the BN254 scalar field.\n */\nconst BABY_JUB_PRIME = BigInt(\"21888242871839275222246405745257275088548364400416034343698204186575808495617\");\n/**\n * Encoding of -1 in the Baby Jubjub base field (as p-1).\n */\nconst BABY_JUB_NEGATIVE_ONE = BABY_JUB_PRIME - 1n;\n/**\n * Encoding of -1 in the Baby Jubjub 251-bit prime order subgroup's scalar\n * field (as subgroupOrder-1).\n */\nconst BABY_JUB_SUBGROUP_ORDER_MINUS_ONE = BigInt(\"2736030358979909402780800718157159386076813972158567259200215660948447373040\");\n/**\n * Determines whether a given number (as decimal string) represents -1,\n * either directly, or via a value of p-1 in a Baby Jubjub field.\n *\n * @param value integer encoded in a string\n */\nfunction babyJubIsNegativeOne(value) {\n    const bigintValue = BigInt(value);\n    return bigintValue === BABY_JUB_NEGATIVE_ONE || bigintValue === BigInt(-1);\n}\n/**\n * Hashes a message to be signed with sha256 and truncates to fit into a\n * baby jub jub field element.  The result includes the top 248 bits of\n * the 256 bit hash.\n *\n * @param signal The initial message.\n * @returns The outputted hash, fed in as a signal to the Semaphore proof.\n */\nfunction generateSnarkMessageHash(signal) {\n    // right shift to fit into a field element, which is 254 bits long\n    // shift by 8 ensures we have a 253 bit element\n    return BigInt(\"0x\" + (0,js_sha256__WEBPACK_IMPORTED_MODULE_0__.sha256)(signal ?? \"\")) >> 8n;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC91dGlsL2Rpc3QvZXNtL3NyYy9TTkFSS0hlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EseUJBQXlCLGlEQUFNO0FBQy9CIiwic291cmNlcyI6WyIvVXNlcnMvY2hhbmNlbWNhbGxpc3Rlci9Qcm9qZWN0cy96dXBhc3NodW50L25vZGVfbW9kdWxlcy9AcGNkL3V0aWwvZGlzdC9lc20vc3JjL1NOQVJLSGVscGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzaGEyNTYgfSBmcm9tIFwianMtc2hhMjU2XCI7XG4vKipcbiAqIEJhYnkgSnVianViIHByaW1lLCBpLmUuIHRoZSBvcmRlciBvZiB0aGUgQmFieSBKdWJqdWIgYmFzZSBmaWVsZCwgd2hpY2ggaXMgdGhlXG4gKiBvcmRlciBvZiB0aGUgQk4yNTQgc2NhbGFyIGZpZWxkLlxuICovXG5leHBvcnQgY29uc3QgQkFCWV9KVUJfUFJJTUUgPSBCaWdJbnQoXCIyMTg4ODI0Mjg3MTgzOTI3NTIyMjI0NjQwNTc0NTI1NzI3NTA4ODU0ODM2NDQwMDQxNjAzNDM0MzY5ODIwNDE4NjU3NTgwODQ5NTYxN1wiKTtcbi8qKlxuICogRW5jb2Rpbmcgb2YgLTEgaW4gdGhlIEJhYnkgSnVianViIGJhc2UgZmllbGQgKGFzIHAtMSkuXG4gKi9cbmV4cG9ydCBjb25zdCBCQUJZX0pVQl9ORUdBVElWRV9PTkUgPSBCQUJZX0pVQl9QUklNRSAtIDFuO1xuLyoqXG4gKiBFbmNvZGluZyBvZiAtMSBpbiB0aGUgQmFieSBKdWJqdWIgMjUxLWJpdCBwcmltZSBvcmRlciBzdWJncm91cCdzIHNjYWxhclxuICogZmllbGQgKGFzIHN1Ymdyb3VwT3JkZXItMSkuXG4gKi9cbmV4cG9ydCBjb25zdCBCQUJZX0pVQl9TVUJHUk9VUF9PUkRFUl9NSU5VU19PTkUgPSBCaWdJbnQoXCIyNzM2MDMwMzU4OTc5OTA5NDAyNzgwODAwNzE4MTU3MTU5Mzg2MDc2ODEzOTcyMTU4NTY3MjU5MjAwMjE1NjYwOTQ4NDQ3MzczMDQwXCIpO1xuLyoqXG4gKiBEZXRlcm1pbmVzIHdoZXRoZXIgYSBnaXZlbiBudW1iZXIgKGFzIGRlY2ltYWwgc3RyaW5nKSByZXByZXNlbnRzIC0xLFxuICogZWl0aGVyIGRpcmVjdGx5LCBvciB2aWEgYSB2YWx1ZSBvZiBwLTEgaW4gYSBCYWJ5IEp1Ymp1YiBmaWVsZC5cbiAqXG4gKiBAcGFyYW0gdmFsdWUgaW50ZWdlciBlbmNvZGVkIGluIGEgc3RyaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBiYWJ5SnViSXNOZWdhdGl2ZU9uZSh2YWx1ZSkge1xuICAgIGNvbnN0IGJpZ2ludFZhbHVlID0gQmlnSW50KHZhbHVlKTtcbiAgICByZXR1cm4gYmlnaW50VmFsdWUgPT09IEJBQllfSlVCX05FR0FUSVZFX09ORSB8fCBiaWdpbnRWYWx1ZSA9PT0gQmlnSW50KC0xKTtcbn1cbi8qKlxuICogSGFzaGVzIGEgbWVzc2FnZSB0byBiZSBzaWduZWQgd2l0aCBzaGEyNTYgYW5kIHRydW5jYXRlcyB0byBmaXQgaW50byBhXG4gKiBiYWJ5IGp1YiBqdWIgZmllbGQgZWxlbWVudC4gIFRoZSByZXN1bHQgaW5jbHVkZXMgdGhlIHRvcCAyNDggYml0cyBvZlxuICogdGhlIDI1NiBiaXQgaGFzaC5cbiAqXG4gKiBAcGFyYW0gc2lnbmFsIFRoZSBpbml0aWFsIG1lc3NhZ2UuXG4gKiBAcmV0dXJucyBUaGUgb3V0cHV0dGVkIGhhc2gsIGZlZCBpbiBhcyBhIHNpZ25hbCB0byB0aGUgU2VtYXBob3JlIHByb29mLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVTbmFya01lc3NhZ2VIYXNoKHNpZ25hbCkge1xuICAgIC8vIHJpZ2h0IHNoaWZ0IHRvIGZpdCBpbnRvIGEgZmllbGQgZWxlbWVudCwgd2hpY2ggaXMgMjU0IGJpdHMgbG9uZ1xuICAgIC8vIHNoaWZ0IGJ5IDggZW5zdXJlcyB3ZSBoYXZlIGEgMjUzIGJpdCBlbGVtZW50XG4gICAgcmV0dXJuIEJpZ0ludChcIjB4XCIgKyBzaGEyNTYoc2lnbmFsID8/IFwiXCIpKSA+PiA4bjtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/util/dist/esm/src/SNARKHelpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/util/dist/esm/src/Types.js":
/*!******************************************************!*\
  !*** ./node_modules/@pcd/util/dist/esm/src/Types.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertUnreachable: () => (/* binding */ assertUnreachable)\n/* harmony export */ });\nfunction assertUnreachable(_, message) {\n    throw new Error(message ?? \"Unreachable\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC91dGlsL2Rpc3QvZXNtL3NyYy9UeXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvY2hhbmNlbWNhbGxpc3Rlci9Qcm9qZWN0cy96dXBhc3NodW50L25vZGVfbW9kdWxlcy9AcGNkL3V0aWwvZGlzdC9lc20vc3JjL1R5cGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBhc3NlcnRVbnJlYWNoYWJsZShfLCBtZXNzYWdlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UgPz8gXCJVbnJlYWNoYWJsZVwiKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/util/dist/esm/src/Types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/util/dist/esm/src/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@pcd/util/dist/esm/src/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BABY_JUB_NEGATIVE_ONE: () => (/* reexport safe */ _SNARKHelpers_js__WEBPACK_IMPORTED_MODULE_7__.BABY_JUB_NEGATIVE_ONE),\n/* harmony export */   BABY_JUB_PRIME: () => (/* reexport safe */ _SNARKHelpers_js__WEBPACK_IMPORTED_MODULE_7__.BABY_JUB_PRIME),\n/* harmony export */   BABY_JUB_SUBGROUP_ORDER_MINUS_ONE: () => (/* reexport safe */ _SNARKHelpers_js__WEBPACK_IMPORTED_MODULE_7__.BABY_JUB_SUBGROUP_ORDER_MINUS_ONE),\n/* harmony export */   ONE_DAY_MS: () => (/* reexport safe */ _Constants_js__WEBPACK_IMPORTED_MODULE_1__.ONE_DAY_MS),\n/* harmony export */   ONE_HOUR_MS: () => (/* reexport safe */ _Constants_js__WEBPACK_IMPORTED_MODULE_1__.ONE_HOUR_MS),\n/* harmony export */   ONE_MINUTE_MS: () => (/* reexport safe */ _Constants_js__WEBPACK_IMPORTED_MODULE_1__.ONE_MINUTE_MS),\n/* harmony export */   ONE_SECOND_MS: () => (/* reexport safe */ _Constants_js__WEBPACK_IMPORTED_MODULE_1__.ONE_SECOND_MS),\n/* harmony export */   PSEUDONYM_TO_EMOJI: () => (/* reexport safe */ _Pseudonyms_js__WEBPACK_IMPORTED_MODULE_6__.PSEUDONYM_TO_EMOJI),\n/* harmony export */   ZUPASS_GITHUB_REPOSITORY_URL: () => (/* reexport safe */ _Constants_js__WEBPACK_IMPORTED_MODULE_1__.ZUPASS_GITHUB_REPOSITORY_URL),\n/* harmony export */   ZUPASS_SENDER_EMAIL: () => (/* reexport safe */ _Constants_js__WEBPACK_IMPORTED_MODULE_1__.ZUPASS_SENDER_EMAIL),\n/* harmony export */   ZUPASS_SUPPORT_EMAIL: () => (/* reexport safe */ _Constants_js__WEBPACK_IMPORTED_MODULE_1__.ZUPASS_SUPPORT_EMAIL),\n/* harmony export */   assertUnreachable: () => (/* reexport safe */ _Types_js__WEBPACK_IMPORTED_MODULE_8__.assertUnreachable),\n/* harmony export */   babyJubIsNegativeOne: () => (/* reexport safe */ _SNARKHelpers_js__WEBPACK_IMPORTED_MODULE_7__.babyJubIsNegativeOne),\n/* harmony export */   bigIntToPseudonymEmoji: () => (/* reexport safe */ _Pseudonyms_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToPseudonymEmoji),\n/* harmony export */   bigIntToPseudonymName: () => (/* reexport safe */ _Pseudonyms_js__WEBPACK_IMPORTED_MODULE_6__.bigIntToPseudonymName),\n/* harmony export */   bigintToPseudonym: () => (/* reexport safe */ _Pseudonyms_js__WEBPACK_IMPORTED_MODULE_6__.bigintToPseudonym),\n/* harmony export */   bigintToPseudonymNumber: () => (/* reexport safe */ _Pseudonyms_js__WEBPACK_IMPORTED_MODULE_6__.bigintToPseudonymNumber),\n/* harmony export */   booleanToBigInt: () => (/* reexport safe */ _NumericRepresentation_js__WEBPACK_IMPORTED_MODULE_5__.booleanToBigInt),\n/* harmony export */   causalChain: () => (/* reexport safe */ _Errors_js__WEBPACK_IMPORTED_MODULE_4__.causalChain),\n/* harmony export */   decStringToBigIntToUuid: () => (/* reexport safe */ _NumericRepresentation_js__WEBPACK_IMPORTED_MODULE_5__.decStringToBigIntToUuid),\n/* harmony export */   emailToBigint: () => (/* reexport safe */ _Pseudonyms_js__WEBPACK_IMPORTED_MODULE_6__.emailToBigint),\n/* harmony export */   emptyStrToUndefined: () => (/* reexport safe */ _strings_js__WEBPACK_IMPORTED_MODULE_10__.emptyStrToUndefined),\n/* harmony export */   encodeAnonMessageIdAndReaction: () => (/* reexport safe */ _telegram_js__WEBPACK_IMPORTED_MODULE_11__.encodeAnonMessageIdAndReaction),\n/* harmony export */   flattenObject: () => (/* reexport safe */ _strings_js__WEBPACK_IMPORTED_MODULE_10__.flattenObject),\n/* harmony export */   fmtDuration: () => (/* reexport safe */ _strings_js__WEBPACK_IMPORTED_MODULE_10__.fmtDuration),\n/* harmony export */   fromHexString: () => (/* reexport safe */ _NumericRepresentation_js__WEBPACK_IMPORTED_MODULE_5__.fromHexString),\n/* harmony export */   generateSnarkMessageHash: () => (/* reexport safe */ _SNARKHelpers_js__WEBPACK_IMPORTED_MODULE_7__.generateSnarkMessageHash),\n/* harmony export */   getAnonTopicNullifier: () => (/* reexport safe */ _telegram_js__WEBPACK_IMPORTED_MODULE_11__.getAnonTopicNullifier),\n/* harmony export */   getErrorMessage: () => (/* reexport safe */ _Errors_js__WEBPACK_IMPORTED_MODULE_4__.getErrorMessage),\n/* harmony export */   getMessageWatermark: () => (/* reexport safe */ _telegram_js__WEBPACK_IMPORTED_MODULE_11__.getMessageWatermark),\n/* harmony export */   getRandomValues: () => (/* reexport safe */ _CryptoHelpers_js__WEBPACK_IMPORTED_MODULE_2__.getRandomValues),\n/* harmony export */   hexToBigInt: () => (/* reexport safe */ _NumericRepresentation_js__WEBPACK_IMPORTED_MODULE_5__.hexToBigInt),\n/* harmony export */   isBrowser: () => (/* reexport safe */ _Environment_js__WEBPACK_IMPORTED_MODULE_3__.isBrowser),\n/* harmony export */   isError: () => (/* reexport safe */ _Errors_js__WEBPACK_IMPORTED_MODULE_4__.isError),\n/* harmony export */   isFulfilled: () => (/* reexport safe */ _promises_js__WEBPACK_IMPORTED_MODULE_9__.isFulfilled),\n/* harmony export */   isLocalStorageAvailable: () => (/* reexport safe */ _Environment_js__WEBPACK_IMPORTED_MODULE_3__.isLocalStorageAvailable),\n/* harmony export */   isNode: () => (/* reexport safe */ _Environment_js__WEBPACK_IMPORTED_MODULE_3__.isNode),\n/* harmony export */   isWebAssemblySupported: () => (/* reexport safe */ _Environment_js__WEBPACK_IMPORTED_MODULE_3__.isWebAssemblySupported),\n/* harmony export */   normalizeEmail: () => (/* reexport safe */ _strings_js__WEBPACK_IMPORTED_MODULE_10__.normalizeEmail),\n/* harmony export */   numberToBigInt: () => (/* reexport safe */ _NumericRepresentation_js__WEBPACK_IMPORTED_MODULE_5__.numberToBigInt),\n/* harmony export */   onlyDefined: () => (/* reexport safe */ _Collections_js__WEBPACK_IMPORTED_MODULE_0__.onlyDefined),\n/* harmony export */   randomUUID: () => (/* reexport safe */ _uuidUtils_js__WEBPACK_IMPORTED_MODULE_12__.randomUUID),\n/* harmony export */   requireDefinedParameter: () => (/* reexport safe */ _Errors_js__WEBPACK_IMPORTED_MODULE_4__.requireDefinedParameter),\n/* harmony export */   sleep: () => (/* reexport safe */ _promises_js__WEBPACK_IMPORTED_MODULE_9__.sleep),\n/* harmony export */   str: () => (/* reexport safe */ _strings_js__WEBPACK_IMPORTED_MODULE_10__.str),\n/* harmony export */   toHexString: () => (/* reexport safe */ _NumericRepresentation_js__WEBPACK_IMPORTED_MODULE_5__.toHexString),\n/* harmony export */   tryParse: () => (/* reexport safe */ _strings_js__WEBPACK_IMPORTED_MODULE_10__.tryParse),\n/* harmony export */   uuidToBigInt: () => (/* reexport safe */ _NumericRepresentation_js__WEBPACK_IMPORTED_MODULE_5__.uuidToBigInt),\n/* harmony export */   validateEmail: () => (/* reexport safe */ _strings_js__WEBPACK_IMPORTED_MODULE_10__.validateEmail)\n/* harmony export */ });\n/* harmony import */ var _Collections_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Collections.js */ \"(ssr)/./node_modules/@pcd/util/dist/esm/src/Collections.js\");\n/* harmony import */ var _Constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Constants.js */ \"(ssr)/./node_modules/@pcd/util/dist/esm/src/Constants.js\");\n/* harmony import */ var _CryptoHelpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CryptoHelpers.js */ \"(ssr)/./node_modules/@pcd/util/dist/esm/src/CryptoHelpers.js\");\n/* harmony import */ var _Environment_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Environment.js */ \"(ssr)/./node_modules/@pcd/util/dist/esm/src/Environment.js\");\n/* harmony import */ var _Errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Errors.js */ \"(ssr)/./node_modules/@pcd/util/dist/esm/src/Errors.js\");\n/* harmony import */ var _NumericRepresentation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./NumericRepresentation.js */ \"(ssr)/./node_modules/@pcd/util/dist/esm/src/NumericRepresentation.js\");\n/* harmony import */ var _Pseudonyms_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Pseudonyms.js */ \"(ssr)/./node_modules/@pcd/util/dist/esm/src/Pseudonyms.js\");\n/* harmony import */ var _SNARKHelpers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./SNARKHelpers.js */ \"(ssr)/./node_modules/@pcd/util/dist/esm/src/SNARKHelpers.js\");\n/* harmony import */ var _Types_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Types.js */ \"(ssr)/./node_modules/@pcd/util/dist/esm/src/Types.js\");\n/* harmony import */ var _promises_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./promises.js */ \"(ssr)/./node_modules/@pcd/util/dist/esm/src/promises.js\");\n/* harmony import */ var _strings_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./strings.js */ \"(ssr)/./node_modules/@pcd/util/dist/esm/src/strings.js\");\n/* harmony import */ var _telegram_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./telegram.js */ \"(ssr)/./node_modules/@pcd/util/dist/esm/src/telegram.js\");\n/* harmony import */ var _uuidUtils_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./uuidUtils.js */ \"(ssr)/./node_modules/@pcd/util/dist/esm/src/uuidUtils.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC91dGlsL2Rpc3QvZXNtL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFpQztBQUNGO0FBQ0k7QUFDRjtBQUNMO0FBQ2U7QUFDWDtBQUNFO0FBQ1A7QUFDRztBQUNEO0FBQ0M7QUFDQyIsInNvdXJjZXMiOlsiL1VzZXJzL2NoYW5jZW1jYWxsaXN0ZXIvUHJvamVjdHMvenVwYXNzaHVudC9ub2RlX21vZHVsZXMvQHBjZC91dGlsL2Rpc3QvZXNtL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9Db2xsZWN0aW9ucy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vQ29uc3RhbnRzLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9DcnlwdG9IZWxwZXJzLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9FbnZpcm9ubWVudC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vRXJyb3JzLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9OdW1lcmljUmVwcmVzZW50YXRpb24uanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL1BzZXVkb255bXMuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL1NOQVJLSGVscGVycy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vVHlwZXMuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3Byb21pc2VzLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zdHJpbmdzLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi90ZWxlZ3JhbS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdXVpZFV0aWxzLmpzXCI7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/util/dist/esm/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/util/dist/esm/src/promises.js":
/*!*********************************************************!*\
  !*** ./node_modules/@pcd/util/dist/esm/src/promises.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isFulfilled: () => (/* binding */ isFulfilled),\n/* harmony export */   sleep: () => (/* binding */ sleep)\n/* harmony export */ });\nfunction isFulfilled(result) {\n    return result.status === \"fulfilled\";\n}\nasync function sleep(ms) {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve();\n        }, ms ?? 1);\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC91dGlsL2Rpc3QvZXNtL3NyYy9wcm9taXNlcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCIsInNvdXJjZXMiOlsiL1VzZXJzL2NoYW5jZW1jYWxsaXN0ZXIvUHJvamVjdHMvenVwYXNzaHVudC9ub2RlX21vZHVsZXMvQHBjZC91dGlsL2Rpc3QvZXNtL3NyYy9wcm9taXNlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNGdWxmaWxsZWQocmVzdWx0KSB7XG4gICAgcmV0dXJuIHJlc3VsdC5zdGF0dXMgPT09IFwiZnVsZmlsbGVkXCI7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2xlZXAobXMpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgIH0sIG1zID8/IDEpO1xuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/util/dist/esm/src/promises.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/util/dist/esm/src/strings.js":
/*!********************************************************!*\
  !*** ./node_modules/@pcd/util/dist/esm/src/strings.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   emptyStrToUndefined: () => (/* binding */ emptyStrToUndefined),\n/* harmony export */   flattenObject: () => (/* binding */ flattenObject),\n/* harmony export */   fmtDuration: () => (/* binding */ fmtDuration),\n/* harmony export */   normalizeEmail: () => (/* binding */ normalizeEmail),\n/* harmony export */   str: () => (/* binding */ str),\n/* harmony export */   tryParse: () => (/* binding */ tryParse),\n/* harmony export */   validateEmail: () => (/* binding */ validateEmail)\n/* harmony export */ });\n/* harmony import */ var email_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! email-validator */ \"(ssr)/./node_modules/email-validator/index.js\");\n\n/**\n * Normalizes email so that equivalent emails can be compared.\n */\nfunction normalizeEmail(email) {\n    return email.toLowerCase().trim();\n}\n/**\n * Returns whether or not the parameter is an email address.\n */\nfunction validateEmail(email) {\n    return email_validator__WEBPACK_IMPORTED_MODULE_0__.validate(email);\n}\n/**\n * Converts `{ a: { b: \"c\" }, d: \"e\", f: { } }`\n * Into:\n * ```\n * [\n *   [\"a.b\": \"c\"],\n *   [\"d\": \"3\"]\n * ]\n * ```\n */\nfunction flattenObject(obj) {\n    if (obj === undefined || obj === null) {\n        return [];\n    }\n    let res = [];\n    for (const [k, v] of Object.entries(obj)) {\n        if (typeof v === \"string\" || typeof v === \"number\") {\n            res.push([k, v + \"\"]);\n        }\n        else {\n            const flattenedChild = flattenObject(v).map(([ck, cv]) => [k + \".\" + ck, cv]);\n            res = [...res, ...flattenedChild];\n        }\n    }\n    return res;\n}\n/**\n * Shorthand for {@code JSON.stringify}\n */\nfunction str(val) {\n    return JSON.stringify(val, null, 2);\n}\n/**\n * Formats a duration of milliseconds into hh:mm:ss.\n */\nfunction fmtDuration(totalMs) {\n    const sec_num = Math.floor(totalMs / 1000);\n    const hours = Math.floor(sec_num / 3600);\n    const minutes = Math.floor((sec_num - hours * 3600) / 60);\n    const seconds = sec_num - hours * 3600 - minutes * 60;\n    let hoursFmt = hours + \"\";\n    let minutesFmt = minutes + \"\";\n    let secondsFmt = seconds + \"\";\n    if (hours < 10) {\n        hoursFmt = \"0\" + hours;\n    }\n    if (minutes < 10) {\n        minutesFmt = \"0\" + minutes;\n    }\n    if (seconds < 10) {\n        secondsFmt = \"0\" + seconds;\n    }\n    return hoursFmt + \":\" + minutesFmt + \":\" + secondsFmt;\n}\n/**\n * Converts an empty string to undefined, while passing other argument\n * values through unmodified.\n */\nfunction emptyStrToUndefined(inStr) {\n    if (inStr === \"\") {\n        return undefined;\n    }\n    return inStr;\n}\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch {\n        return undefined;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC91dGlsL2Rpc3QvZXNtL3NyYy9zdHJpbmdzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyxxREFBa0I7QUFDN0I7QUFDQTtBQUNBLGVBQWUsS0FBSyxRQUFRLGtCQUFrQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvY2hhbmNlbWNhbGxpc3Rlci9Qcm9qZWN0cy96dXBhc3NodW50L25vZGVfbW9kdWxlcy9AcGNkL3V0aWwvZGlzdC9lc20vc3JjL3N0cmluZ3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHZhbGlkYXRvciBmcm9tIFwiZW1haWwtdmFsaWRhdG9yXCI7XG4vKipcbiAqIE5vcm1hbGl6ZXMgZW1haWwgc28gdGhhdCBlcXVpdmFsZW50IGVtYWlscyBjYW4gYmUgY29tcGFyZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemVFbWFpbChlbWFpbCkge1xuICAgIHJldHVybiBlbWFpbC50b0xvd2VyQ2FzZSgpLnRyaW0oKTtcbn1cbi8qKlxuICogUmV0dXJucyB3aGV0aGVyIG9yIG5vdCB0aGUgcGFyYW1ldGVyIGlzIGFuIGVtYWlsIGFkZHJlc3MuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZUVtYWlsKGVtYWlsKSB7XG4gICAgcmV0dXJuIHZhbGlkYXRvci52YWxpZGF0ZShlbWFpbCk7XG59XG4vKipcbiAqIENvbnZlcnRzIGB7IGE6IHsgYjogXCJjXCIgfSwgZDogXCJlXCIsIGY6IHsgfSB9YFxuICogSW50bzpcbiAqIGBgYFxuICogW1xuICogICBbXCJhLmJcIjogXCJjXCJdLFxuICogICBbXCJkXCI6IFwiM1wiXVxuICogXVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmbGF0dGVuT2JqZWN0KG9iaikge1xuICAgIGlmIChvYmogPT09IHVuZGVmaW5lZCB8fCBvYmogPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbiAgICBsZXQgcmVzID0gW107XG4gICAgZm9yIChjb25zdCBbaywgdl0gb2YgT2JqZWN0LmVudHJpZXMob2JqKSkge1xuICAgICAgICBpZiAodHlwZW9mIHYgPT09IFwic3RyaW5nXCIgfHwgdHlwZW9mIHYgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgICAgIHJlcy5wdXNoKFtrLCB2ICsgXCJcIl0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgZmxhdHRlbmVkQ2hpbGQgPSBmbGF0dGVuT2JqZWN0KHYpLm1hcCgoW2NrLCBjdl0pID0+IFtrICsgXCIuXCIgKyBjaywgY3ZdKTtcbiAgICAgICAgICAgIHJlcyA9IFsuLi5yZXMsIC4uLmZsYXR0ZW5lZENoaWxkXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzO1xufVxuLyoqXG4gKiBTaG9ydGhhbmQgZm9yIHtAY29kZSBKU09OLnN0cmluZ2lmeX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN0cih2YWwpIHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkodmFsLCBudWxsLCAyKTtcbn1cbi8qKlxuICogRm9ybWF0cyBhIGR1cmF0aW9uIG9mIG1pbGxpc2Vjb25kcyBpbnRvIGhoOm1tOnNzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZm10RHVyYXRpb24odG90YWxNcykge1xuICAgIGNvbnN0IHNlY19udW0gPSBNYXRoLmZsb29yKHRvdGFsTXMgLyAxMDAwKTtcbiAgICBjb25zdCBob3VycyA9IE1hdGguZmxvb3Ioc2VjX251bSAvIDM2MDApO1xuICAgIGNvbnN0IG1pbnV0ZXMgPSBNYXRoLmZsb29yKChzZWNfbnVtIC0gaG91cnMgKiAzNjAwKSAvIDYwKTtcbiAgICBjb25zdCBzZWNvbmRzID0gc2VjX251bSAtIGhvdXJzICogMzYwMCAtIG1pbnV0ZXMgKiA2MDtcbiAgICBsZXQgaG91cnNGbXQgPSBob3VycyArIFwiXCI7XG4gICAgbGV0IG1pbnV0ZXNGbXQgPSBtaW51dGVzICsgXCJcIjtcbiAgICBsZXQgc2Vjb25kc0ZtdCA9IHNlY29uZHMgKyBcIlwiO1xuICAgIGlmIChob3VycyA8IDEwKSB7XG4gICAgICAgIGhvdXJzRm10ID0gXCIwXCIgKyBob3VycztcbiAgICB9XG4gICAgaWYgKG1pbnV0ZXMgPCAxMCkge1xuICAgICAgICBtaW51dGVzRm10ID0gXCIwXCIgKyBtaW51dGVzO1xuICAgIH1cbiAgICBpZiAoc2Vjb25kcyA8IDEwKSB7XG4gICAgICAgIHNlY29uZHNGbXQgPSBcIjBcIiArIHNlY29uZHM7XG4gICAgfVxuICAgIHJldHVybiBob3Vyc0ZtdCArIFwiOlwiICsgbWludXRlc0ZtdCArIFwiOlwiICsgc2Vjb25kc0ZtdDtcbn1cbi8qKlxuICogQ29udmVydHMgYW4gZW1wdHkgc3RyaW5nIHRvIHVuZGVmaW5lZCwgd2hpbGUgcGFzc2luZyBvdGhlciBhcmd1bWVudFxuICogdmFsdWVzIHRocm91Z2ggdW5tb2RpZmllZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVtcHR5U3RyVG9VbmRlZmluZWQoaW5TdHIpIHtcbiAgICBpZiAoaW5TdHIgPT09IFwiXCIpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIGluU3RyO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHRyeVBhcnNlKHN0cikge1xuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKHN0cik7XG4gICAgfVxuICAgIGNhdGNoIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/util/dist/esm/src/strings.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/util/dist/esm/src/telegram.js":
/*!*********************************************************!*\
  !*** ./node_modules/@pcd/util/dist/esm/src/telegram.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeAnonMessageIdAndReaction: () => (/* binding */ encodeAnonMessageIdAndReaction),\n/* harmony export */   getAnonTopicNullifier: () => (/* binding */ getAnonTopicNullifier),\n/* harmony export */   getMessageWatermark: () => (/* binding */ getMessageWatermark)\n/* harmony export */ });\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-sha256 */ \"(ssr)/./node_modules/js-sha256/src/sha256.js\");\n/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(js_sha256__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction getMessageWatermark(message) {\n    const hashed = (0,js_sha256__WEBPACK_IMPORTED_MODULE_0__.sha256)(message).substring(0, 16);\n    return BigInt(\"0x\" + hashed);\n}\nfunction encodeAnonMessageIdAndReaction(anonMessageId, reaction) {\n    return `REACT:${anonMessageId}:${reaction}`;\n}\nconst getAnonTopicNullifier = () => {\n    return BigInt(\"0x\" + (0,js_sha256__WEBPACK_IMPORTED_MODULE_0__.sha256)(\"anon_message\").substring(0, 16));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC91dGlsL2Rpc3QvZXNtL3NyYy90ZWxlZ3JhbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFtQztBQUM1QjtBQUNQLG1CQUFtQixpREFBTTtBQUN6QjtBQUNBO0FBQ087QUFDUCxvQkFBb0IsY0FBYyxHQUFHLFNBQVM7QUFDOUM7QUFDTztBQUNQLHlCQUF5QixpREFBTTtBQUMvQiIsInNvdXJjZXMiOlsiL1VzZXJzL2NoYW5jZW1jYWxsaXN0ZXIvUHJvamVjdHMvenVwYXNzaHVudC9ub2RlX21vZHVsZXMvQHBjZC91dGlsL2Rpc3QvZXNtL3NyYy90ZWxlZ3JhbS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzaGEyNTYgfSBmcm9tIFwianMtc2hhMjU2XCI7XG5leHBvcnQgZnVuY3Rpb24gZ2V0TWVzc2FnZVdhdGVybWFyayhtZXNzYWdlKSB7XG4gICAgY29uc3QgaGFzaGVkID0gc2hhMjU2KG1lc3NhZ2UpLnN1YnN0cmluZygwLCAxNik7XG4gICAgcmV0dXJuIEJpZ0ludChcIjB4XCIgKyBoYXNoZWQpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZUFub25NZXNzYWdlSWRBbmRSZWFjdGlvbihhbm9uTWVzc2FnZUlkLCByZWFjdGlvbikge1xuICAgIHJldHVybiBgUkVBQ1Q6JHthbm9uTWVzc2FnZUlkfToke3JlYWN0aW9ufWA7XG59XG5leHBvcnQgY29uc3QgZ2V0QW5vblRvcGljTnVsbGlmaWVyID0gKCkgPT4ge1xuICAgIHJldHVybiBCaWdJbnQoXCIweFwiICsgc2hhMjU2KFwiYW5vbl9tZXNzYWdlXCIpLnN1YnN0cmluZygwLCAxNikpO1xufTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/util/dist/esm/src/telegram.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@pcd/util/dist/esm/src/uuidUtils.js":
/*!**********************************************************!*\
  !*** ./node_modules/@pcd/util/dist/esm/src/uuidUtils.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   randomUUID: () => (/* binding */ randomUUID)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/uuid/dist/esm-node/v4.js\");\n\nfunction randomUUID() {\n    return (0,uuid__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBjZC91dGlsL2Rpc3QvZXNtL3NyYy91dWlkVXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBa0M7QUFDM0I7QUFDUCxXQUFXLGdEQUFJO0FBQ2YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGFuY2VtY2FsbGlzdGVyL1Byb2plY3RzL3p1cGFzc2h1bnQvbm9kZV9tb2R1bGVzL0BwY2QvdXRpbC9kaXN0L2VzbS9zcmMvdXVpZFV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHY0IGFzIHV1aWQgfSBmcm9tIFwidXVpZFwiO1xuZXhwb3J0IGZ1bmN0aW9uIHJhbmRvbVVVSUQoKSB7XG4gICAgcmV0dXJuIHV1aWQoKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@pcd/util/dist/esm/src/uuidUtils.js\n");

/***/ })

};
;