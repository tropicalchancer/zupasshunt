/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/js-sha512";
exports.ids = ["vendor-chunks/js-sha512"];
exports.modules = {

/***/ "(ssr)/./node_modules/js-sha512/src/sha512.js":
/*!**********************************************!*\
  !*** ./node_modules/js-sha512/src/sha512.js ***!
  \**********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*\n * [js-sha512]{@link https://github.com/emn178/js-sha512}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA512_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA512_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA512_NO_COMMON_JS && \"object\" === 'object' && module.exports;\n  var AMD =  true && __webpack_require__.amdO;\n  var ARRAY_BUFFER = !root.JS_SHA512_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [\n    0x428A2F98, 0xD728AE22, 0x71374491, 0x23EF65CD,\n    0xB5C0FBCF, 0xEC4D3B2F, 0xE9B5DBA5, 0x8189DBBC,\n    0x3956C25B, 0xF348B538, 0x59F111F1, 0xB605D019,\n    0x923F82A4, 0xAF194F9B, 0xAB1C5ED5, 0xDA6D8118,\n    0xD807AA98, 0xA3030242, 0x12835B01, 0x45706FBE,\n    0x243185BE, 0x4EE4B28C, 0x550C7DC3, 0xD5FFB4E2,\n    0x72BE5D74, 0xF27B896F, 0x80DEB1FE, 0x3B1696B1,\n    0x9BDC06A7, 0x25C71235, 0xC19BF174, 0xCF692694,\n    0xE49B69C1, 0x9EF14AD2, 0xEFBE4786, 0x384F25E3,\n    0x0FC19DC6, 0x8B8CD5B5, 0x240CA1CC, 0x77AC9C65,\n    0x2DE92C6F, 0x592B0275, 0x4A7484AA, 0x6EA6E483,\n    0x5CB0A9DC, 0xBD41FBD4, 0x76F988DA, 0x831153B5,\n    0x983E5152, 0xEE66DFAB, 0xA831C66D, 0x2DB43210,\n    0xB00327C8, 0x98FB213F, 0xBF597FC7, 0xBEEF0EE4,\n    0xC6E00BF3, 0x3DA88FC2, 0xD5A79147, 0x930AA725,\n    0x06CA6351, 0xE003826F, 0x14292967, 0x0A0E6E70,\n    0x27B70A85, 0x46D22FFC, 0x2E1B2138, 0x5C26C926,\n    0x4D2C6DFC, 0x5AC42AED, 0x53380D13, 0x9D95B3DF,\n    0x650A7354, 0x8BAF63DE, 0x766A0ABB, 0x3C77B2A8,\n    0x81C2C92E, 0x47EDAEE6, 0x92722C85, 0x1482353B,\n    0xA2BFE8A1, 0x4CF10364, 0xA81A664B, 0xBC423001,\n    0xC24B8B70, 0xD0F89791, 0xC76C51A3, 0x0654BE30,\n    0xD192E819, 0xD6EF5218, 0xD6990624, 0x5565A910,\n    0xF40E3585, 0x5771202A, 0x106AA070, 0x32BBD1B8,\n    0x19A4C116, 0xB8D2D0C8, 0x1E376C08, 0x5141AB53,\n    0x2748774C, 0xDF8EEB99, 0x34B0BCB5, 0xE19B48A8,\n    0x391C0CB3, 0xC5C95A63, 0x4ED8AA4A, 0xE3418ACB,\n    0x5B9CCA4F, 0x7763E373, 0x682E6FF3, 0xD6B2B8A3,\n    0x748F82EE, 0x5DEFB2FC, 0x78A5636F, 0x43172F60,\n    0x84C87814, 0xA1F0AB72, 0x8CC70208, 0x1A6439EC,\n    0x90BEFFFA, 0x23631E28, 0xA4506CEB, 0xDE82BDE9,\n    0xBEF9A3F7, 0xB2C67915, 0xC67178F2, 0xE372532B,\n    0xCA273ECE, 0xEA26619C, 0xD186B8C7, 0x21C0C207,\n    0xEADA7DD6, 0xCDE0EB1E, 0xF57D4F7F, 0xEE6ED178,\n    0x06F067AA, 0x72176FBA, 0x0A637DC5, 0xA2C898A6,\n    0x113F9804, 0xBEF90DAE, 0x1B710B35, 0x131C471B,\n    0x28DB77F5, 0x23047D84, 0x32CAAB7B, 0x40C72493,\n    0x3C9EBE0A, 0x15C9BEBC, 0x431D67C4, 0x9C100D4C,\n    0x4CC5D4BE, 0xCB3E42B6, 0x597F299C, 0xFC657E2A,\n    0x5FCB6FAB, 0x3AD6FAEC, 0x6C44198C, 0x4A475817\n  ];\n\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  if (root.JS_SHA512_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA512_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, bits) {\n    return function (message) {\n      return new Sha512(bits, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (bits) {\n    var method = createOutputMethod('hex', bits);\n    method.create = function () {\n      return new Sha512(bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, bits);\n    }\n    return method;\n  };\n\n  var createHmacOutputMethod = function (outputType, bits) {\n    return function (key, message) {\n      return new HmacSha512(key, bits, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (bits) {\n    var method = createHmacOutputMethod('hex', bits);\n    method.create = function (key) {\n      return new HmacSha512(key, bits);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, bits);\n    }\n    return method;\n  };\n\n  function Sha512(bits, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[1] = blocks[2] = blocks[3] = blocks[4] =\n      blocks[5] = blocks[6] = blocks[7] = blocks[8] =\n      blocks[9] = blocks[10] = blocks[11] = blocks[12] =\n      blocks[13] = blocks[14] = blocks[15] = blocks[16] =\n      blocks[17] = blocks[18] = blocks[19] = blocks[20] =\n      blocks[21] = blocks[22] = blocks[23] = blocks[24] =\n      blocks[25] = blocks[26] = blocks[27] = blocks[28] =\n      blocks[29] = blocks[30] = blocks[31] = blocks[32] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (bits == 384) {\n      this.h0h = 0xCBBB9D5D;\n      this.h0l = 0xC1059ED8;\n      this.h1h = 0x629A292A;\n      this.h1l = 0x367CD507;\n      this.h2h = 0x9159015A;\n      this.h2l = 0x3070DD17;\n      this.h3h = 0x152FECD8;\n      this.h3l = 0xF70E5939;\n      this.h4h = 0x67332667;\n      this.h4l = 0xFFC00B31;\n      this.h5h = 0x8EB44A87;\n      this.h5l = 0x68581511;\n      this.h6h = 0xDB0C2E0D;\n      this.h6l = 0x64F98FA7;\n      this.h7h = 0x47B5481D;\n      this.h7l = 0xBEFA4FA4;\n    } else if (bits == 256) {\n      this.h0h = 0x22312194;\n      this.h0l = 0xFC2BF72C;\n      this.h1h = 0x9F555FA3;\n      this.h1l = 0xC84C64C2;\n      this.h2h = 0x2393B86B;\n      this.h2l = 0x6F53B151;\n      this.h3h = 0x96387719;\n      this.h3l = 0x5940EABD;\n      this.h4h = 0x96283EE2;\n      this.h4l = 0xA88EFFE3;\n      this.h5h = 0xBE5E1E25;\n      this.h5l = 0x53863992;\n      this.h6h = 0x2B0199FC;\n      this.h6l = 0x2C85B8AA;\n      this.h7h = 0x0EB72DDC;\n      this.h7l = 0x81C52CA2;\n    } else if (bits == 224) {\n      this.h0h = 0x8C3D37C8;\n      this.h0l = 0x19544DA2;\n      this.h1h = 0x73E19966;\n      this.h1l = 0x89DCD4D6;\n      this.h2h = 0x1DFAB7AE;\n      this.h2l = 0x32FF9C82;\n      this.h3h = 0x679DD514;\n      this.h3l = 0x582F9FCF;\n      this.h4h = 0x0F6D2B69;\n      this.h4l = 0x7BD44DA8;\n      this.h5h = 0x77E36F73;\n      this.h5l = 0x04C48942;\n      this.h6h = 0x3F9D85A8;\n      this.h6l = 0x6A1D36C8;\n      this.h7h = 0x1112E6AD;\n      this.h7l = 0x91D692A1;\n    } else { // 512\n      this.h0h = 0x6A09E667;\n      this.h0l = 0xF3BCC908;\n      this.h1h = 0xBB67AE85;\n      this.h1l = 0x84CAA73B;\n      this.h2h = 0x3C6EF372;\n      this.h2l = 0xFE94F82B;\n      this.h3h = 0xA54FF53A;\n      this.h3l = 0x5F1D36F1;\n      this.h4h = 0x510E527F;\n      this.h4l = 0xADE682D1;\n      this.h5h = 0x9B05688C;\n      this.h5l = 0x2B3E6C1F;\n      this.h6h = 0x1F83D9AB;\n      this.h6l = 0xFB41BD6B;\n      this.h7h = 0x5BE0CD19;\n      this.h7l = 0x137E2179;\n    }\n    this.bits = bits;\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n  }\n\n  Sha512.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[1] = blocks[2] = blocks[3] = blocks[4] =\n        blocks[5] = blocks[6] = blocks[7] = blocks[8] =\n        blocks[9] = blocks[10] = blocks[11] = blocks[12] =\n        blocks[13] = blocks[14] = blocks[15] = blocks[16] =\n        blocks[17] = blocks[18] = blocks[19] = blocks[20] =\n        blocks[21] = blocks[22] = blocks[23] = blocks[24] =\n        blocks[25] = blocks[26] = blocks[27] = blocks[28] =\n        blocks[29] = blocks[30] = blocks[31] = blocks[32] = 0;\n      }\n\n      if(notString) {\n        for (i = this.start; index < length && i < 128; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 128; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 128) {\n        this.block = blocks[32];\n        this.start = i - 128;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha512.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[32] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[32];\n    if (i >= 112) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[1] = blocks[2] = blocks[3] = blocks[4] =\n      blocks[5] = blocks[6] = blocks[7] = blocks[8] =\n      blocks[9] = blocks[10] = blocks[11] = blocks[12] =\n      blocks[13] = blocks[14] = blocks[15] = blocks[16] =\n      blocks[17] = blocks[18] = blocks[19] = blocks[20] =\n      blocks[21] = blocks[22] = blocks[23] = blocks[24] =\n      blocks[25] = blocks[26] = blocks[27] = blocks[28] =\n      blocks[29] = blocks[30] = blocks[31] = blocks[32] = 0;\n    }\n    blocks[30] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[31] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha512.prototype.hash = function () {\n    var h0h = this.h0h, h0l = this.h0l, h1h = this.h1h, h1l = this.h1l,\n      h2h = this.h2h, h2l = this.h2l, h3h = this.h3h, h3l = this.h3l,\n      h4h = this.h4h, h4l = this.h4l, h5h = this.h5h, h5l = this.h5l,\n      h6h = this.h6h, h6l = this.h6l, h7h = this.h7h, h7l = this.h7l,\n      blocks = this.blocks, j, s0h, s0l, s1h, s1l, c1, c2, c3, c4,\n      abh, abl, dah, dal, cdh, cdl, bch, bcl,\n      majh, majl, t1h, t1l, t2h, t2l, chh, chl;\n\n    for (j = 32; j < 160; j += 2) {\n      t1h = blocks[j - 30];\n      t1l = blocks[j - 29];\n      s0h = ((t1h >>> 1) | (t1l << 31)) ^ ((t1h >>> 8) | (t1l << 24)) ^ (t1h >>> 7);\n      s0l = ((t1l >>> 1) | (t1h << 31)) ^ ((t1l >>> 8) | (t1h << 24)) ^ ((t1l >>> 7) | t1h << 25);\n\n      t1h = blocks[j - 4];\n      t1l = blocks[j - 3];\n      s1h = ((t1h >>> 19) | (t1l << 13)) ^ ((t1l >>> 29) | (t1h << 3)) ^ (t1h >>> 6);\n      s1l = ((t1l >>> 19) | (t1h << 13)) ^ ((t1h >>> 29) | (t1l << 3)) ^ ((t1l >>> 6) | t1h << 26);\n\n      t1h = blocks[j - 32];\n      t1l = blocks[j - 31];\n      t2h = blocks[j - 14];\n      t2l = blocks[j - 13];\n\n      c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF) + (s0l & 0xFFFF) + (s1l & 0xFFFF);\n      c2 = (t2l >>> 16) + (t1l >>> 16) + (s0l >>> 16) + (s1l >>> 16) + (c1 >>> 16);\n      c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (s0h & 0xFFFF) + (s1h & 0xFFFF) + (c2 >>> 16);\n      c4 = (t2h >>> 16) + (t1h >>> 16) + (s0h >>> 16) + (s1h >>> 16) + (c3 >>> 16);\n\n      blocks[j] = (c4 << 16) | (c3 & 0xFFFF);\n      blocks[j + 1] = (c2 << 16) | (c1 & 0xFFFF);\n    }\n\n    var ah = h0h, al = h0l, bh = h1h, bl = h1l, ch = h2h, cl = h2l, dh = h3h, dl = h3l, eh = h4h, el = h4l, fh = h5h, fl = h5l, gh = h6h, gl = h6l, hh = h7h, hl = h7l;\n    bch = bh & ch;\n    bcl = bl & cl;\n    for (j = 0; j < 160; j += 8) {\n      s0h = ((ah >>> 28) | (al << 4)) ^ ((al >>> 2) | (ah << 30)) ^ ((al >>> 7) | (ah << 25));\n      s0l = ((al >>> 28) | (ah << 4)) ^ ((ah >>> 2) | (al << 30)) ^ ((ah >>> 7) | (al << 25));\n\n      s1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((el >>> 9) | (eh << 23));\n      s1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((eh >>> 9) | (el << 23));\n\n      abh = ah & bh;\n      abl = al & bl;\n      majh = abh ^ (ah & ch) ^ bch;\n      majl = abl ^ (al & cl) ^ bcl;\n\n      chh = (eh & fh) ^ (~eh & gh);\n      chl = (el & fl) ^ (~el & gl);\n\n      t1h = blocks[j];\n      t1l = blocks[j + 1];\n      t2h = K[j];\n      t2l = K[j + 1];\n\n      c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF) + (chl & 0xFFFF) + (s1l & 0xFFFF) + (hl & 0xFFFF);\n      c2 = (t2l >>> 16) + (t1l >>> 16) + (chl >>> 16) + (s1l >>> 16) + (hl >>> 16) + (c1 >>> 16);\n      c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (chh & 0xFFFF) + (s1h & 0xFFFF) + (hh & 0xFFFF) + (c2 >>> 16);\n      c4 = (t2h >>> 16) + (t1h >>> 16) + (chh >>> 16) + (s1h >>> 16) + (hh >>> 16) + (c3 >>> 16);\n\n      t1h = (c4 << 16) | (c3 & 0xFFFF);\n      t1l = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (majl & 0xFFFF) + (s0l & 0xFFFF);\n      c2 = (majl >>> 16) + (s0l >>> 16) + (c1 >>> 16);\n      c3 = (majh & 0xFFFF) + (s0h & 0xFFFF) + (c2 >>> 16);\n      c4 = (majh >>> 16) + (s0h >>> 16) + (c3 >>> 16);\n\n      t2h = (c4 << 16) | (c3 & 0xFFFF);\n      t2l = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (dl & 0xFFFF) + (t1l & 0xFFFF);\n      c2 = (dl >>> 16) + (t1l >>> 16) + (c1 >>> 16);\n      c3 = (dh & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);\n      c4 = (dh >>> 16) + (t1h >>> 16) + (c3 >>> 16);\n\n      hh = (c4 << 16) | (c3 & 0xFFFF);\n      hl = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF);\n      c2 = (t2l >>> 16) + (t1l >>> 16) + (c1 >>> 16);\n      c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);\n      c4 = (t2h >>> 16) + (t1h >>> 16) + (c3 >>> 16);\n\n      dh = (c4 << 16) | (c3 & 0xFFFF);\n      dl = (c2 << 16) | (c1 & 0xFFFF);\n\n      s0h = ((dh >>> 28) | (dl << 4)) ^ ((dl >>> 2) | (dh << 30)) ^ ((dl >>> 7) | (dh << 25));\n      s0l = ((dl >>> 28) | (dh << 4)) ^ ((dh >>> 2) | (dl << 30)) ^ ((dh >>> 7) | (dl << 25));\n\n      s1h = ((hh >>> 14) | (hl << 18)) ^ ((hh >>> 18) | (hl << 14)) ^ ((hl >>> 9) | (hh << 23));\n      s1l = ((hl >>> 14) | (hh << 18)) ^ ((hl >>> 18) | (hh << 14)) ^ ((hh >>> 9) | (hl << 23));\n\n      dah = dh & ah;\n      dal = dl & al;\n      majh = dah ^ (dh & bh) ^ abh;\n      majl = dal ^ (dl & bl) ^ abl;\n\n      chh = (hh & eh) ^ (~hh & fh);\n      chl = (hl & el) ^ (~hl & fl);\n\n      t1h = blocks[j + 2];\n      t1l = blocks[j + 3];\n      t2h = K[j + 2];\n      t2l = K[j + 3];\n\n      c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF) + (chl & 0xFFFF) + (s1l & 0xFFFF) + (gl & 0xFFFF);\n      c2 = (t2l >>> 16) + (t1l >>> 16) + (chl >>> 16) + (s1l >>> 16) + (gl >>> 16) + (c1 >>> 16);\n      c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (chh & 0xFFFF) + (s1h & 0xFFFF) + (gh & 0xFFFF) + (c2 >>> 16);\n      c4 = (t2h >>> 16) + (t1h >>> 16) + (chh >>> 16) + (s1h >>> 16) + (gh >>> 16) + (c3 >>> 16);\n\n      t1h = (c4 << 16) | (c3 & 0xFFFF);\n      t1l = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (majl & 0xFFFF) + (s0l & 0xFFFF);\n      c2 = (majl >>> 16) + (s0l >>> 16) + (c1 >>> 16);\n      c3 = (majh & 0xFFFF) + (s0h & 0xFFFF) + (c2 >>> 16);\n      c4 = (majh >>> 16) + (s0h >>> 16) + (c3 >>> 16);\n\n      t2h = (c4 << 16) | (c3 & 0xFFFF);\n      t2l = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (cl & 0xFFFF) + (t1l & 0xFFFF);\n      c2 = (cl >>> 16) + (t1l >>> 16) + (c1 >>> 16);\n      c3 = (ch & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);\n      c4 = (ch >>> 16) + (t1h >>> 16) + (c3 >>> 16);\n\n      gh = (c4 << 16) | (c3 & 0xFFFF);\n      gl = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF);\n      c2 = (t2l >>> 16) + (t1l >>> 16) + (c1 >>> 16);\n      c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);\n      c4 = (t2h >>> 16) + (t1h >>> 16) + (c3 >>> 16);\n\n      ch = (c4 << 16) | (c3 & 0xFFFF);\n      cl = (c2 << 16) | (c1 & 0xFFFF);\n\n      s0h = ((ch >>> 28) | (cl << 4)) ^ ((cl >>> 2) | (ch << 30)) ^ ((cl >>> 7) | (ch << 25));\n      s0l = ((cl >>> 28) | (ch << 4)) ^ ((ch >>> 2) | (cl << 30)) ^ ((ch >>> 7) | (cl << 25));\n\n      s1h = ((gh >>> 14) | (gl << 18)) ^ ((gh >>> 18) | (gl << 14)) ^ ((gl >>> 9) | (gh << 23));\n      s1l = ((gl >>> 14) | (gh << 18)) ^ ((gl >>> 18) | (gh << 14)) ^ ((gh >>> 9) | (gl << 23));\n\n      cdh = ch & dh;\n      cdl = cl & dl;\n      majh = cdh ^ (ch & ah) ^ dah;\n      majl = cdl ^ (cl & al) ^ dal;\n\n      chh = (gh & hh) ^ (~gh & eh);\n      chl = (gl & hl) ^ (~gl & el);\n\n      t1h = blocks[j + 4];\n      t1l = blocks[j + 5];\n      t2h = K[j + 4];\n      t2l = K[j + 5];\n\n      c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF) + (chl & 0xFFFF) + (s1l & 0xFFFF) + (fl & 0xFFFF);\n      c2 = (t2l >>> 16) + (t1l >>> 16) + (chl >>> 16) + (s1l >>> 16) + (fl >>> 16) + (c1 >>> 16);\n      c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (chh & 0xFFFF) + (s1h & 0xFFFF) + (fh & 0xFFFF) + (c2 >>> 16);\n      c4 = (t2h >>> 16) + (t1h >>> 16) + (chh >>> 16) + (s1h >>> 16) + (fh >>> 16) + (c3 >>> 16);\n\n      t1h = (c4 << 16) | (c3 & 0xFFFF);\n      t1l = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (majl & 0xFFFF) + (s0l & 0xFFFF);\n      c2 = (majl >>> 16) + (s0l >>> 16) + (c1 >>> 16);\n      c3 = (majh & 0xFFFF) + (s0h & 0xFFFF) + (c2 >>> 16);\n      c4 = (majh >>> 16) + (s0h >>> 16) + (c3 >>> 16);\n\n      t2h = (c4 << 16) | (c3 & 0xFFFF);\n      t2l = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (bl & 0xFFFF) + (t1l & 0xFFFF);\n      c2 = (bl >>> 16) + (t1l >>> 16) + (c1 >>> 16);\n      c3 = (bh & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);\n      c4 = (bh >>> 16) + (t1h >>> 16) + (c3 >>> 16);\n\n      fh = (c4 << 16) | (c3 & 0xFFFF);\n      fl = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF);\n      c2 = (t2l >>> 16) + (t1l >>> 16) + (c1 >>> 16);\n      c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);\n      c4 = (t2h >>> 16) + (t1h >>> 16) + (c3 >>> 16);\n\n      bh = (c4 << 16) | (c3 & 0xFFFF);\n      bl = (c2 << 16) | (c1 & 0xFFFF);\n\n      s0h = ((bh >>> 28) | (bl << 4)) ^ ((bl >>> 2) | (bh << 30)) ^ ((bl >>> 7) | (bh << 25));\n      s0l = ((bl >>> 28) | (bh << 4)) ^ ((bh >>> 2) | (bl << 30)) ^ ((bh >>> 7) | (bl << 25));\n\n      s1h = ((fh >>> 14) | (fl << 18)) ^ ((fh >>> 18) | (fl << 14)) ^ ((fl >>> 9) | (fh << 23));\n      s1l = ((fl >>> 14) | (fh << 18)) ^ ((fl >>> 18) | (fh << 14)) ^ ((fh >>> 9) | (fl << 23));\n\n      bch = bh & ch;\n      bcl = bl & cl;\n      majh = bch ^ (bh & dh) ^ cdh;\n      majl = bcl ^ (bl & dl) ^ cdl;\n\n      chh = (fh & gh) ^ (~fh & hh);\n      chl = (fl & gl) ^ (~fl & hl);\n\n      t1h = blocks[j + 6];\n      t1l = blocks[j + 7];\n      t2h = K[j + 6];\n      t2l = K[j + 7];\n\n      c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF) + (chl & 0xFFFF) + (s1l & 0xFFFF) + (el & 0xFFFF);\n      c2 = (t2l >>> 16) + (t1l >>> 16) + (chl >>> 16) + (s1l >>> 16) + (el >>> 16) + (c1 >>> 16);\n      c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (chh & 0xFFFF) + (s1h & 0xFFFF) + (eh & 0xFFFF) + (c2 >>> 16);\n      c4 = (t2h >>> 16) + (t1h >>> 16) + (chh >>> 16) + (s1h >>> 16) + (eh >>> 16) + (c3 >>> 16);\n\n      t1h = (c4 << 16) | (c3 & 0xFFFF);\n      t1l = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (majl & 0xFFFF) + (s0l & 0xFFFF);\n      c2 = (majl >>> 16) + (s0l >>> 16) + (c1 >>> 16);\n      c3 = (majh & 0xFFFF) + (s0h & 0xFFFF) + (c2 >>> 16);\n      c4 = (majh >>> 16) + (s0h >>> 16) + (c3 >>> 16);\n\n      t2h = (c4 << 16) | (c3 & 0xFFFF);\n      t2l = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (al & 0xFFFF) + (t1l & 0xFFFF);\n      c2 = (al >>> 16) + (t1l >>> 16) + (c1 >>> 16);\n      c3 = (ah & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);\n      c4 = (ah >>> 16) + (t1h >>> 16) + (c3 >>> 16);\n\n      eh = (c4 << 16) | (c3 & 0xFFFF);\n      el = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF);\n      c2 = (t2l >>> 16) + (t1l >>> 16) + (c1 >>> 16);\n      c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);\n      c4 = (t2h >>> 16) + (t1h >>> 16) + (c3 >>> 16);\n\n      ah = (c4 << 16) | (c3 & 0xFFFF);\n      al = (c2 << 16) | (c1 & 0xFFFF);\n    }\n\n    c1 = (h0l & 0xFFFF) + (al & 0xFFFF);\n    c2 = (h0l >>> 16) + (al >>> 16) + (c1 >>> 16);\n    c3 = (h0h & 0xFFFF) + (ah & 0xFFFF) + (c2 >>> 16);\n    c4 = (h0h >>> 16) + (ah >>> 16) + (c3 >>> 16);\n\n    this.h0h = (c4 << 16) | (c3 & 0xFFFF);\n    this.h0l = (c2 << 16) | (c1 & 0xFFFF);\n\n    c1 = (h1l & 0xFFFF) + (bl & 0xFFFF);\n    c2 = (h1l >>> 16) + (bl >>> 16) + (c1 >>> 16);\n    c3 = (h1h & 0xFFFF) + (bh & 0xFFFF) + (c2 >>> 16);\n    c4 = (h1h >>> 16) + (bh >>> 16) + (c3 >>> 16);\n\n    this.h1h = (c4 << 16) | (c3 & 0xFFFF);\n    this.h1l = (c2 << 16) | (c1 & 0xFFFF);\n\n    c1 = (h2l & 0xFFFF) + (cl & 0xFFFF);\n    c2 = (h2l >>> 16) + (cl >>> 16) + (c1 >>> 16);\n    c3 = (h2h & 0xFFFF) + (ch & 0xFFFF) + (c2 >>> 16);\n    c4 = (h2h >>> 16) + (ch >>> 16) + (c3 >>> 16);\n\n    this.h2h = (c4 << 16) | (c3 & 0xFFFF);\n    this.h2l = (c2 << 16) | (c1 & 0xFFFF);\n\n    c1 = (h3l & 0xFFFF) + (dl & 0xFFFF);\n    c2 = (h3l >>> 16) + (dl >>> 16) + (c1 >>> 16);\n    c3 = (h3h & 0xFFFF) + (dh & 0xFFFF) + (c2 >>> 16);\n    c4 = (h3h >>> 16) + (dh >>> 16) + (c3 >>> 16);\n\n    this.h3h = (c4 << 16) | (c3 & 0xFFFF);\n    this.h3l = (c2 << 16) | (c1 & 0xFFFF);\n\n    c1 = (h4l & 0xFFFF) + (el & 0xFFFF);\n    c2 = (h4l >>> 16) + (el >>> 16) + (c1 >>> 16);\n    c3 = (h4h & 0xFFFF) + (eh & 0xFFFF) + (c2 >>> 16);\n    c4 = (h4h >>> 16) + (eh >>> 16) + (c3 >>> 16);\n\n    this.h4h = (c4 << 16) | (c3 & 0xFFFF);\n    this.h4l = (c2 << 16) | (c1 & 0xFFFF);\n\n    c1 = (h5l & 0xFFFF) + (fl & 0xFFFF);\n    c2 = (h5l >>> 16) + (fl >>> 16) + (c1 >>> 16);\n    c3 = (h5h & 0xFFFF) + (fh & 0xFFFF) + (c2 >>> 16);\n    c4 = (h5h >>> 16) + (fh >>> 16) + (c3 >>> 16);\n\n    this.h5h = (c4 << 16) | (c3 & 0xFFFF);\n    this.h5l = (c2 << 16) | (c1 & 0xFFFF);\n\n    c1 = (h6l & 0xFFFF) + (gl & 0xFFFF);\n    c2 = (h6l >>> 16) + (gl >>> 16) + (c1 >>> 16);\n    c3 = (h6h & 0xFFFF) + (gh & 0xFFFF) + (c2 >>> 16);\n    c4 = (h6h >>> 16) + (gh >>> 16) + (c3 >>> 16);\n\n    this.h6h = (c4 << 16) | (c3 & 0xFFFF);\n    this.h6l = (c2 << 16) | (c1 & 0xFFFF);\n\n    c1 = (h7l & 0xFFFF) + (hl & 0xFFFF);\n    c2 = (h7l >>> 16) + (hl >>> 16) + (c1 >>> 16);\n    c3 = (h7h & 0xFFFF) + (hh & 0xFFFF) + (c2 >>> 16);\n    c4 = (h7h >>> 16) + (hh >>> 16) + (c3 >>> 16);\n\n    this.h7h = (c4 << 16) | (c3 & 0xFFFF);\n    this.h7l = (c2 << 16) | (c1 & 0xFFFF);\n  };\n\n  Sha512.prototype.hex = function () {\n    this.finalize();\n\n    var h0h = this.h0h, h0l = this.h0l, h1h = this.h1h, h1l = this.h1l,\n      h2h = this.h2h, h2l = this.h2l, h3h = this.h3h, h3l = this.h3l,\n      h4h = this.h4h, h4l = this.h4l, h5h = this.h5h, h5l = this.h5l,\n      h6h = this.h6h, h6l = this.h6l, h7h = this.h7h, h7l = this.h7l,\n      bits = this.bits;\n\n    var hex = HEX_CHARS[(h0h >> 28) & 0x0F] + HEX_CHARS[(h0h >> 24) & 0x0F] +\n      HEX_CHARS[(h0h >> 20) & 0x0F] + HEX_CHARS[(h0h >> 16) & 0x0F] +\n      HEX_CHARS[(h0h >> 12) & 0x0F] + HEX_CHARS[(h0h >> 8) & 0x0F] +\n      HEX_CHARS[(h0h >> 4) & 0x0F] + HEX_CHARS[h0h & 0x0F] +\n      HEX_CHARS[(h0l >> 28) & 0x0F] + HEX_CHARS[(h0l >> 24) & 0x0F] +\n      HEX_CHARS[(h0l >> 20) & 0x0F] + HEX_CHARS[(h0l >> 16) & 0x0F] +\n      HEX_CHARS[(h0l >> 12) & 0x0F] + HEX_CHARS[(h0l >> 8) & 0x0F] +\n      HEX_CHARS[(h0l >> 4) & 0x0F] + HEX_CHARS[h0l & 0x0F] +\n      HEX_CHARS[(h1h >> 28) & 0x0F] + HEX_CHARS[(h1h >> 24) & 0x0F] +\n      HEX_CHARS[(h1h >> 20) & 0x0F] + HEX_CHARS[(h1h >> 16) & 0x0F] +\n      HEX_CHARS[(h1h >> 12) & 0x0F] + HEX_CHARS[(h1h >> 8) & 0x0F] +\n      HEX_CHARS[(h1h >> 4) & 0x0F] + HEX_CHARS[h1h & 0x0F] +\n      HEX_CHARS[(h1l >> 28) & 0x0F] + HEX_CHARS[(h1l >> 24) & 0x0F] +\n      HEX_CHARS[(h1l >> 20) & 0x0F] + HEX_CHARS[(h1l >> 16) & 0x0F] +\n      HEX_CHARS[(h1l >> 12) & 0x0F] + HEX_CHARS[(h1l >> 8) & 0x0F] +\n      HEX_CHARS[(h1l >> 4) & 0x0F] + HEX_CHARS[h1l & 0x0F] +\n      HEX_CHARS[(h2h >> 28) & 0x0F] + HEX_CHARS[(h2h >> 24) & 0x0F] +\n      HEX_CHARS[(h2h >> 20) & 0x0F] + HEX_CHARS[(h2h >> 16) & 0x0F] +\n      HEX_CHARS[(h2h >> 12) & 0x0F] + HEX_CHARS[(h2h >> 8) & 0x0F] +\n      HEX_CHARS[(h2h >> 4) & 0x0F] + HEX_CHARS[h2h & 0x0F] +\n      HEX_CHARS[(h2l >> 28) & 0x0F] + HEX_CHARS[(h2l >> 24) & 0x0F] +\n      HEX_CHARS[(h2l >> 20) & 0x0F] + HEX_CHARS[(h2l >> 16) & 0x0F] +\n      HEX_CHARS[(h2l >> 12) & 0x0F] + HEX_CHARS[(h2l >> 8) & 0x0F] +\n      HEX_CHARS[(h2l >> 4) & 0x0F] + HEX_CHARS[h2l & 0x0F] +\n      HEX_CHARS[(h3h >> 28) & 0x0F] + HEX_CHARS[(h3h >> 24) & 0x0F] +\n      HEX_CHARS[(h3h >> 20) & 0x0F] + HEX_CHARS[(h3h >> 16) & 0x0F] +\n      HEX_CHARS[(h3h >> 12) & 0x0F] + HEX_CHARS[(h3h >> 8) & 0x0F] +\n      HEX_CHARS[(h3h >> 4) & 0x0F] + HEX_CHARS[h3h & 0x0F];\n    if (bits >= 256) {\n      hex += HEX_CHARS[(h3l >> 28) & 0x0F] + HEX_CHARS[(h3l >> 24) & 0x0F] +\n        HEX_CHARS[(h3l >> 20) & 0x0F] + HEX_CHARS[(h3l >> 16) & 0x0F] +\n        HEX_CHARS[(h3l >> 12) & 0x0F] + HEX_CHARS[(h3l >> 8) & 0x0F] +\n        HEX_CHARS[(h3l >> 4) & 0x0F] + HEX_CHARS[h3l & 0x0F];\n    }\n    if (bits >= 384) {\n      hex += HEX_CHARS[(h4h >> 28) & 0x0F] + HEX_CHARS[(h4h >> 24) & 0x0F] +\n        HEX_CHARS[(h4h >> 20) & 0x0F] + HEX_CHARS[(h4h >> 16) & 0x0F] +\n        HEX_CHARS[(h4h >> 12) & 0x0F] + HEX_CHARS[(h4h >> 8) & 0x0F] +\n        HEX_CHARS[(h4h >> 4) & 0x0F] + HEX_CHARS[h4h & 0x0F] +\n        HEX_CHARS[(h4l >> 28) & 0x0F] + HEX_CHARS[(h4l >> 24) & 0x0F] +\n        HEX_CHARS[(h4l >> 20) & 0x0F] + HEX_CHARS[(h4l >> 16) & 0x0F] +\n        HEX_CHARS[(h4l >> 12) & 0x0F] + HEX_CHARS[(h4l >> 8) & 0x0F] +\n        HEX_CHARS[(h4l >> 4) & 0x0F] + HEX_CHARS[h4l & 0x0F] +\n        HEX_CHARS[(h5h >> 28) & 0x0F] + HEX_CHARS[(h5h >> 24) & 0x0F] +\n        HEX_CHARS[(h5h >> 20) & 0x0F] + HEX_CHARS[(h5h >> 16) & 0x0F] +\n        HEX_CHARS[(h5h >> 12) & 0x0F] + HEX_CHARS[(h5h >> 8) & 0x0F] +\n        HEX_CHARS[(h5h >> 4) & 0x0F] + HEX_CHARS[h5h & 0x0F] +\n        HEX_CHARS[(h5l >> 28) & 0x0F] + HEX_CHARS[(h5l >> 24) & 0x0F] +\n        HEX_CHARS[(h5l >> 20) & 0x0F] + HEX_CHARS[(h5l >> 16) & 0x0F] +\n        HEX_CHARS[(h5l >> 12) & 0x0F] + HEX_CHARS[(h5l >> 8) & 0x0F] +\n        HEX_CHARS[(h5l >> 4) & 0x0F] + HEX_CHARS[h5l & 0x0F];\n    }\n    if (bits == 512) {\n      hex += HEX_CHARS[(h6h >> 28) & 0x0F] + HEX_CHARS[(h6h >> 24) & 0x0F] +\n        HEX_CHARS[(h6h >> 20) & 0x0F] + HEX_CHARS[(h6h >> 16) & 0x0F] +\n        HEX_CHARS[(h6h >> 12) & 0x0F] + HEX_CHARS[(h6h >> 8) & 0x0F] +\n        HEX_CHARS[(h6h >> 4) & 0x0F] + HEX_CHARS[h6h & 0x0F] +\n        HEX_CHARS[(h6l >> 28) & 0x0F] + HEX_CHARS[(h6l >> 24) & 0x0F] +\n        HEX_CHARS[(h6l >> 20) & 0x0F] + HEX_CHARS[(h6l >> 16) & 0x0F] +\n        HEX_CHARS[(h6l >> 12) & 0x0F] + HEX_CHARS[(h6l >> 8) & 0x0F] +\n        HEX_CHARS[(h6l >> 4) & 0x0F] + HEX_CHARS[h6l & 0x0F] +\n        HEX_CHARS[(h7h >> 28) & 0x0F] + HEX_CHARS[(h7h >> 24) & 0x0F] +\n        HEX_CHARS[(h7h >> 20) & 0x0F] + HEX_CHARS[(h7h >> 16) & 0x0F] +\n        HEX_CHARS[(h7h >> 12) & 0x0F] + HEX_CHARS[(h7h >> 8) & 0x0F] +\n        HEX_CHARS[(h7h >> 4) & 0x0F] + HEX_CHARS[h7h & 0x0F] +\n        HEX_CHARS[(h7l >> 28) & 0x0F] + HEX_CHARS[(h7l >> 24) & 0x0F] +\n        HEX_CHARS[(h7l >> 20) & 0x0F] + HEX_CHARS[(h7l >> 16) & 0x0F] +\n        HEX_CHARS[(h7l >> 12) & 0x0F] + HEX_CHARS[(h7l >> 8) & 0x0F] +\n        HEX_CHARS[(h7l >> 4) & 0x0F] + HEX_CHARS[h7l & 0x0F];\n    }\n    return hex;\n  };\n\n  Sha512.prototype.toString = Sha512.prototype.hex;\n\n  Sha512.prototype.digest = function () {\n    this.finalize();\n\n    var h0h = this.h0h, h0l = this.h0l, h1h = this.h1h, h1l = this.h1l,\n      h2h = this.h2h, h2l = this.h2l, h3h = this.h3h, h3l = this.h3l,\n      h4h = this.h4h, h4l = this.h4l, h5h = this.h5h, h5l = this.h5l,\n      h6h = this.h6h, h6l = this.h6l, h7h = this.h7h, h7l = this.h7l,\n      bits = this.bits;\n\n    var arr = [\n      (h0h >> 24) & 0xFF, (h0h >> 16) & 0xFF, (h0h >> 8) & 0xFF, h0h & 0xFF,\n      (h0l >> 24) & 0xFF, (h0l >> 16) & 0xFF, (h0l >> 8) & 0xFF, h0l & 0xFF,\n      (h1h >> 24) & 0xFF, (h1h >> 16) & 0xFF, (h1h >> 8) & 0xFF, h1h & 0xFF,\n      (h1l >> 24) & 0xFF, (h1l >> 16) & 0xFF, (h1l >> 8) & 0xFF, h1l & 0xFF,\n      (h2h >> 24) & 0xFF, (h2h >> 16) & 0xFF, (h2h >> 8) & 0xFF, h2h & 0xFF,\n      (h2l >> 24) & 0xFF, (h2l >> 16) & 0xFF, (h2l >> 8) & 0xFF, h2l & 0xFF,\n      (h3h >> 24) & 0xFF, (h3h >> 16) & 0xFF, (h3h >> 8) & 0xFF, h3h & 0xFF\n    ];\n\n    if (bits >= 256) {\n      arr.push((h3l >> 24) & 0xFF, (h3l >> 16) & 0xFF, (h3l >> 8) & 0xFF, h3l & 0xFF);\n    }\n    if (bits >= 384) {\n      arr.push(\n        (h4h >> 24) & 0xFF, (h4h >> 16) & 0xFF, (h4h >> 8) & 0xFF, h4h & 0xFF,\n        (h4l >> 24) & 0xFF, (h4l >> 16) & 0xFF, (h4l >> 8) & 0xFF, h4l & 0xFF,\n        (h5h >> 24) & 0xFF, (h5h >> 16) & 0xFF, (h5h >> 8) & 0xFF, h5h & 0xFF,\n        (h5l >> 24) & 0xFF, (h5l >> 16) & 0xFF, (h5l >> 8) & 0xFF, h5l & 0xFF\n      );\n    }\n    if (bits == 512) {\n      arr.push(\n        (h6h >> 24) & 0xFF, (h6h >> 16) & 0xFF, (h6h >> 8) & 0xFF, h6h & 0xFF,\n        (h6l >> 24) & 0xFF, (h6l >> 16) & 0xFF, (h6l >> 8) & 0xFF, h6l & 0xFF,\n        (h7h >> 24) & 0xFF, (h7h >> 16) & 0xFF, (h7h >> 8) & 0xFF, h7h & 0xFF,\n        (h7l >> 24) & 0xFF, (h7l >> 16) & 0xFF, (h7l >> 8) & 0xFF, h7l & 0xFF\n      );\n    }\n    return arr;\n  };\n\n  Sha512.prototype.array = Sha512.prototype.digest;\n\n  Sha512.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var bits = this.bits;\n    var buffer = new ArrayBuffer(bits / 8);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0h);\n    dataView.setUint32(4, this.h0l);\n    dataView.setUint32(8, this.h1h);\n    dataView.setUint32(12, this.h1l);\n    dataView.setUint32(16, this.h2h);\n    dataView.setUint32(20, this.h2l);\n    dataView.setUint32(24, this.h3h);\n\n    if (bits >= 256) {\n      dataView.setUint32(28, this.h3l);\n    }\n    if (bits >= 384) {\n      dataView.setUint32(32, this.h4h);\n      dataView.setUint32(36, this.h4l);\n      dataView.setUint32(40, this.h5h);\n      dataView.setUint32(44, this.h5l);\n    }\n    if (bits == 512) {\n      dataView.setUint32(48, this.h6h);\n      dataView.setUint32(52, this.h6l);\n      dataView.setUint32(56, this.h7h);\n      dataView.setUint32(60, this.h7l);\n    }\n    return buffer;\n  };\n\n  Sha512.prototype.clone = function () {\n    var hash = new Sha512(this.bits, false);\n    this.copyTo(hash);\n    return hash;\n  };\n\n  Sha512.prototype.copyTo = function (hash) {\n    var i = 0, attrs = [\n      'h0h', 'h0l', 'h1h', 'h1l', 'h2h', 'h2l', 'h3h', 'h3l', 'h4h', 'h4l', 'h5h', 'h5l', 'h6h', 'h6l', 'h7h', 'h7l',\n      'start', 'bytes', 'hBytes', 'finalized', 'hashed', 'lastByteIndex'\n    ];\n    for (i = 0; i < attrs.length; ++i) {\n      hash[attrs[i]] = this[attrs[i]];\n    }\n    for (i = 0; i < this.blocks.length; ++i) {\n      hash.blocks[i] = this.blocks[i];\n    }\n  };\n\n  function HmacSha512(key, bits, sharedMemory) {\n    var notString, type = typeof key;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var length = key.length;\n    if (!notString) {\n      var bytes = [], length = key.length, index = 0, code;\n      for (var i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >> 12));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >> 18));\n          bytes[index++] = (0x80 | ((code >> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    }\n\n    if (key.length > 128) {\n      key = (new Sha512(bits, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (var i = 0; i < 128; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha512.call(this, bits, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha512.prototype = new Sha512();\n\n  HmacSha512.prototype.finalize = function () {\n    Sha512.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha512.call(this, this.bits, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha512.prototype.finalize.call(this);\n    }\n  };\n\n  HmacSha512.prototype.clone = function () {\n    var hash = new HmacSha512([], this.bits, false);\n    this.copyTo(hash);\n    hash.inner = this.inner;\n    for (var i = 0; i < this.oKeyPad.length; ++i) {\n      hash.oKeyPad[i] = this.oKeyPad[i];\n    }\n    return hash;\n  };\n\n  var exports = createMethod(512);\n  exports.sha512 = exports;\n  exports.sha384 = createMethod(384);\n  exports.sha512_256 = createMethod(256);\n  exports.sha512_224 = createMethod(224);\n  exports.sha512.hmac = createHmacMethod(512);\n  exports.sha384.hmac = createHmacMethod(384);\n  exports.sha512_256.hmac = createHmacMethod(256);\n  exports.sha512_224.hmac = createHmacMethod(224);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha512 = exports.sha512;\n    root.sha384 = exports.sha384;\n    root.sha512_256 = exports.sha512_256;\n    root.sha512_224 = exports.sha512_224;\n    if (AMD) {\n      !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n        return exports;\n      }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    }\n  }\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/js-sha512/src/sha512.js\n");

/***/ })

};
;